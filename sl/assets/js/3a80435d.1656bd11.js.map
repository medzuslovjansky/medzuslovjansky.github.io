{"version":3,"file":"assets/js/3a80435d.1656bd11.js","mappings":"yJA0BA,MAAMA,EAAkB,CAAC,EAEnBC,EAAa,gBAAoBD,GAUhC,SAASE,EAAiBC,GAC/B,MAAMC,EAAoB,aAAiBH,GAG3C,OAAO,WACL,WAEE,MAA0B,mBAAfE,EACFA,EAAWC,GAGb,IAAIA,KAAsBD,EACnC,GACA,CAACC,EAAmBD,GAExB,CAWO,SAASE,EAAYC,GAE1B,IAAIC,EAWJ,OAREA,EADED,EAAWE,qBAEsB,mBAA1BF,EAAWH,WACdG,EAAWH,WAAWH,GACtBM,EAAWH,YAAcH,EAEfE,EAAiBI,EAAWH,YAGvC,gBACLF,EAAWQ,SACX,CAACC,MAAOH,GACRD,EAAWK,SAEf,C,wjDChFO,MAAMC,EAAc,CAC1BC,iBAAkB,GAENC,EAAe,qBAEfC,EAAS,CAEtB,EAIaC,EAAM,GACnB,SAASC,EAAkBC,GACzB,MAAMC,EAAc,CAClBC,GAAI,KACJC,OAAQ,SACRC,GAAI,KACJC,EAAG,IACHC,KAAM,OACNC,OAAQ,SACRC,GAAI,SACD,YACAR,EAAMf,aACR,mBAACwB,EAAkB,YAAEC,GAAeT,EAGvC,OAFKQ,GAAoBE,EAAqB,sBAAsB,GAC/DD,GAAaC,EAAqB,eAAe,IAC/C,UAAM,WAAW,CACtBlB,SAAU,EAAC,SAAKQ,EAAYE,OAAQ,CAClCV,UAAU,SAAKQ,EAAYC,GAAI,CAC7BU,GAAI,qBACJnB,SAAU,yBAEV,MAAM,UAAMQ,EAAYI,EAAG,CAC7BZ,SAAU,CAAC,gCAAgC,SAAKQ,EAAYK,KAAM,CAChEO,UAAW,cACXC,UAAW,KACXrB,SAAU,cACR,ojBACF,MAAM,UAAMQ,EAAYI,EAAG,CAC7BZ,SAAU,EAAC,SAAKQ,EAAYK,KAAM,CAChCO,UAAW,cACXC,UAAW,KACXrB,SAAU,cACR,4UAAmS,SAAKQ,EAAYK,KAAM,CAC5TO,UAAW,cACXC,UAAW,KACXrB,SAAU,cACR,gDACF,MAAM,UAAMQ,EAAYO,GAAI,CAC9Bf,SAAU,CAAC,MAAM,UAAMQ,EAAYG,GAAI,CACrCX,SAAU,EAAC,SAAKQ,EAAYM,OAAQ,CAClCd,SAAU,eACR,wIACF,MAAM,UAAMQ,EAAYG,GAAI,CAC9BX,SAAU,EAAC,SAAKQ,EAAYM,OAAQ,CAClCd,SAAU,YACR,+GACF,QACF,MAAM,UAAMQ,EAAYI,EAAG,CAC7BZ,SAAU,CAAC,mBAAmB,SAAKQ,EAAYK,KAAM,CACnDO,UAAW,cACXC,UAAW,KACXrB,SAAU,cACR,oHAAoG,SAAKQ,EAAYK,KAAM,CAC7HO,UAAW,cACXC,UAAW,KACXrB,SAAU,cACR,wJAAmJ,SAAKQ,EAAYK,KAAM,CAC5KO,UAAW,cACXC,UAAW,KACXrB,SAAU,cACR,4DAA4D,SAAKQ,EAAYK,KAAM,CACrFO,UAAW,cACXC,UAAW,KACXrB,SAAU,gBACR,OACF,MAAM,SAAKiB,EAAa,CAAC,GAAI,KAAM,MAAM,SAAKD,EAAoB,CAAC,KAE3E,CACe,SAASM,EAAWf,EAAQ,CAAC,GAC1C,MAAOgB,QAASC,GAAa,KACxB,YACAjB,EAAMf,YAEX,OAAOgC,GAAY,SAAKA,EAAW,IAC9BjB,EACHP,UAAU,SAAKM,EAAmB,IAC7BC,MAEFD,EAAkBC,EACzB,CACA,SAASW,EAAqBC,EAAIM,GAChC,MAAM,IAAIC,MAAM,aAAeD,EAAY,YAAc,UAAY,KAAON,EAAK,qEACnF,C","sources":["webpack://interslavic-fun/./node_modules/@mdx-js/react/lib/index.js","webpack://interslavic-fun/./i18n/sl/docusaurus-plugin-content-docs/current/learn/simple-grammar/index.md"],"sourcesContent":["/**\n * @import {MDXComponents} from 'mdx/types.js'\n * @import {Component, ReactElement, ReactNode} from 'react'\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\nimport React from 'react'\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = React.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} properties\n *   Properties.\n * @returns {ReactElement}\n *   Element.\n * @satisfies {Component}\n */\nexport function MDXProvider(properties) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (properties.disableParentContext) {\n    allComponents =\n      typeof properties.components === 'function'\n        ? properties.components(emptyComponents)\n        : properties.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(properties.components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    properties.children\n  )\n}\n","\n\nexport const frontMatter = {\n\tsidebar_position: 8\n};\nexport const contentTitle = 'Preprosta slovnica';\nexport {default as metadata} from '@site/.docusaurus/docusaurus-plugin-content-docs/default/site-i-18-n-sl-docusaurus-plugin-content-docs-current-learn-simple-grammar-index-md-3a8.json'\nexport const assets = {\n\n};\n\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nexport const toc = [];\nfunction _createMdxContent(props) {\n  const _components = {\n    h1: \"h1\",\n    header: \"header\",\n    li: \"li\",\n    p: \"p\",\n    span: \"span\",\n    strong: \"strong\",\n    ul: \"ul\",\n    ..._provideComponents(),\n    ...props.components\n  }, {CustomAfterSection, DocCardList} = _components;\n  if (!CustomAfterSection) _missingMdxReference(\"CustomAfterSection\", true);\n  if (!DocCardList) _missingMdxReference(\"DocCardList\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.header, {\n      children: _jsx(_components.h1, {\n        id: \"preprosta-slovnica\",\n        children: \"Preprosta slovnica\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Poenostavljena slovnica ali \", _jsx(_components.span, {\n        className: \"notranslate\",\n        translate: \"no\",\n        children: \"Slovianto\"\n      }), \" je zelo poenostavljena oblika medslovanščine, ki omogoča neslovanskim ljudem, da se izražajo na zelo osnovni ravni, ko obiščejo slovanske države ali vzdržujejo stik s Slovani prek interneta. Slovnica je omejena na minimum, oblike, ki niso nujno potrebne, pa se sploh ne uporabljajo. Ker ne vsebuje ničesar, kar ni mogoče najti v slovanskih jezikih, rezultat slovansko govorečim ne bo videti ali zvenelo preveč nerodno, temveč jih bo spomnil na to, kakšen jezik uporabljajo majhni otroci.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.span, {\n        className: \"notranslate\",\n        translate: \"no\",\n        children: \"Slovianto\"\n      }), \" se lahko uporablja tudi kot prvi korak v procesu učenja »pravega« medslovanskega jezika. Konstruiran je bil tako, da ga je mogoče postopoma razširiti z novimi delci, ki se pojavljajo v kompleksnejših različicah. Tako ločimo tri različne ravni, od katerih vsaka dodaja nove elemente, ki \", _jsx(_components.span, {\n        className: \"notranslate\",\n        translate: \"no\",\n        children: \"Slovianto\"\n      }), \" približajo medslovanščini:\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"1. stopnja\"\n        }), \" – najpreprostejša stopnja: brez spola, brez primerov, samo ednina/množina, ena glagolska končnica na čas\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Raven 2\"\n        }), \" – uvod v spol, preprost model spreganja glagolov (stvari, ki jih najdemo v vseh slovanskih jezikih)\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Delovni naslov \", _jsx(_components.span, {\n        className: \"notranslate\",\n        translate: \"no\",\n        children: \"Slovianto\"\n      }), \" je beseda za »slovanski esperanto«. To ime, čeprav nekoliko navihano, se nanaša na preprostost \", _jsx(_components.span, {\n        className: \"notranslate\",\n        translate: \"no\",\n        children: \"Slovianto\"\n      }), \": nima spola, primerov, vidika, malo konjugacije in nepravilnosti. Vendar se tu podobnost z esperantom konča, ker so sredstva za poenostavitev \", _jsx(_components.span, {\n        className: \"notranslate\",\n        translate: \"no\",\n        children: \"Slovianto\"\n      }), \" v resnici veliko bolj podobna tistim, ki jih uporablja \", _jsx(_components.span, {\n        className: \"notranslate\",\n        translate: \"no\",\n        children: \"Interlingua\"\n      }), \".\"]\n    }), \"\\n\", _jsx(DocCardList, {}), \"\\n\", \"\\n\", _jsx(CustomAfterSection, {})]\n  });\n}\nexport default function MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n\n"],"names":["emptyComponents","MDXContext","useMDXComponents","components","contextComponents","MDXProvider","properties","allComponents","disableParentContext","Provider","value","children","frontMatter","sidebar_position","contentTitle","assets","toc","_createMdxContent","props","_components","h1","header","li","p","span","strong","ul","CustomAfterSection","DocCardList","_missingMdxReference","id","className","translate","MDXContent","wrapper","MDXLayout","component","Error"],"sourceRoot":""}