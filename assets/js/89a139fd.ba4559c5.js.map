{"version":3,"file":"assets/js/89a139fd.ba4559c5.js","mappings":"49EAEO,MAAMA,EAAc,CAC1BC,QAAS,YACTC,OAAQ,sBACRC,OAAQ,qDACRC,YAAa,+JACbC,KAAM,CACL,cACA,UACA,UACA,oBACA,cACA,cACA,sBACA,kBACA,SACA,cACA,WACA,YACA,eAGWC,EAAe,uCAEfC,EAAS,CAEtB,EAIaC,EAAM,GACnB,SAASC,EAAkBC,GACzB,MAAMC,EAAc,CAClBC,GAAI,KACJC,OAAQ,aACL,YACAH,EAAMI,aACR,mBAACC,EAAkB,WAAEC,GAAcL,EAGtC,OAFKI,GAAoBE,EAAqB,sBAAsB,GAC/DD,GAAYC,EAAqB,cAAc,IAC7C,UAAM,WAAW,CACtBC,SAAU,EAAC,SAAKP,EAAYE,OAAQ,CAClCK,UAAU,SAAKP,EAAYC,GAAI,CAC7BO,GAAI,uCACJD,SAAU,2CAEV,MAAM,SAAKF,EAAY,CAAC,GAAI,KAAM,MAAM,SAAKD,EAAoB,CAAC,KAE1E,CACe,SAASK,EAAWV,EAAQ,CAAC,GAC1C,MAAOW,QAASC,GAAa,KACxB,YACAZ,EAAMI,YAEX,OAAOQ,GAAY,SAAKA,EAAW,IAC9BZ,EACHQ,UAAU,SAAKT,EAAmB,IAC7BC,MAEFD,EAAkBC,EACzB,CACA,SAASO,EAAqBE,EAAII,GAChC,MAAM,IAAIC,MAAM,aAAeD,EAAY,YAAc,UAAY,KAAOJ,EAAK,qEACnF,C,wDCtCA,MAAMM,EAAkB,CAAC,EAEnBC,EAAa,gBAAoBD,GAUhC,SAASE,EAAiBb,GAC/B,MAAMc,EAAoB,aAAiBF,GAG3C,OAAO,WACL,WAEE,MAA0B,mBAAfZ,EACFA,EAAWc,GAGb,IAAIA,KAAsBd,EACnC,GACA,CAACc,EAAmBd,GAExB,CAWO,SAASe,EAAYC,GAE1B,IAAIC,EAWJ,OAREA,EADED,EAAWE,qBAEsB,mBAA1BF,EAAWhB,WACdgB,EAAWhB,WAAWW,GACtBK,EAAWhB,YAAcW,EAEfE,EAAiBG,EAAWhB,YAGvC,gBACLY,EAAWO,SACX,CAACC,MAAOH,GACRD,EAAWZ,SAEf,C","sources":["webpack://interslavic-fun/./docs/learn/misc/numbers-1-10.md","webpack://interslavic-fun/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["\n\nexport const frontMatter = {\n\tlicense: 'republish',\n\tauthor: 'Jan van Steenbergen',\n\torigin: 'http://steen.free.fr/interslavic/numbers_1-10.html',\n\tdescription: 'Explore the numbers 1-10 across various Slavic languages, including natural, constructed, and fictional dialects, for a comprehensive linguistic comparison.',\n\ttags: [\n\t\t'interslavic',\n\t\t'numbers',\n\t\t'grammar',\n\t\t'language learning',\n\t\t'linguistics',\n\t\t'comparative',\n\t\t'old church slavonic',\n\t\t'old novgorodian',\n\t\t'hutsul',\n\t\t'lemko-rusyn',\n\t\t'polabian',\n\t\t'kashubian',\n\t\t'podlachian'\n\t]\n};\nexport const contentTitle = 'The Numbers 1-10 in Slavic Languages';\nexport {default as metadata} from '@site/.docusaurus/docusaurus-plugin-content-docs/default/site-docs-learn-misc-numbers-1-10-md-89a.json'\nexport const assets = {\n\n};\n\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nexport const toc = [];\nfunction _createMdxContent(props) {\n  const _components = {\n    h1: \"h1\",\n    header: \"header\",\n    ..._provideComponents(),\n    ...props.components\n  }, {CustomAfterSection, MDNumbers1} = _components;\n  if (!CustomAfterSection) _missingMdxReference(\"CustomAfterSection\", true);\n  if (!MDNumbers1) _missingMdxReference(\"MDNumbers1\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.header, {\n      children: _jsx(_components.h1, {\n        id: \"the-numbers-1-10-in-slavic-languages\",\n        children: \"The Numbers 1-10 in Slavic Languages\"\n      })\n    }), \"\\n\", _jsx(MDNumbers1, {}), \"\\n\", \"\\n\", _jsx(CustomAfterSection, {})]\n  });\n}\nexport default function MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n\n","/**\n * @import {MDXComponents} from 'mdx/types.js'\n * @import {Component, ReactElement, ReactNode} from 'react'\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\nimport React from 'react'\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = React.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} properties\n *   Properties.\n * @returns {ReactElement}\n *   Element.\n * @satisfies {Component}\n */\nexport function MDXProvider(properties) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (properties.disableParentContext) {\n    allComponents =\n      typeof properties.components === 'function'\n        ? properties.components(emptyComponents)\n        : properties.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(properties.components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    properties.children\n  )\n}\n"],"names":["frontMatter","license","author","origin","description","tags","contentTitle","assets","toc","_createMdxContent","props","_components","h1","header","components","CustomAfterSection","MDNumbers1","_missingMdxReference","children","id","MDXContent","wrapper","MDXLayout","component","Error","emptyComponents","MDXContext","useMDXComponents","contextComponents","MDXProvider","properties","allComponents","disableParentContext","Provider","value"],"sourceRoot":""}