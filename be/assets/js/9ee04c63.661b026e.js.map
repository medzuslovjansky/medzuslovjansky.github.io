{"version":3,"file":"assets/js/9ee04c63.661b026e.js","mappings":"mPAEO,MAAMA,EAAc,CAC1BC,iBAAkB,EAClBC,QAAS,YACTC,OAAQ,sBACRC,OAAQ,iDAEIC,EAAe,yDACfC,EAAW,CACtB,GAAM,sBACN,MAAS,yDACT,YAAe,orFACf,OAAU,8EACV,cAAiB,gBACjB,KAAQ,kBACR,UAAa,qBACb,OAAS,EACT,UAAY,EACZ,QAAW,+IACX,KAAQ,GACR,QAAW,UACX,cAAiB,oBACjB,cAAiB,aACjB,gBAAmB,EACnB,YAAe,CACb,iBAAoB,EACpB,QAAW,YACX,OAAU,sBACV,OAAU,iDAEZ,QAAW,eACX,SAAY,CACV,MAAS,+DACT,UAAa,2BAEf,KAAQ,CACN,MAAS,yDACT,UAAa,4BAGJC,EAAS,CAEtB,EAIaC,EAAM,GACnB,SAASC,EAAkBC,GACzB,MAAMC,EAAc,CAClBC,GAAI,KACJC,EAAG,QACA,aACAH,EAAMI,aACR,mBAACC,EAAkB,oBAAEC,EAAmB,YAAEC,GAAeN,EAI5D,OAHKI,GAAoBG,EAAqB,sBAAsB,GAC/DF,GAAqBE,EAAqB,uBAAuB,GACjED,GAAaC,EAAqB,eAAe,IAC/C,UAAM,WAAW,CACtBC,SAAU,EAAC,SAAKR,EAAYC,GAAI,CAC9BQ,GAAI,yDACJD,SAAU,2DACR,MAAM,SAAKH,EAAqB,CAAC,GAAI,MAAM,SAAKL,EAAYE,EAAG,CACjEM,SAAU,srFACR,MAAM,SAAKR,EAAYE,EAAG,CAC5BM,SAAU,qrCACR,MAAM,SAAKR,EAAYE,EAAG,CAC5BM,SAAU,0pDACR,MAAM,SAAKF,EAAa,CAAC,GAAI,KAAM,MAAM,SAAKF,EAAoB,CAAC,KAE3E,CACe,SAASM,EAAWX,EAAQ,CAAC,GAC1C,MAAOY,QAASC,GAAa,KACxB,aACAb,EAAMI,YAEX,OAAOS,GAAY,SAAKA,EAAW,IAC9Bb,EACHS,UAAU,SAAKV,EAAmB,IAC7BC,MAEFD,EAAkBC,EACzB,CACA,SAASQ,EAAqBE,EAAII,GAChC,MAAM,IAAIC,MAAM,aAAeD,EAAY,YAAc,UAAY,KAAOJ,EAAK,qEACnF,C,0DCpDO,MAAMM,EAAa,gBAAoB,CAAC,GAiCxC,SAASC,EAAiBb,GAC/B,MAAMc,EAAoB,aAAiBF,GAG3C,OAAO,WAAc,IAEO,mBAAfZ,EACFA,EAAWc,GAGb,IAAIA,KAAsBd,IAChC,CAACc,EAAmBd,GACzB,CAGA,MAAMe,EAAc,CAAC,EAQd,SAASC,GAAY,WAAChB,EAAU,SAAEK,EAAQ,qBAAEY,IAEjD,IAAIC,EAWJ,OAREA,EADED,EAEsB,mBAAfjB,EACHA,EAAW,CAAC,GACZA,GAAce,EAEJF,EAAiBb,GAG5B,gBACLY,EAAWO,SACX,CAACC,MAAOF,GACRb,EAEJ,C","sources":["webpack://interslavic-fun/./i18n/be/docusaurus-plugin-content-docs/current/learn/grammar/index.md","webpack://interslavic-fun/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["\n\nexport const frontMatter = {\n\tsidebar_position: 6,\n\tlicense: 'republish',\n\tauthor: 'Jan van Steenbergen',\n\torigin: 'http://steen.free.fr/interslavic/grammar.html'\n};\nexport const contentTitle = 'Граматыка';\nexport const metadata = {\n  \"id\": \"learn/grammar/index\",\n  \"title\": \"Граматыка\",\n  \"description\": \"Міжславянская мова - гэта натуральная і вельмі шырока зразумелая мова для славян. Ён цалкам заснаваны на агульных для славянскіх моў формах, а калі агульных формаў няма, на мажарытарных рашэннях. Ён мае граматычны род, шэсць склонаў плюс неабавязковы клічны склон, дзеяслоўны аспект і поўнае спражэнне – рэчы, з якімі знаёмы практычна кожны славянін. Акрамя таго, ён таксама змяшчае некаторыя матэрыялы, якія адсутнічаюць у большасці славянскіх моў, але веданне якіх можа быць вельмі карысным для разумення моў, якія ім карыстаюцца.\",\n  \"source\": \"@site/i18n/be/docusaurus-plugin-content-docs/current/learn/grammar/index.md\",\n  \"sourceDirName\": \"learn/grammar\",\n  \"slug\": \"/learn/grammar/\",\n  \"permalink\": \"/be/learn/grammar/\",\n  \"draft\": false,\n  \"unlisted\": false,\n  \"editUrl\": \"https://github.com/medzuslovjansky/medzuslovjansky.github.io/edit/main/i18n/be/docusaurus-plugin-content-docs/current/learn/grammar/index.md\",\n  \"tags\": [],\n  \"version\": \"current\",\n  \"lastUpdatedBy\": \"Bogdan Tishchenko\",\n  \"lastUpdatedAt\": 1741954126000,\n  \"sidebarPosition\": 6,\n  \"frontMatter\": {\n    \"sidebar_position\": 6,\n    \"license\": \"republish\",\n    \"author\": \"Jan van Steenbergen\",\n    \"origin\": \"http://steen.free.fr/interslavic/grammar.html\"\n  },\n  \"sidebar\": \"learnSidebar\",\n  \"previous\": {\n    \"title\": \"Вымаўленне\",\n    \"permalink\": \"/be/learn/pronunciation\"\n  },\n  \"next\": {\n    \"title\": \"Назоўнікі\",\n    \"permalink\": \"/be/learn/grammar/nouns\"\n  }\n};\nexport const assets = {\n\n};\n\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nexport const toc = [];\nfunction _createMdxContent(props) {\n  const _components = {\n    h1: \"h1\",\n    p: \"p\",\n    ..._provideComponents(),\n    ...props.components\n  }, {CustomAfterSection, CustomBeforeSection, DocCardList} = _components;\n  if (!CustomAfterSection) _missingMdxReference(\"CustomAfterSection\", true);\n  if (!CustomBeforeSection) _missingMdxReference(\"CustomBeforeSection\", true);\n  if (!DocCardList) _missingMdxReference(\"DocCardList\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      id: \"граматыка\",\n      children: \"Граматыка\"\n    }), \"\\n\", _jsx(CustomBeforeSection, {}), \"\\n\", _jsx(_components.p, {\n      children: \"Міжславянская мова - гэта натуральная і вельмі шырока зразумелая мова для славян. Ён цалкам заснаваны на агульных для славянскіх моў формах, а калі агульных формаў няма, на мажарытарных рашэннях. Ён мае граматычны род, шэсць склонаў плюс неабавязковы клічны склон, дзеяслоўны аспект і поўнае спражэнне – рэчы, з якімі знаёмы практычна кожны славянін. Акрамя таго, ён таксама змяшчае некаторыя матэрыялы, якія адсутнічаюць у большасці славянскіх моў, але веданне якіх можа быць вельмі карысным для разумення моў, якія ім карыстаюцца.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"У параўнаньні з натуральнымі славянскімі мовамі гэтая граматычная мадэль застаецца даволі простай і рэгулярнай. Выключэнні рэдкія, і большасць нерэгулярнасцяў ліквідуецца сродкамі саміх славянскіх моў, без унясення штучнасці.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Гэтая мадэль граматыкі ў першую чаргу прызначана для зносін паміж славянамі розных нацыянальнасцяў, але, вядома, можа выкарыстоўвацца і неславянамі, якія жадаюць мець магчымасць мець зносіны на больш сур'ёзным узроўні. Ён падыходзіць для кантактаў і публікацый, а таксама як сродак для таго, каб зразумець прыроду славянства.\"\n    }), \"\\n\", _jsx(DocCardList, {}), \"\\n\", \"\\n\", _jsx(CustomAfterSection, {})]\n  });\n}\nexport default function MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["frontMatter","sidebar_position","license","author","origin","contentTitle","metadata","assets","toc","_createMdxContent","props","_components","h1","p","components","CustomAfterSection","CustomBeforeSection","DocCardList","_missingMdxReference","children","id","MDXContent","wrapper","MDXLayout","component","Error","MDXContext","useMDXComponents","contextComponents","emptyObject","MDXProvider","disableParentContext","allComponents","Provider","value"],"sourceRoot":""}