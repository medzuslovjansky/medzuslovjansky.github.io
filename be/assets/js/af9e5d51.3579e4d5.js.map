{"version":3,"file":"assets/js/af9e5d51.3579e4d5.js","mappings":"4xCAEO,MAAMA,EAAc,CAAC,EACfC,EAAe,0BAEfC,EAAS,CAEtB,EAIaC,EAAM,GACnB,SAASC,EAAkBC,GACzB,MAAMC,EAAc,CAClBC,EAAG,IACHC,GAAI,KACJC,OAAQ,SACRC,EAAG,QACA,YACAL,EAAMM,aACR,mBAACC,EAAkB,uBAAEC,GAA0BP,EAGlD,OAFKM,GAAoBE,EAAqB,sBAAsB,GAC/DD,GAAwBC,EAAqB,0BAA0B,IACrE,UAAM,WAAW,CACtBC,SAAU,EAAC,SAAKT,EAAYG,OAAQ,CAClCM,UAAU,SAAKT,EAAYE,GAAI,CAC7BQ,GAAI,0BACJD,SAAU,8BAEV,MAAM,UAAMT,EAAYI,EAAG,CAC7BK,SAAU,CAAC,iLAAiL,SAAKT,EAAYC,EAAG,CAC9MU,KAAM,2FACNF,SAAU,eACR,6HACF,MAAM,SAAKF,EAAwB,CAAC,GAAI,KAAM,MAAM,SAAKD,EAAoB,CAAC,KAEtF,CACe,SAASM,EAAWb,EAAQ,CAAC,GAC1C,MAAOc,QAASC,GAAa,KACxB,YACAf,EAAMM,YAEX,OAAOS,GAAY,SAAKA,EAAW,IAC9Bf,EACHU,UAAU,SAAKX,EAAmB,IAC7BC,MAEFD,EAAkBC,EACzB,CACA,SAASS,EAAqBE,EAAIK,GAChC,MAAM,IAAIC,MAAM,aAAeD,EAAY,YAAc,UAAY,KAAOL,EAAK,qEACnF,C,wDCzBA,MAAMO,EAAkB,CAAC,EAEnBC,EAAa,gBAAoBD,GAUhC,SAASE,EAAiBd,GAC/B,MAAMe,EAAoB,aAAiBF,GAG3C,OAAO,WACL,WAEE,MAA0B,mBAAfb,EACFA,EAAWe,GAGb,IAAIA,KAAsBf,EACnC,GACA,CAACe,EAAmBf,GAExB,CAWO,SAASgB,EAAYC,GAE1B,IAAIC,EAWJ,OAREA,EADED,EAAWE,qBAEsB,mBAA1BF,EAAWjB,WACdiB,EAAWjB,WAAWY,GACtBK,EAAWjB,YAAcY,EAEfE,EAAiBG,EAAWjB,YAGvC,gBACLa,EAAWO,SACX,CAACC,MAAOH,GACRD,EAAWb,SAEf,C","sources":["webpack://interslavic-fun/./docs/resources/applets/intelligibility.md","webpack://interslavic-fun/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["\n\nexport const frontMatter = {};\nexport const contentTitle = 'Intelligibility Builder';\nexport {default as metadata} from '@site/.docusaurus/docusaurus-plugin-content-docs/default/site-docs-resources-applets-intelligibility-md-af9.json'\nexport const assets = {\n\n};\n\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nexport const toc = [];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    h1: \"h1\",\n    header: \"header\",\n    p: \"p\",\n    ..._provideComponents(),\n    ...props.components\n  }, {CustomAfterSection, IntelligibilityBuilder} = _components;\n  if (!CustomAfterSection) _missingMdxReference(\"CustomAfterSection\", true);\n  if (!IntelligibilityBuilder) _missingMdxReference(\"IntelligibilityBuilder\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.header, {\n      children: _jsx(_components.h1, {\n        id: \"intelligibility-builder\",\n        children: \"Intelligibility Builder\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Construct a special notation to indicate the intelligibility of a given form in the Slavic languages. Drag and drop a synset XML file to the table below to get started (see \", _jsx(_components.a, {\n        href: \"https://raw.githubusercontent.com/medzuslovjansky/database/beta/synsets/00/00/01/oko.xml\",\n        children: \"an example\"\n      }), \"). After you finish with the table, hover over the code and click the \\\"Copy\\\" button to copy the code to your clipboard.\"]\n    }), \"\\n\", _jsx(IntelligibilityBuilder, {}), \"\\n\", \"\\n\", _jsx(CustomAfterSection, {})]\n  });\n}\nexport default function MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n\n","/**\n * @import {MDXComponents} from 'mdx/types.js'\n * @import {Component, ReactElement, ReactNode} from 'react'\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\nimport React from 'react'\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = React.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} properties\n *   Properties.\n * @returns {ReactElement}\n *   Element.\n * @satisfies {Component}\n */\nexport function MDXProvider(properties) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (properties.disableParentContext) {\n    allComponents =\n      typeof properties.components === 'function'\n        ? properties.components(emptyComponents)\n        : properties.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(properties.components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    properties.children\n  )\n}\n"],"names":["frontMatter","contentTitle","assets","toc","_createMdxContent","props","_components","a","h1","header","p","components","CustomAfterSection","IntelligibilityBuilder","_missingMdxReference","children","id","href","MDXContent","wrapper","MDXLayout","component","Error","emptyComponents","MDXContext","useMDXComponents","contextComponents","MDXProvider","properties","allComponents","disableParentContext","Provider","value"],"sourceRoot":""}