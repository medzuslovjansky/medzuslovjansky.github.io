{"version":3,"file":"assets/js/c1b45d1a.6d761adf.js","mappings":"ghIAEO,MAAMA,EAAc,CAC1BC,iBAAkB,GAENC,EAAe,oGAEfC,EAAS,CAEtB,EAIaC,EAAM,GACnB,SAASC,EAAkBC,GACzB,MAAMC,EAAc,CAClBC,GAAI,KACJC,OAAQ,SACRC,GAAI,KACJC,EAAG,IACHC,KAAM,OACNC,OAAQ,SACRC,GAAI,SACD,YACAR,EAAMS,aACR,mBAACC,EAAkB,YAAEC,GAAeV,EAGvC,OAFKS,GAAoBE,EAAqB,sBAAsB,GAC/DD,GAAaC,EAAqB,eAAe,IAC/C,UAAM,WAAW,CACtBC,SAAU,EAAC,SAAKZ,EAAYE,OAAQ,CAClCU,UAAU,SAAKZ,EAAYC,GAAI,CAC7BY,GAAI,oGACJD,SAAU,wGAEV,MAAM,UAAMZ,EAAYI,EAAG,CAC7BQ,SAAU,CAAC,4IAA8B,SAAKZ,EAAYK,KAAM,CAC9DS,UAAW,cACXC,UAAW,KACXH,SAAU,cACR,6oFACF,MAAM,UAAMZ,EAAYI,EAAG,CAC7BQ,SAAU,EAAC,SAAKZ,EAAYK,KAAM,CAChCS,UAAW,cACXC,UAAW,KACXH,SAAU,cACR,0oDAAwU,SAAKZ,EAAYK,KAAM,CACjWS,UAAW,cACXC,UAAW,KACXH,SAAU,cACR,yGACF,MAAM,UAAMZ,EAAYO,GAAI,CAC9BK,SAAU,CAAC,MAAM,UAAMZ,EAAYG,GAAI,CACrCS,SAAU,EAAC,SAAKZ,EAAYM,OAAQ,CAClCM,SAAU,uDACR,qiBACF,MAAM,UAAMZ,EAAYG,GAAI,CAC9BS,SAAU,EAAC,SAAKZ,EAAYM,OAAQ,CAClCM,SAAU,uDACR,ykBACF,QACF,MAAM,UAAMZ,EAAYI,EAAG,CAC7BQ,SAAU,CAAC,4GAAuB,SAAKZ,EAAYK,KAAM,CACvDS,UAAW,cACXC,UAAW,KACXH,SAAU,cACR,ihBAA4G,SAAKZ,EAAYK,KAAM,CACrIS,UAAW,cACXC,UAAW,KACXH,SAAU,cACR,00BAA4K,SAAKZ,EAAYK,KAAM,CACrMS,UAAW,cACXC,UAAW,KACXH,SAAU,cACR,gUAAiE,SAAKZ,EAAYK,KAAM,CAC1FS,UAAW,cACXC,UAAW,KACXH,SAAU,gBACR,OACF,MAAM,SAAKF,EAAa,CAAC,GAAI,KAAM,MAAM,SAAKD,EAAoB,CAAC,KAE3E,CACe,SAASO,EAAWjB,EAAQ,CAAC,GAC1C,MAAOkB,QAASC,GAAa,KACxB,YACAnB,EAAMS,YAEX,OAAOU,GAAY,SAAKA,EAAW,IAC9BnB,EACHa,UAAU,SAAKd,EAAmB,IAC7BC,MAEFD,EAAkBC,EACzB,CACA,SAASY,EAAqBE,EAAIM,GAChC,MAAM,IAAIC,MAAM,aAAeD,EAAY,YAAc,UAAY,KAAON,EAAK,qEACnF,C,wDCrEA,MAAMQ,EAAkB,CAAC,EAEnBC,EAAa,gBAAoBD,GAUhC,SAASE,EAAiBf,GAC/B,MAAMgB,EAAoB,aAAiBF,GAG3C,OAAO,WACL,WAEE,MAA0B,mBAAfd,EACFA,EAAWgB,GAGb,IAAIA,KAAsBhB,EACnC,GACA,CAACgB,EAAmBhB,GAExB,CAWO,SAASiB,EAAYC,GAE1B,IAAIC,EAWJ,OAREA,EADED,EAAWE,qBAEsB,mBAA1BF,EAAWlB,WACdkB,EAAWlB,WAAWa,GACtBK,EAAWlB,YAAca,EAEfE,EAAiBG,EAAWlB,YAGvC,gBACLc,EAAWO,SACX,CAACC,MAAOH,GACRD,EAAWd,SAEf,C","sources":["webpack://interslavic-fun/./i18n/be/docusaurus-plugin-content-docs/current/learn/simple-grammar/index.md","webpack://interslavic-fun/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["\n\nexport const frontMatter = {\n\tsidebar_position: 8\n};\nexport const contentTitle = 'Простая граматыка';\nexport {default as metadata} from '@site/.docusaurus/docusaurus-plugin-content-docs/default/site-i-18-n-be-docusaurus-plugin-content-docs-current-learn-simple-grammar-index-md-c1b.json'\nexport const assets = {\n\n};\n\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nexport const toc = [];\nfunction _createMdxContent(props) {\n  const _components = {\n    h1: \"h1\",\n    header: \"header\",\n    li: \"li\",\n    p: \"p\",\n    span: \"span\",\n    strong: \"strong\",\n    ul: \"ul\",\n    ..._provideComponents(),\n    ...props.components\n  }, {CustomAfterSection, DocCardList} = _components;\n  if (!CustomAfterSection) _missingMdxReference(\"CustomAfterSection\", true);\n  if (!DocCardList) _missingMdxReference(\"DocCardList\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.header, {\n      children: _jsx(_components.h1, {\n        id: \"простая-граматыка\",\n        children: \"Простая граматыка\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Спрошчаная граматыка, або \", _jsx(_components.span, {\n        className: \"notranslate\",\n        translate: \"no\",\n        children: \"Slovianto\"\n      }), \", - гэта вельмі спрошчаная форма міжславянскай мовы, якая дазваляе неславянам выказвацца на вельмі простым узроўні, наведваючы славянскія краіны або падтрымліваючы кантакты са славянамі праз Інтэрнэт. Граматыка абмежаваная мінімумам, а формы, якія не з'яўляюцца строга неабходнымі, не выкарыстоўваюцца наогул. Паколькі ў ім няма нічога, што нельга знайсці ў славянскіх мовах, вынік не будзе выглядаць або гучаць занадта нязграбна для носьбітаў славянскай мовы, а хутчэй нагадае ім мову, якой карыстаюцца маленькія дзеці.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.span, {\n        className: \"notranslate\",\n        translate: \"no\",\n        children: \"Slovianto\"\n      }), \" таксама можна выкарыстоўваць як першы крок у працэсе вывучэння «сапраўднай» міжславянскай мовы. Ён быў пабудаваны такім чынам, каб яго можна было паступова пашыраць новымі часткамі, якія сустракаюцца ў больш складаных версіях. Такім чынам, мы вылучаем тры розныя ўзроўні, кожны з якіх дадае новыя элементы, якія набліжаюць \", _jsx(_components.span, {\n        className: \"notranslate\",\n        translate: \"no\",\n        children: \"Slovianto\"\n      }), \" да міжславянскага:\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Узровень 1\"\n        }), \" – самы просты ўзровень: без роду, без склонаў, толькі адзіночны/множны лік, адзін канчатак дзеяслова на час\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Узровень 2\"\n        }), \" – увядзенне ў гендэр, простая мадэль для спражэння дзеясловаў (рэчы, якія можна знайсці ва ўсіх славянскіх мовах)\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Працоўны загаловак \", _jsx(_components.span, {\n        className: \"notranslate\",\n        translate: \"no\",\n        children: \"Slovianto\"\n      }), \" — гэта слова для «славянскага эсперанта». Гэтая назва, хоць і крыху насмешлівая, адносіцца да прастаты \", _jsx(_components.span, {\n        className: \"notranslate\",\n        translate: \"no\",\n        children: \"Slovianto\"\n      }), \": яна не мае ні роду, ні падежаў, ні аспекту, мала спалучэнняў і нерэгулярнасці. Тым не менш, на гэтым падабенства з эсперанта заканчваецца, таму што сродкі спрашчэння \", _jsx(_components.span, {\n        className: \"notranslate\",\n        translate: \"no\",\n        children: \"Slovianto\"\n      }), \" насамрэч значна больш падобныя да тых, што выкарыстоўваюцца \", _jsx(_components.span, {\n        className: \"notranslate\",\n        translate: \"no\",\n        children: \"Interlingua\"\n      }), \".\"]\n    }), \"\\n\", _jsx(DocCardList, {}), \"\\n\", \"\\n\", _jsx(CustomAfterSection, {})]\n  });\n}\nexport default function MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n\n","/**\n * @import {MDXComponents} from 'mdx/types.js'\n * @import {Component, ReactElement, ReactNode} from 'react'\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\nimport React from 'react'\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = React.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} properties\n *   Properties.\n * @returns {ReactElement}\n *   Element.\n * @satisfies {Component}\n */\nexport function MDXProvider(properties) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (properties.disableParentContext) {\n    allComponents =\n      typeof properties.components === 'function'\n        ? properties.components(emptyComponents)\n        : properties.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(properties.components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    properties.children\n  )\n}\n"],"names":["frontMatter","sidebar_position","contentTitle","assets","toc","_createMdxContent","props","_components","h1","header","li","p","span","strong","ul","components","CustomAfterSection","DocCardList","_missingMdxReference","children","id","className","translate","MDXContent","wrapper","MDXLayout","component","Error","emptyComponents","MDXContext","useMDXComponents","contextComponents","MDXProvider","properties","allComponents","disableParentContext","Provider","value"],"sourceRoot":""}