{"version":3,"file":"assets/js/9eb6f541.f408d996.js","mappings":"0zDAEO,MAAMA,EAAc,CAC1BC,iBAAkB,GAENC,EAAe,0BAEfC,EAAS,CAEtB,EAIaC,EAAM,GACnB,SAASC,EAAkBC,GACzB,MAAMC,EAAc,CAClBC,GAAI,KACJC,OAAQ,SACRC,GAAI,KACJC,EAAG,IACHC,KAAM,OACNC,OAAQ,SACRC,GAAI,SACD,YACAR,EAAMS,aACR,mBAACC,EAAkB,YAAEC,GAAeV,EAGvC,OAFKS,GAAoBE,EAAqB,sBAAsB,GAC/DD,GAAaC,EAAqB,eAAe,IAC/C,UAAM,WAAW,CACtBC,SAAU,EAAC,SAAKZ,EAAYE,OAAQ,CAClCU,UAAU,SAAKZ,EAAYC,GAAI,CAC7BY,GAAI,0BACJD,SAAU,8BAEV,MAAM,UAAMZ,EAAYI,EAAG,CAC7BQ,SAAU,CAAC,0CAAkC,SAAKZ,EAAYK,KAAM,CAClES,UAAW,cACXC,UAAW,KACXH,SAAU,cACR,osBACF,MAAM,UAAMZ,EAAYI,EAAG,CAC7BQ,SAAU,EAAC,SAAKZ,EAAYK,KAAM,CAChCS,UAAW,cACXC,UAAW,KACXH,SAAU,cACR,mcAA8R,SAAKZ,EAAYK,KAAM,CACvTS,UAAW,cACXC,UAAW,KACXH,SAAU,cACR,mCACF,MAAM,UAAMZ,EAAYO,GAAI,CAC9BK,SAAU,CAAC,MAAM,UAAMZ,EAAYG,GAAI,CACrCS,SAAU,EAAC,SAAKZ,EAAYM,OAAQ,CAClCM,SAAU,qBACR,2LACF,MAAM,UAAMZ,EAAYG,GAAI,CAC9BS,SAAU,EAAC,SAAKZ,EAAYM,OAAQ,CAClCM,SAAU,qBACR,0JACF,QACF,MAAM,UAAMZ,EAAYI,EAAG,CAC7BQ,SAAU,CAAC,yBAAmB,SAAKZ,EAAYK,KAAM,CACnDS,UAAW,cACXC,UAAW,KACXH,SAAU,cACR,sJAAoH,SAAKZ,EAAYK,KAAM,CAC7IS,UAAW,cACXC,UAAW,KACXH,SAAU,cACR,8NAAkJ,SAAKZ,EAAYK,KAAM,CAC3KS,UAAW,cACXC,UAAW,KACXH,SAAU,cACR,4HAA+E,SAAKZ,EAAYK,KAAM,CACxGS,UAAW,cACXC,UAAW,KACXH,SAAU,gBACR,OACF,MAAM,SAAKF,EAAa,CAAC,GAAI,KAAM,MAAM,SAAKD,EAAoB,CAAC,KAE3E,CACe,SAASO,EAAWjB,EAAQ,CAAC,GAC1C,MAAOkB,QAASC,GAAa,KACxB,YACAnB,EAAMS,YAEX,OAAOU,GAAY,SAAKA,EAAW,IAC9BnB,EACHa,UAAU,SAAKd,EAAmB,IAC7BC,MAEFD,EAAkBC,EACzB,CACA,SAASY,EAAqBE,EAAIM,GAChC,MAAM,IAAIC,MAAM,aAAeD,EAAY,YAAc,UAAY,KAAON,EAAK,qEACnF,C,wDCrEA,MAAMQ,EAAkB,CAAC,EAEnBC,EAAa,gBAAoBD,GAUhC,SAASE,EAAiBf,GAC/B,MAAMgB,EAAoB,aAAiBF,GAG3C,OAAO,WACL,WAEE,MAA0B,mBAAfd,EACFA,EAAWgB,GAGb,IAAIA,KAAsBhB,EACnC,GACA,CAACgB,EAAmBhB,GAExB,CAWO,SAASiB,EAAYC,GAE1B,IAAIC,EAWJ,OAREA,EADED,EAAWE,qBAEsB,mBAA1BF,EAAWlB,WACdkB,EAAWlB,WAAWa,GACtBK,EAAWlB,YAAca,EAEfE,EAAiBG,EAAWlB,YAGvC,gBACLc,EAAWO,SACX,CAACC,MAAOH,GACRD,EAAWd,SAEf,C","sources":["webpack://interslavic-fun/./i18n/cs/docusaurus-plugin-content-docs/current/learn/simple-grammar/index.md","webpack://interslavic-fun/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["\n\nexport const frontMatter = {\n\tsidebar_position: 8\n};\nexport const contentTitle = 'Jednoduchá gramatika';\nexport {default as metadata} from '@site/.docusaurus/docusaurus-plugin-content-docs/default/site-i-18-n-cs-docusaurus-plugin-content-docs-current-learn-simple-grammar-index-md-9eb.json'\nexport const assets = {\n\n};\n\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nexport const toc = [];\nfunction _createMdxContent(props) {\n  const _components = {\n    h1: \"h1\",\n    header: \"header\",\n    li: \"li\",\n    p: \"p\",\n    span: \"span\",\n    strong: \"strong\",\n    ul: \"ul\",\n    ..._provideComponents(),\n    ...props.components\n  }, {CustomAfterSection, DocCardList} = _components;\n  if (!CustomAfterSection) _missingMdxReference(\"CustomAfterSection\", true);\n  if (!DocCardList) _missingMdxReference(\"DocCardList\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.header, {\n      children: _jsx(_components.h1, {\n        id: \"jednoduchá-gramatika\",\n        children: \"Jednoduchá gramatika\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Zjednodušená gramatika neboli \", _jsx(_components.span, {\n        className: \"notranslate\",\n        translate: \"no\",\n        children: \"Slovianto\"\n      }), \" je velmi zjednodušená forma interslovanštiny, která umožňuje neslovanským lidem vyjadřovat se na velmi základní úrovni při návštěvě slovanských zemí nebo udržování kontaktu se Slovany přes internet. Gramatika je omezena na naprosté minimum a formy, které nejsou nezbytně nutné, se nepoužívají vůbec. Protože neobsahuje nic, co by se nedalo najít ve slovanských jazycích, nebude výsledek slovanským mluvčím vypadat ani znít příliš neohrabaně, ale spíše jim připomene jazyk, který používají malé děti.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.span, {\n        className: \"notranslate\",\n        translate: \"no\",\n        children: \"Slovianto\"\n      }), \" lze také použít jako první krok v procesu učení „skutečného“ mezislovanského jazyka. Je konstruován tak, že jej lze postupně rozšiřovat o nové kousky, které se vyskytují ve složitějších verzích. Rozlišujeme tedy tři různé úrovně, z nichž každá přidává nové prvky, které přibližují \", _jsx(_components.span, {\n        className: \"notranslate\",\n        translate: \"no\",\n        children: \"Slovianto\"\n      }), \" k mezislovanštině:\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Úroveň 1\"\n        }), \" – nejjednodušší úroveň: žádný rod, žádné pády, pouze jednotné/množné číslo, jedna koncovka slovesa na čas\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Úroveň 2\"\n        }), \" – úvod do rodu, jednoduchý model pro spojování sloves (věci, které lze nalézt ve všech slovanských jazycích)\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Pracovní název \", _jsx(_components.span, {\n        className: \"notranslate\",\n        translate: \"no\",\n        children: \"Slovianto\"\n      }), \" je portmanteau slovo pro „slovanské esperanto“. Toto jméno, i když poněkud namyšlené, odkazuje k jednoduchosti \", _jsx(_components.span, {\n        className: \"notranslate\",\n        translate: \"no\",\n        children: \"Slovianto\"\n      }), \": nemá žádný rod, žádné pády, žádný aspekt, málo konjugace a žádnou nepravidelnost. Tím však podobnost s esperantem končí, protože prostředky \", _jsx(_components.span, {\n        className: \"notranslate\",\n        translate: \"no\",\n        children: \"Slovianto\"\n      }), \" pro zjednodušení jsou ve skutečnosti mnohem podobnější těm, které používá \", _jsx(_components.span, {\n        className: \"notranslate\",\n        translate: \"no\",\n        children: \"Interlingua\"\n      }), \".\"]\n    }), \"\\n\", _jsx(DocCardList, {}), \"\\n\", \"\\n\", _jsx(CustomAfterSection, {})]\n  });\n}\nexport default function MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n\n","/**\n * @import {MDXComponents} from 'mdx/types.js'\n * @import {Component, ReactElement, ReactNode} from 'react'\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\nimport React from 'react'\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = React.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} properties\n *   Properties.\n * @returns {ReactElement}\n *   Element.\n * @satisfies {Component}\n */\nexport function MDXProvider(properties) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (properties.disableParentContext) {\n    allComponents =\n      typeof properties.components === 'function'\n        ? properties.components(emptyComponents)\n        : properties.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(properties.components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    properties.children\n  )\n}\n"],"names":["frontMatter","sidebar_position","contentTitle","assets","toc","_createMdxContent","props","_components","h1","header","li","p","span","strong","ul","components","CustomAfterSection","DocCardList","_missingMdxReference","children","id","className","translate","MDXContent","wrapper","MDXLayout","component","Error","emptyComponents","MDXContext","useMDXComponents","contextComponents","MDXProvider","properties","allComponents","disableParentContext","Provider","value"],"sourceRoot":""}