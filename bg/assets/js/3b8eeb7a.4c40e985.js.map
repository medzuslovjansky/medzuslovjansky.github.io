{"version":3,"file":"assets/js/3b8eeb7a.4c40e985.js","mappings":"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","sources":["webpack://interslavic-fun/./i18n/bg/docusaurus-plugin-content-docs/current/learn/grammar/syntax.md","webpack://interslavic-fun/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["\n\nexport const frontMatter = {\n\tsidebar_position: 8,\n\tlicense: 'republish',\n\tauthor: 'Jan van Steenbergen',\n\torigin: 'http://steen.free.fr/interslavic/syntax.html'\n};\nexport const contentTitle = 'Синтаксис';\nexport {default as metadata} from '@site/.docusaurus/docusaurus-plugin-content-docs/default/site-i-18-n-bg-docusaurus-plugin-content-docs-current-learn-grammar-syntax-md-3b8.json'\nexport const assets = {\n\n};\n\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nexport const toc = [];\nfunction _createMdxContent(props) {\n  const _components = {\n    h1: \"h1\",\n    header: \"header\",\n    li: \"li\",\n    p: \"p\",\n    ul: \"ul\",\n    ..._provideComponents(),\n    ...props.components\n  }, {CustomAfterSection, TransliteratorElement} = _components;\n  if (!CustomAfterSection) _missingMdxReference(\"CustomAfterSection\", true);\n  if (!TransliteratorElement) _missingMdxReference(\"TransliteratorElement\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.header, {\n      children: _jsx(_components.h1, {\n        id: \"синтаксис\",\n        children: \"Синтаксис\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Словоредът е основно свободен, но предпочитаният (и стилистично най-неутрален) словоред е субект – глагол – обект (SVO). Не е задължително, но имайте предвид, че поставянето на обекта преди субекта няма да помогне за изясняване на значението. Това не е случаят с изреченията, в които личното местоимение или местоимението \", _jsx(TransliteratorElement, {\n        children: \"kto\"\n      }), \" е подлог или обект, тъй като личните местоимения и \", _jsx(TransliteratorElement, {\n        children: \"kto\"\n      }), \" имат свои собствени форми за винителен падеж, така че значението винаги е ясно.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Модификаторите обикновено предхождат съществителното. Това също не е задължително, но е най-неутралния и най-ясния начин за изграждане на изречение.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Има два вида въпроси:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"Да-не въпроси могат да бъдат зададени по три различни начина:\", \"\\n\", _jsxs(_components.ul, {\n          children: [\"\\n\", _jsxs(_components.li, {\n            children: [\"или се различава от нормалното декларативно изречение само по интонация:\", \"\\n\", _jsxs(_components.ul, {\n              children: [\"\\n\", _jsxs(_components.li, {\n                children: [_jsx(TransliteratorElement, {\n                  children: \"Otec kupil knigu?\"\n                }), \" „Татко купил ли е книга?“\"]\n              }), \"\\n\"]\n            }), \"\\n\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [\"или това изречение се предхожда от частицата \", _jsx(TransliteratorElement, {\n              children: \"či\"\n            }), \":\", \"\\n\", _jsxs(_components.ul, {\n              children: [\"\\n\", _jsx(_components.li, {\n                children: _jsx(TransliteratorElement, {\n                  children: \"Či otec kupil knigu?\"\n                })\n              }), \"\\n\"]\n            }), \"\\n\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [\"или се маркира с въпросителна частица \", _jsx(TransliteratorElement, {\n              children: \"li\"\n            }), \", поставена точно след фокусната точка на въпроса, обикновено глагола:\", \"\\n\", _jsxs(_components.ul, {\n              children: [\"\\n\", _jsx(_components.li, {\n                children: _jsx(TransliteratorElement, {\n                  children: \"Kupil li otec knigu?\"\n                })\n              }), \"\\n\"]\n            }), \"\\n\"]\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Други въпроси започват с въпросително местоимение или наречие, поставено в началото на изречението:\", \"\\n\", _jsxs(_components.ul, {\n          children: [\"\\n\", _jsxs(_components.li, {\n            children: [_jsx(TransliteratorElement, {\n              children: \"Koju knigu kupil otec?\"\n            }), \" „Коя книга е купил бащата?“\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [_jsx(TransliteratorElement, {\n              children: \"Kde otec kupil tu knigu?\"\n            }), \" „Откъде баща си купи тази книга?“\\nВ този тип изречения значението обикновено се изяснява от използвания случай:\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [_jsx(TransliteratorElement, {\n              children: \"Koja žena ljubi togo muža?\"\n            }), \" „Коя жена обича този мъж?“ (жена = субект, мъж = обект)\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [_jsx(TransliteratorElement, {\n              children: \"Koju ženu ljubi toj muž?\"\n            }), \" „Коя жена обича този мъж?“ (мъж = субект, жена = обект)\"]\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Ако е необходимо, е възможно да се използват пасивни изречения, които винаги са ясни:\", \"\\n\", _jsxs(_components.ul, {\n          children: [\"\\n\", _jsxs(_components.li, {\n            children: [_jsx(TransliteratorElement, {\n              children: \"Koja žena jest ljubjena od togo muža?\"\n            }), \" „Коя жена е обичана от този мъж?“\"]\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Заключителните клаузи се превеждат с помощта на \", _jsx(TransliteratorElement, {\n        children: \"že\"\n      }), \" или \", _jsx(TransliteratorElement, {\n        children: \"da\"\n      }), \", последвани от условното условие:\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(TransliteratorElement, {\n          children: \"Turisti posětet Niderlandiju, že by fotografovali tulipany.\"\n        }), \" „Туристите посещават Холандия, за да правят снимки на лалетата.”\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(TransliteratorElement, {\n          children: \"Turisti posětili Niderlandiju, že by fotografovali tulipany.\"\n        }), \" „Туристи посетиха Холандия, за да направят снимки на лалетата.”\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(TransliteratorElement, {\n          children: \"Ona prinosi jabloka, da by děti byli zdrave.\"\n        }), \" „Тя носи ябълки, за да са здрави децата.”\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(TransliteratorElement, {\n          children: \"Ona prinosila jabloka, da by děti byli zdrave.\"\n        }), \" „Тя донесе ябълки, за да са здрави децата.”\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Страдателният залог може да се използва, но ако е така, трябва да се прави с повишено внимание. Изречение като: \", _jsx(TransliteratorElement, {\n        children: \"Pica je dělana\"\n      }), \" или \", _jsx(TransliteratorElement, {\n        children: \"Pica je dělajema\"\n      }), \" „Пица се прави” е граматически напълно правилно. Все пак е по-добре да се избегне, защото подобна конструкция звучи тромаво за онези славяни, които не са свикнали да използват често глагола „да бъдеш“, особено в сегашно време. Освен това, докато е напълно естествено за част от говорещите славянски език, за други миналото страдателно причастие изобщо не може да се използва за конструкция за сегашно време. Следователно, ако темата е известна, по-добре е да се използва нормално активно изречение. И ако субектът не е известен, както в случая с нашата пица, е възможно да се използва форма на трето лице множествено число без субект: \", _jsx(TransliteratorElement, {\n        children: \"Dělajut picu\"\n      }), \" „Те правят пица, един прави пица, пица се прави”. Още по-разпространена е рефлексивната конструкция: \", _jsx(TransliteratorElement, {\n        children: \"Pica dělaje se\"\n      }), \", което буквално означава „Пицата се прави сама” и трябва да се преведе като „Човек прави пица, пицата се прави”.\"]\n    }), \"\\n\", \"\\n\", _jsx(CustomAfterSection, {})]\n  });\n}\nexport default function MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n\n","/**\n * @import {MDXComponents} from 'mdx/types.js'\n * @import {Component, ReactElement, ReactNode} from 'react'\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\nimport React from 'react'\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = React.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} properties\n *   Properties.\n * @returns {ReactElement}\n *   Element.\n * @satisfies {Component}\n */\nexport function MDXProvider(properties) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (properties.disableParentContext) {\n    allComponents =\n      typeof properties.components === 'function'\n        ? properties.components(emptyComponents)\n        : properties.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(properties.components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    properties.children\n  )\n}\n"],"names":["frontMatter","sidebar_position","license","author","origin","contentTitle","assets","toc","_createMdxContent","props","_components","h1","header","li","p","ul","components","CustomAfterSection","TransliteratorElement","_missingMdxReference","children","id","MDXContent","wrapper","MDXLayout","component","Error","emptyComponents","MDXContext","useMDXComponents","contextComponents","MDXProvider","properties","allComponents","disableParentContext","Provider","value"],"sourceRoot":""}