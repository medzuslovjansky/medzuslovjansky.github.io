{"version":3,"file":"assets/js/1e08adb1.f3b796f7.js","mappings":"y4CAEO,MAAMA,EAAc,CAC1BC,QAAS,CACR,WACA,QAGWC,EAAe,yHAEfC,EAAS,CACtB,iBAAoB,MAACC,OAAWA,IAKnBC,EAAM,CAAC,CAClB,MAAS,+DACT,GAAM,+DACN,MAAS,IAEX,SAASC,EAAkBC,GACzB,MAAMC,EAAc,CAClBC,KAAM,OACNC,GAAI,KACJC,EAAG,QACA,YACAJ,EAAMK,YAEX,OAAO,UAAM,WAAW,CACtBC,SAAU,EAAC,SAAKL,EAAYE,GAAI,CAC9BI,GAAI,+DACJD,SAAU,iEACR,MAAM,UAAML,EAAYG,EAAG,CAC7BE,SAAU,CAAC,0lCAA2N,SAAKL,EAAYC,KAAM,CAC3PI,SAAU,cACR,8sEACF,MAAM,UAAML,EAAYG,EAAG,CAC7BE,SAAU,CAAC,mlBAAmH,SAAKL,EAAYC,KAAM,CACnJI,SAAU,OACR,YAAO,SAAKL,EAAYC,KAAM,CAChCI,SAAU,OACR,uPAGV,CACe,SAASE,EAAWR,EAAQ,CAAC,GAC1C,MAAOS,QAASC,GAAa,KACxB,YACAV,EAAMK,YAEX,OAAOK,GAAY,SAAKA,EAAW,IAC9BV,EACHM,UAAU,SAAKP,EAAmB,IAC7BC,MAEFD,EAAkBC,EACzB,C,wDC/BA,MAAMW,EAAkB,CAAC,EAEnBC,EAAa,gBAAoBD,GAUhC,SAASE,EAAiBR,GAC/B,MAAMS,EAAoB,aAAiBF,GAG3C,OAAO,WACL,WAEE,MAA0B,mBAAfP,EACFA,EAAWS,GAGb,IAAIA,KAAsBT,EACnC,GACA,CAACS,EAAmBT,GAExB,CAWO,SAASU,EAAYC,GAE1B,IAAIC,EAWJ,OAREA,EADED,EAAWE,qBAEsB,mBAA1BF,EAAWX,WACdW,EAAWX,WAAWM,GACtBK,EAAWX,YAAcM,EAEfE,EAAiBG,EAAWX,YAGvC,gBACLO,EAAWO,SACX,CAACC,MAAOH,GACRD,EAAWV,SAEf,C","sources":["webpack://interslavic-fun/./articles/2024-07-09-diskusija-lj-nj-cyrl.md?02fa","webpack://interslavic-fun/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["\n\nexport const frontMatter = {\n\tauthors: [\n\t\t'noomorph',\n\t\t'jvs'\n\t]\n};\nexport const contentTitle = 'Асиметрија меджу LJ/NJ и Љ/Њ';\nexport {default as metadata} from '@site/.docusaurus/docusaurus-plugin-content-blog/default/site-articles-2024-07-09-diskusija-lj-nj-cyrl-md-439.json'\nexport const assets = {\n\"authorsImageUrls\": [undefined, undefined],\n};\n\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nexport const toc = [{\n  \"value\": \"Мотивација\",\n  \"id\": \"мотивација\",\n  \"level\": 2\n}];\nfunction _createMdxContent(props) {\n  const _components = {\n    code: \"code\",\n    h2: \"h2\",\n    p: \"p\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      id: \"мотивација\",\n      children: \"Мотивација\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Уж нєколико седмиц Јан ван Стеенберген јест много зајеты с прєводжењем вики-интерфејса, да быхмо могли потом спокојно почети работу над МС Википедијеју. То јест спєшно дєло, ибо кратко послє публикације нашего кода \", _jsx(_components.code, {\n        children: \"ISO 639-3\"\n      }), \" уже појавило се прєдложење за МС Википедију МС пројект в Инкубатору. Не хочемо, абы људи почели копијовати тексты из Меджувики, что јест нарушење авторскых прав. Вмєсто того, трєба буде копирати цєло содржање Меджувики в Инкубатор – заједно с хисторијеју. В Меджувики јест автоматичны транслитератор, да бы читатељи могли избирати меджу латиницеју и кирилицеју. Очевидно, в Википедији он такоже буде потрєбны. Ту јест једин малы проблем.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Тутдењ меджусловјанскы правопис имаје асиметрију меджу латиницеју и кирилицеју, что се тыче прєдавања диграфов \", _jsx(_components.code, {\n        children: \"lj\"\n      }), \" и \", _jsx(_components.code, {\n        children: \"nj\"\n      }), \" на писму, и то јест објект нашеј дискусије ниже.\"]\n    })]\n  });\n}\nexport default function MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n\n","/**\n * @import {MDXComponents} from 'mdx/types.js'\n * @import {Component, ReactElement, ReactNode} from 'react'\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\nimport React from 'react'\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = React.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} properties\n *   Properties.\n * @returns {ReactElement}\n *   Element.\n * @satisfies {Component}\n */\nexport function MDXProvider(properties) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (properties.disableParentContext) {\n    allComponents =\n      typeof properties.components === 'function'\n        ? properties.components(emptyComponents)\n        : properties.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(properties.components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    properties.children\n  )\n}\n"],"names":["frontMatter","authors","contentTitle","assets","undefined","toc","_createMdxContent","props","_components","code","h2","p","components","children","id","MDXContent","wrapper","MDXLayout","emptyComponents","MDXContext","useMDXComponents","contextComponents","MDXProvider","properties","allComponents","disableParentContext","Provider","value"],"sourceRoot":""}