{"version":3,"file":"assets/js/926dc594.fa4990ec.js","mappings":"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","sources":["webpack://interslavic-fun/./i18n/ru/docusaurus-plugin-content-docs/current/learn/simple-grammar/index.md","webpack://interslavic-fun/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["\n\nexport const frontMatter = {\n\tsidebar_position: 8\n};\nexport const contentTitle = 'Простая грамматика';\nexport const metadata = {\n  \"id\": \"learn/simple-grammar/index\",\n  \"title\": \"Простая грамматика\",\n  \"description\": \"Упрощенная грамматика, или :notr[Slovianto], представляет собой сильно упрощенную форму межславянского языка, которая позволяет неславянским людям выражать свои мысли на самом базовом уровне при посещении славянских стран или поддержании контактов со славянами через Интернет. Грамматика сведена к минимуму, а формы, которые не являются строго необходимыми, вообще не используются. Поскольку он не содержит ничего такого, чего нельзя было бы найти в славянских языках, результат не будет выглядеть или звучать слишком неловко для носителей славянского языка, а скорее напомнит им язык, которым пользуются маленькие дети.\",\n  \"source\": \"@site/i18n/ru/docusaurus-plugin-content-docs/current/learn/simple-grammar/index.md\",\n  \"sourceDirName\": \"learn/simple-grammar\",\n  \"slug\": \"/learn/simple-grammar/\",\n  \"permalink\": \"/ru/learn/simple-grammar/\",\n  \"draft\": false,\n  \"unlisted\": false,\n  \"editUrl\": \"https://github.com/medzuslovjansky/medzuslovjansky.github.io/edit/main/i18n/ru/docusaurus-plugin-content-docs/current/learn/simple-grammar/index.md\",\n  \"tags\": [],\n  \"version\": \"current\",\n  \"lastUpdatedBy\": \"Bogdan Tishchenko\",\n  \"lastUpdatedAt\": 1741954126000,\n  \"sidebarPosition\": 8,\n  \"frontMatter\": {\n    \"sidebar_position\": 8\n  },\n  \"sidebar\": \"learnSidebar\",\n  \"previous\": {\n    \"title\": \"Ароматизация\",\n    \"permalink\": \"/ru/learn/vocabulary/flavourisation\"\n  },\n  \"next\": {\n    \"title\": \"1-й уровень\",\n    \"permalink\": \"/ru/learn/simple-grammar/level-1\"\n  }\n};\nexport const assets = {\n\n};\n\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nexport const toc = [];\nfunction _createMdxContent(props) {\n  const _components = {\n    h1: \"h1\",\n    li: \"li\",\n    p: \"p\",\n    span: \"span\",\n    strong: \"strong\",\n    ul: \"ul\",\n    ..._provideComponents(),\n    ...props.components\n  }, {CustomAfterSection, CustomBeforeSection, DocCardList} = _components;\n  if (!CustomAfterSection) _missingMdxReference(\"CustomAfterSection\", true);\n  if (!CustomBeforeSection) _missingMdxReference(\"CustomBeforeSection\", true);\n  if (!DocCardList) _missingMdxReference(\"DocCardList\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      id: \"простая-грамматика\",\n      children: \"Простая грамматика\"\n    }), \"\\n\", _jsx(CustomBeforeSection, {}), \"\\n\", _jsxs(_components.p, {\n      children: [\"Упрощенная грамматика, или \", _jsx(_components.span, {\n        className: \"notranslate\",\n        translate: \"no\",\n        children: \"Slovianto\"\n      }), \", представляет собой сильно упрощенную форму межславянского языка, которая позволяет неславянским людям выражать свои мысли на самом базовом уровне при посещении славянских стран или поддержании контактов со славянами через Интернет. Грамматика сведена к минимуму, а формы, которые не являются строго необходимыми, вообще не используются. Поскольку он не содержит ничего такого, чего нельзя было бы найти в славянских языках, результат не будет выглядеть или звучать слишком неловко для носителей славянского языка, а скорее напомнит им язык, которым пользуются маленькие дети.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.span, {\n        className: \"notranslate\",\n        translate: \"no\",\n        children: \"Slovianto\"\n      }), \" также можно использовать в качестве первого шага в процессе изучения «настоящего» межславянского языка. Он построен таким образом, что его можно постепенно расширять новыми деталями, которые встречаются в более сложных версиях. Таким образом, мы выделяем три разных уровня, каждый из которых добавляет новые элементы, приближающие \", _jsx(_components.span, {\n        className: \"notranslate\",\n        translate: \"no\",\n        children: \"Slovianto\"\n      }), \" к межславянскому:\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Уровень 1\"\n        }), \" – самый простой уровень: без рода, без падежей, только единственное/множественное число, одно глагольное окончание в каждом времени.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Уровень 2\"\n        }), \" – введение в род, простая модель спряжения глаголов (присутствует во всех славянских языках)\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Рабочее название \", _jsx(_components.span, {\n        className: \"notranslate\",\n        translate: \"no\",\n        children: \"Slovianto\"\n      }), \" представляет собой слово-портманто, обозначающее «славянский эсперанто». Это имя, хотя и несколько насмешливое, указывает на простоту \", _jsx(_components.span, {\n        className: \"notranslate\",\n        translate: \"no\",\n        children: \"Slovianto\"\n      }), \": у него нет рода, падежей, аспектов, небольшого спряжения и неправильности. Однако на этом сходство с эсперанто заканчивается, поскольку средства упрощения \", _jsx(_components.span, {\n        className: \"notranslate\",\n        translate: \"no\",\n        children: \"Slovianto\"\n      }), \" на самом деле гораздо больше похожи на те, которые используются \", _jsx(_components.span, {\n        className: \"notranslate\",\n        translate: \"no\",\n        children: \"Interlingua\"\n      }), \".\"]\n    }), \"\\n\", _jsx(DocCardList, {}), \"\\n\", \"\\n\", _jsx(CustomAfterSection, {})]\n  });\n}\nexport default function MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["frontMatter","sidebar_position","contentTitle","metadata","assets","toc","_createMdxContent","props","_components","h1","li","p","span","strong","ul","components","CustomAfterSection","CustomBeforeSection","DocCardList","_missingMdxReference","children","id","className","translate","MDXContent","wrapper","MDXLayout","component","Error","MDXContext","useMDXComponents","contextComponents","emptyObject","MDXProvider","disableParentContext","allComponents","Provider","value"],"sourceRoot":""}