{"version":3,"file":"assets/js/28865d01.706a7937.js","mappings":"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","sources":["webpack://interslavic-fun/./i18n/uk/docusaurus-plugin-content-docs/current/learn/grammar/syntax.md","webpack://interslavic-fun/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["\n\nexport const frontMatter = {\n\tsidebar_position: 8,\n\tlicense: 'republish',\n\tauthor: 'Jan van Steenbergen',\n\torigin: 'http://steen.free.fr/interslavic/syntax.html'\n};\nexport const contentTitle = 'Синтаксис';\nexport const metadata = {\n  \"id\": \"learn/grammar/syntax\",\n  \"title\": \"Синтаксис\",\n  \"description\": \"Порядок слів в основному вільний, але кращим (і стилістично найбільш нейтральним) є порядок слів підмет – дієслово – об’єкт (SVO). Це не є обов’язковим, але зауважте, що розміщення об’єкта перед підметом не допоможе зрозуміти значення. Це не стосується речень, де або особистий займенник, або займенникisv[kto] мають власні знахідні форми, тому значення завжди зрозуміле.\",\n  \"source\": \"@site/i18n/uk/docusaurus-plugin-content-docs/current/learn/grammar/syntax.md\",\n  \"sourceDirName\": \"learn/grammar\",\n  \"slug\": \"/learn/grammar/syntax\",\n  \"permalink\": \"/uk/learn/grammar/syntax\",\n  \"draft\": false,\n  \"unlisted\": false,\n  \"editUrl\": \"https://github.com/medzuslovjansky/medzuslovjansky.github.io/edit/main/i18n/uk/docusaurus-plugin-content-docs/current/learn/grammar/syntax.md\",\n  \"tags\": [],\n  \"version\": \"current\",\n  \"lastUpdatedBy\": \"Bogdan Tishchenko\",\n  \"lastUpdatedAt\": 1741954126000,\n  \"sidebarPosition\": 8,\n  \"frontMatter\": {\n    \"sidebar_position\": 8,\n    \"license\": \"republish\",\n    \"author\": \"Jan van Steenbergen\",\n    \"origin\": \"http://steen.free.fr/interslavic/syntax.html\"\n  },\n  \"sidebar\": \"learnSidebar\",\n  \"previous\": {\n    \"title\": \"Сполучники\",\n    \"permalink\": \"/uk/learn/grammar/conjunctions\"\n  },\n  \"next\": {\n    \"title\": \"Словотвір\",\n    \"permalink\": \"/uk/learn/vocabulary/word-formation\"\n  }\n};\nexport const assets = {\n\n};\n\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nexport const toc = [];\nfunction _createMdxContent(props) {\n  const _components = {\n    h1: \"h1\",\n    li: \"li\",\n    p: \"p\",\n    ul: \"ul\",\n    ..._provideComponents(),\n    ...props.components\n  }, {CustomAfterSection, CustomBeforeSection, TransliteratorElement} = _components;\n  if (!CustomAfterSection) _missingMdxReference(\"CustomAfterSection\", true);\n  if (!CustomBeforeSection) _missingMdxReference(\"CustomBeforeSection\", true);\n  if (!TransliteratorElement) _missingMdxReference(\"TransliteratorElement\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      id: \"синтаксис\",\n      children: \"Синтаксис\"\n    }), \"\\n\", _jsx(CustomBeforeSection, {}), \"\\n\", _jsxs(_components.p, {\n      children: [\"Порядок слів в основному вільний, але кращим (і стилістично найбільш нейтральним) є порядок слів підмет – дієслово – об’єкт (SVO). Це не є обов’язковим, але зауважте, що розміщення об’єкта перед підметом не допоможе зрозуміти значення. Це не стосується речень, де або особистий займенник, або займенник \", _jsx(TransliteratorElement, {\n        children: \"kto\"\n      }), \" є підметом або об’єктом, оскільки особисті займенники та \", _jsx(TransliteratorElement, {\n        children: \"kto\"\n      }), \" мають власні знахідні форми, тому значення завжди зрозуміле.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Модифікатори зазвичай передують іменнику. Це також не є обов’язковим, але це найбільш нейтральний і найчіткіший спосіб побудови речення.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Існує два типи питань:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"Питання «так-ні» можна поставити трьома різними способами:\", \"\\n\", _jsxs(_components.ul, {\n          children: [\"\\n\", _jsxs(_components.li, {\n            children: [\"або відрізняється від звичайного оповідального речення лише інтонацією:\", \"\\n\", _jsxs(_components.ul, {\n              children: [\"\\n\", _jsxs(_components.li, {\n                children: [_jsx(TransliteratorElement, {\n                  children: \"Otec kupil knigu?\"\n                }), \" «Тато купив книжку?»\"]\n              }), \"\\n\"]\n            }), \"\\n\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [\"або цьому реченню передує частка \", _jsx(TransliteratorElement, {\n              children: \"či\"\n            }), \":\", \"\\n\", _jsxs(_components.ul, {\n              children: [\"\\n\", _jsx(_components.li, {\n                children: _jsx(TransliteratorElement, {\n                  children: \"Či otec kupil knigu?\"\n                })\n              }), \"\\n\"]\n            }), \"\\n\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [\"або позначається питальною часткою \", _jsx(TransliteratorElement, {\n              children: \"li\"\n            }), \", яка розміщується одразу після фокусу питання, зазвичай дієслова:\", \"\\n\", _jsxs(_components.ul, {\n              children: [\"\\n\", _jsx(_components.li, {\n                children: _jsx(TransliteratorElement, {\n                  children: \"Kupil li otec knigu?\"\n                })\n              }), \"\\n\"]\n            }), \"\\n\"]\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Інші питання починаються з питального займенника або прислівника, що ставиться на початку речення:\", \"\\n\", _jsxs(_components.ul, {\n          children: [\"\\n\", _jsxs(_components.li, {\n            children: [_jsx(TransliteratorElement, {\n              children: \"Koju knigu kupil otec?\"\n            }), \" «Яку книгу купив батько?»\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [_jsx(TransliteratorElement, {\n              children: \"Kde otec kupil tu knigu?\"\n            }), \" «Де батько купив цю книжку?»\\nУ цьому типі речень значення зазвичай пояснюється використаним відмінком:\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [_jsx(TransliteratorElement, {\n              children: \"Koja žena ljubi togo muža?\"\n            }), \" «Яка жінка любить цього чоловіка?» (жінка = суб'єкт, чоловік = об'єкт)\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [_jsx(TransliteratorElement, {\n              children: \"Koju ženu ljubi toj muž?\"\n            }), \" «Яку жінку кохає цей чоловік?» (чоловік = суб'єкт, жінка = об'єкт)\"]\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"За потреби можна використовувати пасивні речення, які завжди зрозумілі:\", \"\\n\", _jsxs(_components.ul, {\n          children: [\"\\n\", _jsxs(_components.li, {\n            children: [_jsx(TransliteratorElement, {\n              children: \"Koja žena jest ljubjena od togo muža?\"\n            }), \" «Яку жінку любить цей чоловік?»\"]\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Заключні речення перекладаються за допомогою \", _jsx(TransliteratorElement, {\n        children: \"že\"\n      }), \" або \", _jsx(TransliteratorElement, {\n        children: \"da\"\n      }), \", за якими йде умовний спосіб:\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(TransliteratorElement, {\n          children: \"Turisti posětet Niderlandiju, že by fotografovali tulipany.\"\n        }), \" „Туристи відвідують Нідерланди, щоб сфотографувати тюльпани.”\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(TransliteratorElement, {\n          children: \"Turisti posětili Niderlandiju, že by fotografovali tulipany.\"\n        }), \" „Туристи відвідали Нідерланди, щоб сфотографувати тюльпани.”\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(TransliteratorElement, {\n          children: \"Ona prinosi jabloka, da by děti byli zdrave.\"\n        }), \" «Вона несе яблука, щоб діти були здорові».\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(TransliteratorElement, {\n          children: \"Ona prinosila jabloka, da by děti byli zdrave.\"\n        }), \" «Принесла яблука, щоб діти були здорові».\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Пасивний стан можна використовувати, але якщо так, то робити це слід обережно. Речення на кшталт: \", _jsx(TransliteratorElement, {\n        children: \"Pica je dělana\"\n      }), \" або \", _jsx(TransliteratorElement, {\n        children: \"Pica je dělajema\"\n      }), \" «Піца готується» є граматично абсолютно правильним. Але його краще уникнути, тому що така конструкція звучить незграбно для тих слов'ян, які не звикли дуже часто вживати дієслово «бути», особливо в теперішньому часі. Крім того, якщо для частини носіїв слов'янської мови це цілком природно, то для інших пасивний дієприкметник минулого часу взагалі не може використовуватися для конструкції теперішнього часу. Тому, якщо підмет відомий, краще використовувати звичайне активне речення. А якщо підмет невідомий, як у випадку з нашою піцою, можна використовувати форму третьої особи множини без підмета: \", _jsx(TransliteratorElement, {\n        children: \"Dělajut picu\"\n      }), \" „Вони роблять піцу, один робить піцу, піцу роблять”. Ще більш поширеною є рефлексивна конструкція: \", _jsx(TransliteratorElement, {\n        children: \"Pica dělaje se\"\n      }), \", що буквально означає «Піца робиться сама» і має перекладатися як «Піцу роблять, піцу роблять».\"]\n    }), \"\\n\", \"\\n\", _jsx(CustomAfterSection, {})]\n  });\n}\nexport default function MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["frontMatter","sidebar_position","license","author","origin","contentTitle","metadata","assets","toc","_createMdxContent","props","_components","h1","li","p","ul","components","CustomAfterSection","CustomBeforeSection","TransliteratorElement","_missingMdxReference","children","id","MDXContent","wrapper","MDXLayout","component","Error","MDXContext","useMDXComponents","contextComponents","emptyObject","MDXProvider","disableParentContext","allComponents","Provider","value"],"sourceRoot":""}