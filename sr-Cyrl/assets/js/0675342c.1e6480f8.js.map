{"version":3,"file":"assets/js/0675342c.1e6480f8.js","mappings":"6hIAEO,MAAMA,EAAc,CAC1BC,iBAAkB,EAClBC,YAAa,CACZC,OAAQ,qBAGGC,EAAe,4HAEfC,EAAS,CAEtB,EAIaC,EAAM,GACnB,SAASC,EAAkBC,GACzB,MAAMC,EAAc,CAClBC,GAAI,KACJC,OAAQ,SACRC,GAAI,KACJC,EAAG,IACHC,KAAM,OACNC,OAAQ,SACRC,GAAI,SACD,YACAR,EAAMS,aACR,mBAACC,EAAkB,YAAEC,GAAeV,EAGvC,OAFKS,GAAoBE,EAAqB,sBAAsB,GAC/DD,GAAaC,EAAqB,eAAe,IAC/C,UAAM,WAAW,CACtBC,SAAU,EAAC,SAAKZ,EAAYE,OAAQ,CAClCU,UAAU,SAAKZ,EAAYC,GAAI,CAC7BY,GAAI,4HACJD,SAAU,gIAEV,MAAM,UAAMZ,EAAYI,EAAG,CAC7BQ,SAAU,CAAC,0KAAmC,SAAKZ,EAAYK,KAAM,CACnES,UAAW,cACXC,UAAW,KACXH,SAAU,cACR,qjFACF,MAAM,UAAMZ,EAAYI,EAAG,CAC7BQ,SAAU,EAAC,SAAKZ,EAAYK,KAAM,CAChCS,UAAW,cACXC,UAAW,KACXH,SAAU,cACR,s5CAAwR,SAAKZ,EAAYK,KAAM,CACjTS,UAAW,cACXC,UAAW,KACXH,SAAU,cACR,qKACF,MAAM,UAAMZ,EAAYO,GAAI,CAC9BK,SAAU,CAAC,MAAM,UAAMZ,EAAYG,GAAI,CACrCS,SAAU,EAAC,SAAKZ,EAAYM,OAAQ,CAClCM,SAAU,+BACR,0iBACF,MAAM,UAAMZ,EAAYG,GAAI,CAC9BS,SAAU,EAAC,SAAKZ,EAAYM,OAAQ,CAClCM,SAAU,+BACR,qiBACF,QACF,MAAM,UAAMZ,EAAYI,EAAG,CAC7BQ,SAAU,CAAC,wEAAiB,SAAKZ,EAAYK,KAAM,CACjDS,UAAW,cACXC,UAAW,KACXH,SAAU,cACR,+gBAA2G,SAAKZ,EAAYK,KAAM,CACpIS,UAAW,cACXC,UAAW,KACXH,SAAU,cACR,ooBAAsI,SAAKZ,EAAYK,KAAM,CAC/JS,UAAW,cACXC,UAAW,KACXH,SAAU,cACR,4ZAAkF,SAAKZ,EAAYK,KAAM,CAC3GS,UAAW,cACXC,UAAW,KACXH,SAAU,gBACR,OACF,MAAM,SAAKF,EAAa,CAAC,GAAI,KAAM,MAAM,SAAKD,EAAoB,CAAC,KAE3E,CACe,SAASO,EAAWjB,EAAQ,CAAC,GAC1C,MAAOkB,QAASC,GAAa,KACxB,YACAnB,EAAMS,YAEX,OAAOU,GAAY,SAAKA,EAAW,IAC9BnB,EACHa,UAAU,SAAKd,EAAmB,IAC7BC,MAEFD,EAAkBC,EACzB,CACA,SAASY,EAAqBE,EAAIM,GAChC,MAAM,IAAIC,MAAM,aAAeD,EAAY,YAAc,UAAY,KAAON,EAAK,qEACnF,C,wDCxEA,MAAMQ,EAAkB,CAAC,EAEnBC,EAAa,gBAAoBD,GAUhC,SAASE,EAAiBf,GAC/B,MAAMgB,EAAoB,aAAiBF,GAG3C,OAAO,WACL,WAEE,MAA0B,mBAAfd,EACFA,EAAWgB,GAGb,IAAIA,KAAsBhB,EACnC,GACA,CAACgB,EAAmBhB,GAExB,CAWO,SAASiB,EAAYC,GAE1B,IAAIC,EAWJ,OAREA,EADED,EAAWE,qBAEsB,mBAA1BF,EAAWlB,WACdkB,EAAWlB,WAAWa,GACtBK,EAAWlB,YAAca,EAEfE,EAAiBG,EAAWlB,YAGvC,gBACLc,EAAWO,SACX,CAACC,MAAOH,GACRD,EAAWd,SAEf,C","sources":["webpack://interslavic-fun/./i18n/sr-Cyrl/docusaurus-plugin-content-docs/current/learn/simple-grammar/index.md","webpack://interslavic-fun/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["\n\nexport const frontMatter = {\n\tsidebar_position: 8,\n\tlast_update: {\n\t\tauthor: 'Google Translate'\n\t}\n};\nexport const contentTitle = 'Једноставна граматика';\nexport {default as metadata} from '@site/.docusaurus/docusaurus-plugin-content-docs/default/site-i-18-n-sr-cyrl-docusaurus-plugin-content-docs-current-learn-simple-grammar-index-md-067.json'\nexport const assets = {\n\n};\n\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nexport const toc = [];\nfunction _createMdxContent(props) {\n  const _components = {\n    h1: \"h1\",\n    header: \"header\",\n    li: \"li\",\n    p: \"p\",\n    span: \"span\",\n    strong: \"strong\",\n    ul: \"ul\",\n    ..._provideComponents(),\n    ...props.components\n  }, {CustomAfterSection, DocCardList} = _components;\n  if (!CustomAfterSection) _missingMdxReference(\"CustomAfterSection\", true);\n  if (!DocCardList) _missingMdxReference(\"DocCardList\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.header, {\n      children: _jsx(_components.h1, {\n        id: \"једноставна-граматика\",\n        children: \"Једноставна граматика\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Поједностављена граматика, или \", _jsx(_components.span, {\n        className: \"notranslate\",\n        translate: \"no\",\n        children: \"Slovianto\"\n      }), \", је веома поједностављени облик међусловенског језика који омогућава несловенским људима да се изразе на врло основном нивоу када посећују словенске земље или одржавају контакт са Словенима путем интернета. Граматика је ограничена на минимум, а облици који нису стриктно неопходни се уопште не користе. Пошто не садржи ништа што се не може наћи у словенским језицима, резултат неће изгледати нити звучати превише неспретно говорницима словенског, већ их подсећа на врсту језика коју користе мала деца.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.span, {\n        className: \"notranslate\",\n        translate: \"no\",\n        children: \"Slovianto\"\n      }), \" се такође може користити као први корак у процесу учења „правог” међусловенског језика. Конструисан је тако да се постепено може проширивати новим деловима који се јављају у сложенијим верзијама. Дакле, разликујемо три различита нивоа, сваки од њих додаје нове елементе који \", _jsx(_components.span, {\n        className: \"notranslate\",\n        translate: \"no\",\n        children: \"Slovianto\"\n      }), \" приближавају међусловенском:\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Ниво 1\"\n        }), \" – најједноставнији ниво: без рода, без падежа, само у једнини/множини, један глаголски завршетак по времену\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Ниво 2\"\n        }), \" – увод у род, једноставан модел за коњугацију глагола (ствари које се могу наћи у свим словенским језицима)\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Радни наслов \", _jsx(_components.span, {\n        className: \"notranslate\",\n        translate: \"no\",\n        children: \"Slovianto\"\n      }), \" је словна реч за „словенски есперанто”. Овај назив, иако помало неспретан, односи се на једноставност \", _jsx(_components.span, {\n        className: \"notranslate\",\n        translate: \"no\",\n        children: \"Slovianto\"\n      }), \": нема рода, нема падежа, нема аспекта, мало коњугације и нема неправилности. Ипак, ту се завршава сличност са есперантом, јер су \", _jsx(_components.span, {\n        className: \"notranslate\",\n        translate: \"no\",\n        children: \"Slovianto\"\n      }), \"-ова средства за поједностављивање у ствари много сличнија онима које користи \", _jsx(_components.span, {\n        className: \"notranslate\",\n        translate: \"no\",\n        children: \"Interlingua\"\n      }), \".\"]\n    }), \"\\n\", _jsx(DocCardList, {}), \"\\n\", \"\\n\", _jsx(CustomAfterSection, {})]\n  });\n}\nexport default function MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n\n","/**\n * @import {MDXComponents} from 'mdx/types.js'\n * @import {Component, ReactElement, ReactNode} from 'react'\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\nimport React from 'react'\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = React.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} properties\n *   Properties.\n * @returns {ReactElement}\n *   Element.\n * @satisfies {Component}\n */\nexport function MDXProvider(properties) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (properties.disableParentContext) {\n    allComponents =\n      typeof properties.components === 'function'\n        ? properties.components(emptyComponents)\n        : properties.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(properties.components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    properties.children\n  )\n}\n"],"names":["frontMatter","sidebar_position","last_update","author","contentTitle","assets","toc","_createMdxContent","props","_components","h1","header","li","p","span","strong","ul","components","CustomAfterSection","DocCardList","_missingMdxReference","children","id","className","translate","MDXContent","wrapper","MDXLayout","component","Error","emptyComponents","MDXContext","useMDXComponents","contextComponents","MDXProvider","properties","allComponents","disableParentContext","Provider","value"],"sourceRoot":""}