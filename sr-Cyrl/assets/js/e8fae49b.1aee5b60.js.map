{"version":3,"file":"assets/js/e8fae49b.1aee5b60.js","mappings":"ugBAEO,MAAMA,EAAc,CAAC,EACfC,EAAe,cAEfC,EAAS,CAEtB,EAIaC,EAAM,GACnB,SAASC,EAAkBC,GACzB,MAAMC,EAAc,CAClBC,EAAG,IACHC,GAAI,KACJC,OAAQ,SACRC,EAAG,QACA,YACAL,EAAMM,YAEX,OAAO,UAAM,WAAW,CACtBC,SAAU,EAAC,SAAKN,EAAYG,OAAQ,CAClCG,UAAU,SAAKN,EAAYE,GAAI,CAC7BK,GAAI,cACJD,SAAU,kBAEV,MAAM,SAAKN,EAAYI,EAAG,CAC5BE,SAAU,6GACR,MAAM,SAAKN,EAAYI,EAAG,CAC5BE,SAAU,+FACR,MAAM,SAAKN,EAAYI,EAAG,CAC5BE,SAAU,kHACR,MAAM,SAAKN,EAAYI,EAAG,CAC5BE,UAAU,SAAKN,EAAYC,EAAG,CAC5BO,KAAM,yEACNF,SAAU,+EAIlB,CACe,SAASG,EAAWV,EAAQ,CAAC,GAC1C,MAAOW,QAASC,GAAa,KACxB,YACAZ,EAAMM,YAEX,OAAOM,GAAY,SAAKA,EAAW,IAC9BZ,EACHO,UAAU,SAAKR,EAAmB,IAC7BC,MAEFD,EAAkBC,EACzB,C,wDC1BA,MAAMa,EAAkB,CAAC,EAEnBC,EAAa,gBAAoBD,GAUhC,SAASE,EAAiBT,GAC/B,MAAMU,EAAoB,aAAiBF,GAG3C,OAAO,WACL,WAEE,MAA0B,mBAAfR,EACFA,EAAWU,GAGb,IAAIA,KAAsBV,EACnC,GACA,CAACU,EAAmBV,GAExB,CAWO,SAASW,EAAYC,GAE1B,IAAIC,EAWJ,OAREA,EADED,EAAWE,qBAEsB,mBAA1BF,EAAWZ,WACdY,EAAWZ,WAAWO,GACtBK,EAAWZ,YAAcO,EAEfE,EAAiBG,EAAWZ,YAGvC,gBACLQ,EAAWO,SACX,CAACC,MAAOH,GACRD,EAAWX,SAEf,C","sources":["webpack://interslavic-fun/./src/pages/501.mdx","webpack://interslavic-fun/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["\n\nexport const frontMatter = {};\nexport const contentTitle = 'Please wait';\nexport {default as metadata} from '@site/.docusaurus/docusaurus-plugin-content-pages/default/site-src-pages-501-mdx-e8f.json'\nexport const assets = {\n\n};\n\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nexport const toc = [];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    h1: \"h1\",\n    header: \"header\",\n    p: \"p\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.header, {\n      children: _jsx(_components.h1, {\n        id: \"please-wait\",\n        children: \"Please wait\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"This article is not ready yet for your contribution â€“ we're working on its source code in Markdown.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Please come back later or take part in the translation of the previous (earlier) articles.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Here's the progress of Markdown refinement, where you can see which articles are ready for your contribution:\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"https://github.com/medzuslovjansky/medzuslovjansky.github.io/issues/45\",\n        children: \"https://github.com/medzuslovjansky/medzuslovjansky.github.io/issues/45\"\n      })\n    })]\n  });\n}\nexport default function MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n\n","/**\n * @import {MDXComponents} from 'mdx/types.js'\n * @import {Component, ReactElement, ReactNode} from 'react'\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\nimport React from 'react'\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = React.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} properties\n *   Properties.\n * @returns {ReactElement}\n *   Element.\n * @satisfies {Component}\n */\nexport function MDXProvider(properties) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (properties.disableParentContext) {\n    allComponents =\n      typeof properties.components === 'function'\n        ? properties.components(emptyComponents)\n        : properties.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(properties.components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    properties.children\n  )\n}\n"],"names":["frontMatter","contentTitle","assets","toc","_createMdxContent","props","_components","a","h1","header","p","components","children","id","href","MDXContent","wrapper","MDXLayout","emptyComponents","MDXContext","useMDXComponents","contextComponents","MDXProvider","properties","allComponents","disableParentContext","Provider","value"],"sourceRoot":""}