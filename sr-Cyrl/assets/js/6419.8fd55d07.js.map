{"version":3,"file":"assets/js/6419.8fd55d07.js","mappings":"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","sources":["webpack://interslavic-fun/./node_modules/comlink/dist/esm/comlink.mjs","webpack://interslavic-fun/./node_modules/@easyops-cn/docusaurus-search-local/dist/client/client/utils/smartTerms.js","webpack://interslavic-fun/./node_modules/@easyops-cn/docusaurus-search-local/dist/client/client/utils/smartQueries.js","webpack://interslavic-fun/./node_modules/@easyops-cn/docusaurus-search-local/dist/client/client/utils/cutZhWords.js","webpack://interslavic-fun/./node_modules/@easyops-cn/docusaurus-search-local/dist/client/shared/interfaces.js","webpack://interslavic-fun/./node_modules/@easyops-cn/docusaurus-search-local/dist/client/client/theme/worker.js","webpack://interslavic-fun/./node_modules/@easyops-cn/docusaurus-search-local/dist/client/client/utils/tokenize.js","webpack://interslavic-fun/./node_modules/@easyops-cn/docusaurus-search-local/dist/client/client/utils/sortSearchResults.js","webpack://interslavic-fun/./node_modules/@easyops-cn/docusaurus-search-local/dist/client/client/utils/processTreeStatusOfSearchResults.js","webpack://interslavic-fun/./node_modules/lunr/lunr.js"],"sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nconst proxyMarker = Symbol(\"Comlink.proxy\");\nconst createEndpoint = Symbol(\"Comlink.endpoint\");\nconst releaseProxy = Symbol(\"Comlink.releaseProxy\");\nconst finalizer = Symbol(\"Comlink.finalizer\");\nconst throwMarker = Symbol(\"Comlink.thrown\");\nconst isObject = (val) => (typeof val === \"object\" && val !== null) || typeof val === \"function\";\n/**\n * Internal transfer handle to handle objects marked to proxy.\n */\nconst proxyTransferHandler = {\n    canHandle: (val) => isObject(val) && val[proxyMarker],\n    serialize(obj) {\n        const { port1, port2 } = new MessageChannel();\n        expose(obj, port1);\n        return [port2, [port2]];\n    },\n    deserialize(port) {\n        port.start();\n        return wrap(port);\n    },\n};\n/**\n * Internal transfer handler to handle thrown exceptions.\n */\nconst throwTransferHandler = {\n    canHandle: (value) => isObject(value) && throwMarker in value,\n    serialize({ value }) {\n        let serialized;\n        if (value instanceof Error) {\n            serialized = {\n                isError: true,\n                value: {\n                    message: value.message,\n                    name: value.name,\n                    stack: value.stack,\n                },\n            };\n        }\n        else {\n            serialized = { isError: false, value };\n        }\n        return [serialized, []];\n    },\n    deserialize(serialized) {\n        if (serialized.isError) {\n            throw Object.assign(new Error(serialized.value.message), serialized.value);\n        }\n        throw serialized.value;\n    },\n};\n/**\n * Allows customizing the serialization of certain values.\n */\nconst transferHandlers = new Map([\n    [\"proxy\", proxyTransferHandler],\n    [\"throw\", throwTransferHandler],\n]);\nfunction isAllowedOrigin(allowedOrigins, origin) {\n    for (const allowedOrigin of allowedOrigins) {\n        if (origin === allowedOrigin || allowedOrigin === \"*\") {\n            return true;\n        }\n        if (allowedOrigin instanceof RegExp && allowedOrigin.test(origin)) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction expose(obj, ep = globalThis, allowedOrigins = [\"*\"]) {\n    ep.addEventListener(\"message\", function callback(ev) {\n        if (!ev || !ev.data) {\n            return;\n        }\n        if (!isAllowedOrigin(allowedOrigins, ev.origin)) {\n            console.warn(`Invalid origin '${ev.origin}' for comlink proxy`);\n            return;\n        }\n        const { id, type, path } = Object.assign({ path: [] }, ev.data);\n        const argumentList = (ev.data.argumentList || []).map(fromWireValue);\n        let returnValue;\n        try {\n            const parent = path.slice(0, -1).reduce((obj, prop) => obj[prop], obj);\n            const rawValue = path.reduce((obj, prop) => obj[prop], obj);\n            switch (type) {\n                case \"GET\" /* MessageType.GET */:\n                    {\n                        returnValue = rawValue;\n                    }\n                    break;\n                case \"SET\" /* MessageType.SET */:\n                    {\n                        parent[path.slice(-1)[0]] = fromWireValue(ev.data.value);\n                        returnValue = true;\n                    }\n                    break;\n                case \"APPLY\" /* MessageType.APPLY */:\n                    {\n                        returnValue = rawValue.apply(parent, argumentList);\n                    }\n                    break;\n                case \"CONSTRUCT\" /* MessageType.CONSTRUCT */:\n                    {\n                        const value = new rawValue(...argumentList);\n                        returnValue = proxy(value);\n                    }\n                    break;\n                case \"ENDPOINT\" /* MessageType.ENDPOINT */:\n                    {\n                        const { port1, port2 } = new MessageChannel();\n                        expose(obj, port2);\n                        returnValue = transfer(port1, [port1]);\n                    }\n                    break;\n                case \"RELEASE\" /* MessageType.RELEASE */:\n                    {\n                        returnValue = undefined;\n                    }\n                    break;\n                default:\n                    return;\n            }\n        }\n        catch (value) {\n            returnValue = { value, [throwMarker]: 0 };\n        }\n        Promise.resolve(returnValue)\n            .catch((value) => {\n            return { value, [throwMarker]: 0 };\n        })\n            .then((returnValue) => {\n            const [wireValue, transferables] = toWireValue(returnValue);\n            ep.postMessage(Object.assign(Object.assign({}, wireValue), { id }), transferables);\n            if (type === \"RELEASE\" /* MessageType.RELEASE */) {\n                // detach and deactive after sending release response above.\n                ep.removeEventListener(\"message\", callback);\n                closeEndPoint(ep);\n                if (finalizer in obj && typeof obj[finalizer] === \"function\") {\n                    obj[finalizer]();\n                }\n            }\n        })\n            .catch((error) => {\n            // Send Serialization Error To Caller\n            const [wireValue, transferables] = toWireValue({\n                value: new TypeError(\"Unserializable return value\"),\n                [throwMarker]: 0,\n            });\n            ep.postMessage(Object.assign(Object.assign({}, wireValue), { id }), transferables);\n        });\n    });\n    if (ep.start) {\n        ep.start();\n    }\n}\nfunction isMessagePort(endpoint) {\n    return endpoint.constructor.name === \"MessagePort\";\n}\nfunction closeEndPoint(endpoint) {\n    if (isMessagePort(endpoint))\n        endpoint.close();\n}\nfunction wrap(ep, target) {\n    const pendingListeners = new Map();\n    ep.addEventListener(\"message\", function handleMessage(ev) {\n        const { data } = ev;\n        if (!data || !data.id) {\n            return;\n        }\n        const resolver = pendingListeners.get(data.id);\n        if (!resolver) {\n            return;\n        }\n        try {\n            resolver(data);\n        }\n        finally {\n            pendingListeners.delete(data.id);\n        }\n    });\n    return createProxy(ep, pendingListeners, [], target);\n}\nfunction throwIfProxyReleased(isReleased) {\n    if (isReleased) {\n        throw new Error(\"Proxy has been released and is not useable\");\n    }\n}\nfunction releaseEndpoint(ep) {\n    return requestResponseMessage(ep, new Map(), {\n        type: \"RELEASE\" /* MessageType.RELEASE */,\n    }).then(() => {\n        closeEndPoint(ep);\n    });\n}\nconst proxyCounter = new WeakMap();\nconst proxyFinalizers = \"FinalizationRegistry\" in globalThis &&\n    new FinalizationRegistry((ep) => {\n        const newCount = (proxyCounter.get(ep) || 0) - 1;\n        proxyCounter.set(ep, newCount);\n        if (newCount === 0) {\n            releaseEndpoint(ep);\n        }\n    });\nfunction registerProxy(proxy, ep) {\n    const newCount = (proxyCounter.get(ep) || 0) + 1;\n    proxyCounter.set(ep, newCount);\n    if (proxyFinalizers) {\n        proxyFinalizers.register(proxy, ep, proxy);\n    }\n}\nfunction unregisterProxy(proxy) {\n    if (proxyFinalizers) {\n        proxyFinalizers.unregister(proxy);\n    }\n}\nfunction createProxy(ep, pendingListeners, path = [], target = function () { }) {\n    let isProxyReleased = false;\n    const proxy = new Proxy(target, {\n        get(_target, prop) {\n            throwIfProxyReleased(isProxyReleased);\n            if (prop === releaseProxy) {\n                return () => {\n                    unregisterProxy(proxy);\n                    releaseEndpoint(ep);\n                    pendingListeners.clear();\n                    isProxyReleased = true;\n                };\n            }\n            if (prop === \"then\") {\n                if (path.length === 0) {\n                    return { then: () => proxy };\n                }\n                const r = requestResponseMessage(ep, pendingListeners, {\n                    type: \"GET\" /* MessageType.GET */,\n                    path: path.map((p) => p.toString()),\n                }).then(fromWireValue);\n                return r.then.bind(r);\n            }\n            return createProxy(ep, pendingListeners, [...path, prop]);\n        },\n        set(_target, prop, rawValue) {\n            throwIfProxyReleased(isProxyReleased);\n            // FIXME: ES6 Proxy Handler `set` methods are supposed to return a\n            // boolean. To show good will, we return true asynchronously ¯\\_(ツ)_/¯\n            const [value, transferables] = toWireValue(rawValue);\n            return requestResponseMessage(ep, pendingListeners, {\n                type: \"SET\" /* MessageType.SET */,\n                path: [...path, prop].map((p) => p.toString()),\n                value,\n            }, transferables).then(fromWireValue);\n        },\n        apply(_target, _thisArg, rawArgumentList) {\n            throwIfProxyReleased(isProxyReleased);\n            const last = path[path.length - 1];\n            if (last === createEndpoint) {\n                return requestResponseMessage(ep, pendingListeners, {\n                    type: \"ENDPOINT\" /* MessageType.ENDPOINT */,\n                }).then(fromWireValue);\n            }\n            // We just pretend that `bind()` didn’t happen.\n            if (last === \"bind\") {\n                return createProxy(ep, pendingListeners, path.slice(0, -1));\n            }\n            const [argumentList, transferables] = processArguments(rawArgumentList);\n            return requestResponseMessage(ep, pendingListeners, {\n                type: \"APPLY\" /* MessageType.APPLY */,\n                path: path.map((p) => p.toString()),\n                argumentList,\n            }, transferables).then(fromWireValue);\n        },\n        construct(_target, rawArgumentList) {\n            throwIfProxyReleased(isProxyReleased);\n            const [argumentList, transferables] = processArguments(rawArgumentList);\n            return requestResponseMessage(ep, pendingListeners, {\n                type: \"CONSTRUCT\" /* MessageType.CONSTRUCT */,\n                path: path.map((p) => p.toString()),\n                argumentList,\n            }, transferables).then(fromWireValue);\n        },\n    });\n    registerProxy(proxy, ep);\n    return proxy;\n}\nfunction myFlat(arr) {\n    return Array.prototype.concat.apply([], arr);\n}\nfunction processArguments(argumentList) {\n    const processed = argumentList.map(toWireValue);\n    return [processed.map((v) => v[0]), myFlat(processed.map((v) => v[1]))];\n}\nconst transferCache = new WeakMap();\nfunction transfer(obj, transfers) {\n    transferCache.set(obj, transfers);\n    return obj;\n}\nfunction proxy(obj) {\n    return Object.assign(obj, { [proxyMarker]: true });\n}\nfunction windowEndpoint(w, context = globalThis, targetOrigin = \"*\") {\n    return {\n        postMessage: (msg, transferables) => w.postMessage(msg, targetOrigin, transferables),\n        addEventListener: context.addEventListener.bind(context),\n        removeEventListener: context.removeEventListener.bind(context),\n    };\n}\nfunction toWireValue(value) {\n    for (const [name, handler] of transferHandlers) {\n        if (handler.canHandle(value)) {\n            const [serializedValue, transferables] = handler.serialize(value);\n            return [\n                {\n                    type: \"HANDLER\" /* WireValueType.HANDLER */,\n                    name,\n                    value: serializedValue,\n                },\n                transferables,\n            ];\n        }\n    }\n    return [\n        {\n            type: \"RAW\" /* WireValueType.RAW */,\n            value,\n        },\n        transferCache.get(value) || [],\n    ];\n}\nfunction fromWireValue(value) {\n    switch (value.type) {\n        case \"HANDLER\" /* WireValueType.HANDLER */:\n            return transferHandlers.get(value.name).deserialize(value.value);\n        case \"RAW\" /* WireValueType.RAW */:\n            return value.value;\n    }\n}\nfunction requestResponseMessage(ep, pendingListeners, msg, transfers) {\n    return new Promise((resolve) => {\n        const id = generateUUID();\n        pendingListeners.set(id, resolve);\n        if (ep.start) {\n            ep.start();\n        }\n        ep.postMessage(Object.assign({ id }, msg), transfers);\n    });\n}\nfunction generateUUID() {\n    return new Array(4)\n        .fill(0)\n        .map(() => Math.floor(Math.random() * Number.MAX_SAFE_INTEGER).toString(16))\n        .join(\"-\");\n}\n\nexport { createEndpoint, expose, finalizer, proxy, proxyMarker, releaseProxy, transfer, transferHandlers, windowEndpoint, wrap };\n//# sourceMappingURL=comlink.mjs.map\n","import { cutZhWords } from \"./cutZhWords\";\nconst MAX_TERMS = 12;\nconst HALF_MAX_TERMS = MAX_TERMS / 2;\n/**\n * Get all possible terms for a list of tokens consists of words mixed in Chinese and non-Chinese,\n * by a Chinese words dictionary.\n *\n * @param tokens - Tokens consists of English words or strings of consecutive Chinese words.\n * @param zhDictionary - A Chinese words dictionary.\n *\n * @returns A smart term list.\n */\nexport function smartTerms(tokens, zhDictionary) {\n    const tokenTerms = tokens\n        .map((token) => {\n        if (/\\p{Unified_Ideograph}/u.test(token)) {\n            return cutZhWords(token, zhDictionary);\n        }\n        else {\n            return [{ value: token }];\n        }\n    })\n        .slice(0, MAX_TERMS);\n    const tokenTermsThatAreMultiple = tokenTerms.filter((tokenTerm) => tokenTerm.length > 1);\n    let termsProduct = 1;\n    let overflowed = false;\n    for (const tokenTerm of tokenTermsThatAreMultiple) {\n        if (overflowed) {\n            tokenTerm.splice(1, tokenTerm.length - 1);\n        }\n        else {\n            if (tokenTerm.length > HALF_MAX_TERMS) {\n                tokenTerm.splice(HALF_MAX_TERMS, tokenTerm.length - HALF_MAX_TERMS);\n            }\n            const product = termsProduct * tokenTerm.length;\n            if (product >= MAX_TERMS) {\n                if (product > MAX_TERMS) {\n                    const max = Math.floor(MAX_TERMS / termsProduct);\n                    tokenTerm.splice(max, tokenTerm.length - max);\n                    termsProduct = max * termsProduct;\n                }\n                else {\n                    termsProduct = product;\n                }\n                if (termsProduct > HALF_MAX_TERMS) {\n                    overflowed = true;\n                }\n            }\n            else {\n                termsProduct = product;\n            }\n        }\n    }\n    // Get all possible combinations of terms.\n    const terms = [];\n    function combine(index, carry) {\n        if (index === tokenTerms.length || carry.length >= MAX_TERMS) {\n            terms.push(carry.slice(0, MAX_TERMS));\n            return;\n        }\n        for (const term of tokenTerms[index]) {\n            combine(index + 1, carry.concat(term));\n        }\n    }\n    combine(0, []);\n    return terms;\n}\n","import lunr from \"lunr\";\nimport { smartTerms } from \"./smartTerms\";\nimport { language, removeDefaultStopWordFilter, fuzzyMatchingDistance, } from \"./proxiedGeneratedConstants\";\n/**\n * Get all possible queries for a list of tokens consists of words mixed English and Chinese,\n * by a Chinese words dictionary.\n *\n * @param tokens - Tokens consists of English words or strings of consecutive Chinese words.\n * @param zhDictionary - A Chinese words dictionary.\n *\n * @returns A smart query list.\n */\nexport function smartQueries(tokens, zhDictionary) {\n    const terms = smartTerms(tokens, zhDictionary);\n    if (terms.length === 0) {\n        // There are no matched terms.\n        // All tokens are considered required and with wildcard.\n        return [\n            {\n                tokens,\n                term: tokens.map((value) => ({\n                    value,\n                    presence: lunr.Query.presence.REQUIRED,\n                    wildcard: lunr.Query.wildcard.LEADING | lunr.Query.wildcard.TRAILING,\n                })),\n            },\n        ];\n    }\n    // The last token of a term maybe incomplete while user is typing.\n    for (const term of terms) {\n        term[term.length - 1].maybeTyping = true;\n    }\n    // Try to append terms without stop words,\n    // since they are removed in the index.\n    const stopWordPipelines = [];\n    for (const lang of language) {\n        if (lang === \"en\") {\n            if (!removeDefaultStopWordFilter) {\n                stopWordPipelines.unshift(lunr.stopWordFilter);\n            }\n        }\n        else {\n            const lunrLang = lunr[lang];\n            if (lunrLang.stopWordFilter) {\n                stopWordPipelines.unshift(lunrLang.stopWordFilter);\n            }\n        }\n    }\n    let refinedTerms;\n    if (stopWordPipelines.length > 0) {\n        const pipe = (term) => stopWordPipelines.reduce((term, p) => term.filter((item) => p(item.value)), term);\n        refinedTerms = [];\n        const newTerms = [];\n        for (const term of terms) {\n            const filteredTerm = pipe(term);\n            refinedTerms.push(filteredTerm);\n            // Add extra terms only if some stop words are removed,\n            // and some non-stop-words exist too.\n            if (filteredTerm.length < term.length && filteredTerm.length > 0) {\n                newTerms.push(filteredTerm);\n            }\n        }\n        terms.push(...newTerms);\n    }\n    else {\n        refinedTerms = terms.slice();\n    }\n    // Also try to add extra terms which miss one of the searched tokens,\n    // when the term contains 3 or more tokens,\n    // to improve the search precision.\n    const extraTerms = [];\n    for (const term of refinedTerms) {\n        if (term.length > 2) {\n            for (let i = term.length - 1; i >= 0; i -= 1) {\n                extraTerms.push(term.slice(0, i).concat(term.slice(i + 1)));\n            }\n        }\n    }\n    const distance = Math.max(0, fuzzyMatchingDistance);\n    return getDistanceMatrix(terms, distance).concat(getDistanceMatrix(extraTerms, distance));\n}\nfunction getQueriesMaybeTyping(terms, editDistance) {\n    return termsToQueries(terms, editDistance).concat(termsToQueries(\n    // Ignore terms whose last token already has a trailing wildcard,\n    // or the last token is not `maybeTyping`.\n    terms.filter((term) => {\n        const token = term[term.length - 1];\n        return !token.trailing && token.maybeTyping;\n    }), editDistance, true));\n}\nfunction termsToQueries(terms, editDistance, maybeTyping) {\n    return terms.flatMap((term) => {\n        const query = {\n            tokens: term.map((item) => item.value),\n            term: term.map((item) => {\n                // The last token of a term maybe incomplete while user is typing.\n                // So append more queries with trailing wildcard added.\n                const trailing = maybeTyping\n                    ? item.trailing || item.maybeTyping\n                    : item.trailing;\n                const distance = editDistance > 0 && item.value.length > editDistance\n                    ? editDistance\n                    : undefined;\n                return {\n                    value: item.value,\n                    presence: lunr.Query.presence.REQUIRED,\n                    wildcard: trailing\n                        ? lunr.Query.wildcard.TRAILING\n                        : lunr.Query.wildcard.NONE,\n                    editDistance: distance,\n                };\n            }),\n        };\n        // Ignore queries that all terms ignored edit distance due to too short tokens.\n        if (editDistance && query.term.every((item) => !item.editDistance)) {\n            return [];\n        }\n        return query;\n    });\n}\nfunction getDistanceMatrix(terms, distance) {\n    return Array.from({ length: distance + 1 }, (_, i) => getQueriesMaybeTyping(terms, i)).flat();\n}\n","/**\n * Get all possible terms for a string of consecutive Chinese words,\n * by a words dictionary.\n *\n * @remarks\n *\n * Terms are sorted in ascending order by the count of words.\n *\n * @param token - A string of consecutive Chinese words.\n * @param zhDictionary - A Chinese words dictionary.\n *\n * @returns A smart term list.\n */\nexport function cutZhWords(token, zhDictionary) {\n    const wrappedTerms = [];\n    function cut(subToken, carry) {\n        let matchedLastIndex = 0;\n        let matched = false;\n        for (const words of zhDictionary) {\n            if (subToken.substr(0, words.length) === words) {\n                const nextCarry = {\n                    missed: carry.missed,\n                    term: carry.term.concat({\n                        value: words,\n                    }),\n                };\n                if (subToken.length > words.length) {\n                    cut(subToken.substr(words.length), nextCarry);\n                }\n                else {\n                    wrappedTerms.push(nextCarry);\n                }\n                matched = true;\n            }\n            else {\n                for (let lastIndex = words.length - 1; lastIndex > matchedLastIndex; lastIndex -= 1) {\n                    const subWords = words.substr(0, lastIndex);\n                    if (subToken.substr(0, lastIndex) === subWords) {\n                        matchedLastIndex = lastIndex;\n                        const nextCarry = {\n                            missed: carry.missed,\n                            term: carry.term.concat({\n                                value: subWords,\n                                trailing: true,\n                            }),\n                        };\n                        if (subToken.length > lastIndex) {\n                            cut(subToken.substr(lastIndex), nextCarry);\n                        }\n                        else {\n                            wrappedTerms.push(nextCarry);\n                        }\n                        matched = true;\n                        break;\n                    }\n                }\n            }\n        }\n        if (!matched) {\n            if (subToken.length > 0) {\n                cut(subToken.substr(1), {\n                    missed: carry.missed + 1,\n                    term: carry.term,\n                });\n            }\n            else if (carry.term.length > 0) {\n                wrappedTerms.push(carry);\n            }\n        }\n    }\n    cut(token, {\n        missed: 0,\n        term: [],\n    });\n    return wrappedTerms\n        .sort((a, b) => {\n        const aMissed = a.missed > 0 ? 1 : 0;\n        const bMissed = b.missed > 0 ? 1 : 0;\n        if (aMissed !== bMissed) {\n            // Put all no-words-missed terms before words-missed terms.\n            return aMissed - bMissed;\n        }\n        // Put terms with less words before those with more words.\n        return a.term.length - b.term.length;\n    })\n        .map((item) => item.term);\n}\n","export var SearchDocumentType;\n(function (SearchDocumentType) {\n    SearchDocumentType[SearchDocumentType[\"Title\"] = 0] = \"Title\";\n    SearchDocumentType[SearchDocumentType[\"Heading\"] = 1] = \"Heading\";\n    SearchDocumentType[SearchDocumentType[\"Description\"] = 2] = \"Description\";\n    SearchDocumentType[SearchDocumentType[\"Keywords\"] = 3] = \"Keywords\";\n    SearchDocumentType[SearchDocumentType[\"Content\"] = 4] = \"Content\";\n})(SearchDocumentType || (SearchDocumentType = {}));\n","import * as Comlink from \"comlink\";\nimport lunr from \"lunr\";\nimport { searchIndexUrl, language } from \"../utils/proxiedGeneratedConstants\";\nimport { tokenize } from \"../utils/tokenize\";\nimport { smartQueries } from \"../utils/smartQueries\";\nimport { SearchDocumentType, } from \"../../shared/interfaces\";\nimport { sortSearchResults } from \"../utils/sortSearchResults\";\nimport { processTreeStatusOfSearchResults } from \"../utils/processTreeStatusOfSearchResults\";\nconst cache = new Map();\nexport class SearchWorker {\n    async fetchIndexes(baseUrl, searchContext) {\n        await this.lowLevelFetchIndexes(baseUrl, searchContext);\n    }\n    async lowLevelFetchIndexes(baseUrl, searchContext) {\n        const cacheKey = `${baseUrl}${searchContext}`;\n        let promise = cache.get(cacheKey);\n        if (!promise) {\n            promise = legacyFetchIndexes(baseUrl, searchContext);\n            cache.set(cacheKey, promise);\n        }\n        return promise;\n    }\n    async search(baseUrl, searchContext, input, limit) {\n        const rawTokens = tokenize(input, language);\n        if (rawTokens.length === 0) {\n            return [];\n        }\n        const { wrappedIndexes, zhDictionary } = await this.lowLevelFetchIndexes(baseUrl, searchContext);\n        const queries = smartQueries(rawTokens, zhDictionary);\n        const results = [];\n        search: for (const { term, tokens } of queries) {\n            for (const { documents, index, type } of wrappedIndexes) {\n                results.push(...index\n                    .query((query) => {\n                    for (const item of term) {\n                        query.term(item.value, {\n                            wildcard: item.wildcard,\n                            presence: item.presence,\n                            ...(item.editDistance\n                                ? { editDistance: item.editDistance }\n                                : null),\n                        });\n                    }\n                })\n                    .slice(0, limit)\n                    // Remove duplicated results.\n                    .filter((result) => !results.some((item) => item.document.i.toString() === result.ref))\n                    .slice(0, limit - results.length)\n                    .map((result) => {\n                    const document = documents.find((doc) => doc.i.toString() === result.ref);\n                    return {\n                        document,\n                        type,\n                        page: type !== SearchDocumentType.Title &&\n                            wrappedIndexes[0].documents.find((doc) => doc.i === document.p),\n                        metadata: result.matchData.metadata,\n                        tokens,\n                        score: result.score,\n                    };\n                }));\n                if (results.length >= limit) {\n                    break search;\n                }\n            }\n        }\n        sortSearchResults(results);\n        processTreeStatusOfSearchResults(results);\n        return results;\n    }\n}\nasync function legacyFetchIndexes(baseUrl, searchContext) {\n    const url = `${baseUrl}${searchIndexUrl.replace(\"{dir}\", searchContext ? `-${searchContext.replace(/\\//g, \"-\")}` : \"\")}`;\n    // Catch potential attacks.\n    const fullUrl = new URL(url, location.origin);\n    if (fullUrl.origin !== location.origin) {\n        throw new Error(\"Unexpected version url\");\n    }\n    const json = (await (await fetch(url)).json());\n    const wrappedIndexes = json.map(({ documents, index }, type) => ({\n        type: type,\n        documents,\n        index: lunr.Index.load(index),\n    }));\n    const zhDictionary = json.reduce((acc, item) => {\n        for (const tuple of item.index.invertedIndex) {\n            if (/\\p{Unified_Ideograph}/u.test(tuple[0][0])) {\n                acc.add(tuple[0]);\n            }\n        }\n        return acc;\n    }, new Set());\n    return {\n        wrappedIndexes,\n        zhDictionary: Array.from(zhDictionary),\n    };\n}\nComlink.expose(SearchWorker);\n","import lunr from \"lunr\";\n/**\n * Split a sentence to tokens, considering a sequence of consecutive Chinese words as a single token.\n *\n * @param text - Text to be tokenized.\n * @param language - Languages used.\n *\n * @returns Tokens.\n */\nexport function tokenize(text, language) {\n    // Some languages have their own tokenizer.\n    if (language.length === 1 && [\"ja\", \"jp\", \"th\"].includes(language[0])) {\n        return lunr[language[0]]\n            .tokenizer(text)\n            .map((token) => token.toString());\n    }\n    let regExpMatchWords = /[^-\\s]+/g;\n    // Especially optimization for `zh`.\n    if (language.includes(\"zh\")) {\n        // Currently only works fine with letters in Latin alphabet and Chinese.\n        // https://zhuanlan.zhihu.com/p/33335629\n        regExpMatchWords = /\\w+|\\p{Unified_Ideograph}+/gu;\n        // regExpMatchWords = /\\p{Unified_Ideograph}+|[^-\\s\\p{Unified_Ideograph}]+/gu;\n        // https://mothereff.in/regexpu#input=const+regex+%3D+/%5Cp%7BUnified_Ideograph%7D/u%3B&unicodePropertyEscape=1\n        // regExpMatchWords = /\\w+|[\\u3400-\\u4DBF\\u4E00-\\u9FFC\\uFA0E\\uFA0F\\uFA11\\uFA13\\uFA14\\uFA1F\\uFA21\\uFA23\\uFA24\\uFA27-\\uFA29\\u{20000}-\\u{2A6DD}\\u{2A700}-\\u{2B734}\\u{2B740}-\\u{2B81D}\\u{2B820}-\\u{2CEA1}\\u{2CEB0}-\\u{2EBE0}\\u{30000}-\\u{3134A}]+/gu\n    }\n    return text.toLowerCase().match(regExpMatchWords) || [];\n}\n","import { SearchDocumentType, } from \"../../shared/interfaces\";\nexport function sortSearchResults(results) {\n    results.forEach((item, index) => {\n        item.index = index;\n    });\n    // Put search results of headings/contents/descriptions just after\n    // their belonged page's title, if existed.\n    results.sort((a, b) => {\n        let aPageIndex = (a.type === SearchDocumentType.Heading ||\n            a.type === SearchDocumentType.Content ||\n            a.type === SearchDocumentType.Description) &&\n            a.page\n            ? results.findIndex((item) => item.document === a.page)\n            : a.index;\n        let bPageIndex = (b.type === SearchDocumentType.Heading ||\n            b.type === SearchDocumentType.Content ||\n            b.type === SearchDocumentType.Description) &&\n            b.page\n            ? results.findIndex((item) => item.document === b.page)\n            : b.index;\n        if (aPageIndex === -1) {\n            aPageIndex = a.index;\n        }\n        if (bPageIndex === -1) {\n            bPageIndex = b.index;\n        }\n        if (aPageIndex === bPageIndex) {\n            const diff = (b.type === 0 ? 1 : 0) - (a.type === 0 ? 1 : 0);\n            return diff === 0 ? a.index - b.index : diff;\n        }\n        return aPageIndex - bPageIndex;\n    });\n}\n","import { SearchDocumentType, } from \"../../shared/interfaces\";\nexport function processTreeStatusOfSearchResults(results) {\n    results.forEach((item, i) => {\n        if (i > 0 &&\n            item.page &&\n            results\n                .slice(0, i)\n                .some((prev) => (prev.type === SearchDocumentType.Keywords\n                ? prev.page\n                : prev.document) === item.page)) {\n            if (i < results.length - 1 && results[i + 1].page === item.page) {\n                item.isInterOfTree = true;\n            }\n            else {\n                item.isLastOfTree = true;\n            }\n        }\n    });\n}\n","/**\n * lunr - http://lunrjs.com - A bit like Solr, but much smaller and not as bright - 2.3.9\n * Copyright (C) 2020 Oliver Nightingale\n * @license MIT\n */\n\n;(function(){\n\n/**\n * A convenience function for configuring and constructing\n * a new lunr Index.\n *\n * A lunr.Builder instance is created and the pipeline setup\n * with a trimmer, stop word filter and stemmer.\n *\n * This builder object is yielded to the configuration function\n * that is passed as a parameter, allowing the list of fields\n * and other builder parameters to be customised.\n *\n * All documents _must_ be added within the passed config function.\n *\n * @example\n * var idx = lunr(function () {\n *   this.field('title')\n *   this.field('body')\n *   this.ref('id')\n *\n *   documents.forEach(function (doc) {\n *     this.add(doc)\n *   }, this)\n * })\n *\n * @see {@link lunr.Builder}\n * @see {@link lunr.Pipeline}\n * @see {@link lunr.trimmer}\n * @see {@link lunr.stopWordFilter}\n * @see {@link lunr.stemmer}\n * @namespace {function} lunr\n */\nvar lunr = function (config) {\n  var builder = new lunr.Builder\n\n  builder.pipeline.add(\n    lunr.trimmer,\n    lunr.stopWordFilter,\n    lunr.stemmer\n  )\n\n  builder.searchPipeline.add(\n    lunr.stemmer\n  )\n\n  config.call(builder, builder)\n  return builder.build()\n}\n\nlunr.version = \"2.3.9\"\n/*!\n * lunr.utils\n * Copyright (C) 2020 Oliver Nightingale\n */\n\n/**\n * A namespace containing utils for the rest of the lunr library\n * @namespace lunr.utils\n */\nlunr.utils = {}\n\n/**\n * Print a warning message to the console.\n *\n * @param {String} message The message to be printed.\n * @memberOf lunr.utils\n * @function\n */\nlunr.utils.warn = (function (global) {\n  /* eslint-disable no-console */\n  return function (message) {\n    if (global.console && console.warn) {\n      console.warn(message)\n    }\n  }\n  /* eslint-enable no-console */\n})(this)\n\n/**\n * Convert an object to a string.\n *\n * In the case of `null` and `undefined` the function returns\n * the empty string, in all other cases the result of calling\n * `toString` on the passed object is returned.\n *\n * @param {Any} obj The object to convert to a string.\n * @return {String} string representation of the passed object.\n * @memberOf lunr.utils\n */\nlunr.utils.asString = function (obj) {\n  if (obj === void 0 || obj === null) {\n    return \"\"\n  } else {\n    return obj.toString()\n  }\n}\n\n/**\n * Clones an object.\n *\n * Will create a copy of an existing object such that any mutations\n * on the copy cannot affect the original.\n *\n * Only shallow objects are supported, passing a nested object to this\n * function will cause a TypeError.\n *\n * Objects with primitives, and arrays of primitives are supported.\n *\n * @param {Object} obj The object to clone.\n * @return {Object} a clone of the passed object.\n * @throws {TypeError} when a nested object is passed.\n * @memberOf Utils\n */\nlunr.utils.clone = function (obj) {\n  if (obj === null || obj === undefined) {\n    return obj\n  }\n\n  var clone = Object.create(null),\n      keys = Object.keys(obj)\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i],\n        val = obj[key]\n\n    if (Array.isArray(val)) {\n      clone[key] = val.slice()\n      continue\n    }\n\n    if (typeof val === 'string' ||\n        typeof val === 'number' ||\n        typeof val === 'boolean') {\n      clone[key] = val\n      continue\n    }\n\n    throw new TypeError(\"clone is not deep and does not support nested objects\")\n  }\n\n  return clone\n}\nlunr.FieldRef = function (docRef, fieldName, stringValue) {\n  this.docRef = docRef\n  this.fieldName = fieldName\n  this._stringValue = stringValue\n}\n\nlunr.FieldRef.joiner = \"/\"\n\nlunr.FieldRef.fromString = function (s) {\n  var n = s.indexOf(lunr.FieldRef.joiner)\n\n  if (n === -1) {\n    throw \"malformed field ref string\"\n  }\n\n  var fieldRef = s.slice(0, n),\n      docRef = s.slice(n + 1)\n\n  return new lunr.FieldRef (docRef, fieldRef, s)\n}\n\nlunr.FieldRef.prototype.toString = function () {\n  if (this._stringValue == undefined) {\n    this._stringValue = this.fieldName + lunr.FieldRef.joiner + this.docRef\n  }\n\n  return this._stringValue\n}\n/*!\n * lunr.Set\n * Copyright (C) 2020 Oliver Nightingale\n */\n\n/**\n * A lunr set.\n *\n * @constructor\n */\nlunr.Set = function (elements) {\n  this.elements = Object.create(null)\n\n  if (elements) {\n    this.length = elements.length\n\n    for (var i = 0; i < this.length; i++) {\n      this.elements[elements[i]] = true\n    }\n  } else {\n    this.length = 0\n  }\n}\n\n/**\n * A complete set that contains all elements.\n *\n * @static\n * @readonly\n * @type {lunr.Set}\n */\nlunr.Set.complete = {\n  intersect: function (other) {\n    return other\n  },\n\n  union: function () {\n    return this\n  },\n\n  contains: function () {\n    return true\n  }\n}\n\n/**\n * An empty set that contains no elements.\n *\n * @static\n * @readonly\n * @type {lunr.Set}\n */\nlunr.Set.empty = {\n  intersect: function () {\n    return this\n  },\n\n  union: function (other) {\n    return other\n  },\n\n  contains: function () {\n    return false\n  }\n}\n\n/**\n * Returns true if this set contains the specified object.\n *\n * @param {object} object - Object whose presence in this set is to be tested.\n * @returns {boolean} - True if this set contains the specified object.\n */\nlunr.Set.prototype.contains = function (object) {\n  return !!this.elements[object]\n}\n\n/**\n * Returns a new set containing only the elements that are present in both\n * this set and the specified set.\n *\n * @param {lunr.Set} other - set to intersect with this set.\n * @returns {lunr.Set} a new set that is the intersection of this and the specified set.\n */\n\nlunr.Set.prototype.intersect = function (other) {\n  var a, b, elements, intersection = []\n\n  if (other === lunr.Set.complete) {\n    return this\n  }\n\n  if (other === lunr.Set.empty) {\n    return other\n  }\n\n  if (this.length < other.length) {\n    a = this\n    b = other\n  } else {\n    a = other\n    b = this\n  }\n\n  elements = Object.keys(a.elements)\n\n  for (var i = 0; i < elements.length; i++) {\n    var element = elements[i]\n    if (element in b.elements) {\n      intersection.push(element)\n    }\n  }\n\n  return new lunr.Set (intersection)\n}\n\n/**\n * Returns a new set combining the elements of this and the specified set.\n *\n * @param {lunr.Set} other - set to union with this set.\n * @return {lunr.Set} a new set that is the union of this and the specified set.\n */\n\nlunr.Set.prototype.union = function (other) {\n  if (other === lunr.Set.complete) {\n    return lunr.Set.complete\n  }\n\n  if (other === lunr.Set.empty) {\n    return this\n  }\n\n  return new lunr.Set(Object.keys(this.elements).concat(Object.keys(other.elements)))\n}\n/**\n * A function to calculate the inverse document frequency for\n * a posting. This is shared between the builder and the index\n *\n * @private\n * @param {object} posting - The posting for a given term\n * @param {number} documentCount - The total number of documents.\n */\nlunr.idf = function (posting, documentCount) {\n  var documentsWithTerm = 0\n\n  for (var fieldName in posting) {\n    if (fieldName == '_index') continue // Ignore the term index, its not a field\n    documentsWithTerm += Object.keys(posting[fieldName]).length\n  }\n\n  var x = (documentCount - documentsWithTerm + 0.5) / (documentsWithTerm + 0.5)\n\n  return Math.log(1 + Math.abs(x))\n}\n\n/**\n * A token wraps a string representation of a token\n * as it is passed through the text processing pipeline.\n *\n * @constructor\n * @param {string} [str=''] - The string token being wrapped.\n * @param {object} [metadata={}] - Metadata associated with this token.\n */\nlunr.Token = function (str, metadata) {\n  this.str = str || \"\"\n  this.metadata = metadata || {}\n}\n\n/**\n * Returns the token string that is being wrapped by this object.\n *\n * @returns {string}\n */\nlunr.Token.prototype.toString = function () {\n  return this.str\n}\n\n/**\n * A token update function is used when updating or optionally\n * when cloning a token.\n *\n * @callback lunr.Token~updateFunction\n * @param {string} str - The string representation of the token.\n * @param {Object} metadata - All metadata associated with this token.\n */\n\n/**\n * Applies the given function to the wrapped string token.\n *\n * @example\n * token.update(function (str, metadata) {\n *   return str.toUpperCase()\n * })\n *\n * @param {lunr.Token~updateFunction} fn - A function to apply to the token string.\n * @returns {lunr.Token}\n */\nlunr.Token.prototype.update = function (fn) {\n  this.str = fn(this.str, this.metadata)\n  return this\n}\n\n/**\n * Creates a clone of this token. Optionally a function can be\n * applied to the cloned token.\n *\n * @param {lunr.Token~updateFunction} [fn] - An optional function to apply to the cloned token.\n * @returns {lunr.Token}\n */\nlunr.Token.prototype.clone = function (fn) {\n  fn = fn || function (s) { return s }\n  return new lunr.Token (fn(this.str, this.metadata), this.metadata)\n}\n/*!\n * lunr.tokenizer\n * Copyright (C) 2020 Oliver Nightingale\n */\n\n/**\n * A function for splitting a string into tokens ready to be inserted into\n * the search index. Uses `lunr.tokenizer.separator` to split strings, change\n * the value of this property to change how strings are split into tokens.\n *\n * This tokenizer will convert its parameter to a string by calling `toString` and\n * then will split this string on the character in `lunr.tokenizer.separator`.\n * Arrays will have their elements converted to strings and wrapped in a lunr.Token.\n *\n * Optional metadata can be passed to the tokenizer, this metadata will be cloned and\n * added as metadata to every token that is created from the object to be tokenized.\n *\n * @static\n * @param {?(string|object|object[])} obj - The object to convert into tokens\n * @param {?object} metadata - Optional metadata to associate with every token\n * @returns {lunr.Token[]}\n * @see {@link lunr.Pipeline}\n */\nlunr.tokenizer = function (obj, metadata) {\n  if (obj == null || obj == undefined) {\n    return []\n  }\n\n  if (Array.isArray(obj)) {\n    return obj.map(function (t) {\n      return new lunr.Token(\n        lunr.utils.asString(t).toLowerCase(),\n        lunr.utils.clone(metadata)\n      )\n    })\n  }\n\n  var str = obj.toString().toLowerCase(),\n      len = str.length,\n      tokens = []\n\n  for (var sliceEnd = 0, sliceStart = 0; sliceEnd <= len; sliceEnd++) {\n    var char = str.charAt(sliceEnd),\n        sliceLength = sliceEnd - sliceStart\n\n    if ((char.match(lunr.tokenizer.separator) || sliceEnd == len)) {\n\n      if (sliceLength > 0) {\n        var tokenMetadata = lunr.utils.clone(metadata) || {}\n        tokenMetadata[\"position\"] = [sliceStart, sliceLength]\n        tokenMetadata[\"index\"] = tokens.length\n\n        tokens.push(\n          new lunr.Token (\n            str.slice(sliceStart, sliceEnd),\n            tokenMetadata\n          )\n        )\n      }\n\n      sliceStart = sliceEnd + 1\n    }\n\n  }\n\n  return tokens\n}\n\n/**\n * The separator used to split a string into tokens. Override this property to change the behaviour of\n * `lunr.tokenizer` behaviour when tokenizing strings. By default this splits on whitespace and hyphens.\n *\n * @static\n * @see lunr.tokenizer\n */\nlunr.tokenizer.separator = /[\\s\\-]+/\n/*!\n * lunr.Pipeline\n * Copyright (C) 2020 Oliver Nightingale\n */\n\n/**\n * lunr.Pipelines maintain an ordered list of functions to be applied to all\n * tokens in documents entering the search index and queries being ran against\n * the index.\n *\n * An instance of lunr.Index created with the lunr shortcut will contain a\n * pipeline with a stop word filter and an English language stemmer. Extra\n * functions can be added before or after either of these functions or these\n * default functions can be removed.\n *\n * When run the pipeline will call each function in turn, passing a token, the\n * index of that token in the original list of all tokens and finally a list of\n * all the original tokens.\n *\n * The output of functions in the pipeline will be passed to the next function\n * in the pipeline. To exclude a token from entering the index the function\n * should return undefined, the rest of the pipeline will not be called with\n * this token.\n *\n * For serialisation of pipelines to work, all functions used in an instance of\n * a pipeline should be registered with lunr.Pipeline. Registered functions can\n * then be loaded. If trying to load a serialised pipeline that uses functions\n * that are not registered an error will be thrown.\n *\n * If not planning on serialising the pipeline then registering pipeline functions\n * is not necessary.\n *\n * @constructor\n */\nlunr.Pipeline = function () {\n  this._stack = []\n}\n\nlunr.Pipeline.registeredFunctions = Object.create(null)\n\n/**\n * A pipeline function maps lunr.Token to lunr.Token. A lunr.Token contains the token\n * string as well as all known metadata. A pipeline function can mutate the token string\n * or mutate (or add) metadata for a given token.\n *\n * A pipeline function can indicate that the passed token should be discarded by returning\n * null, undefined or an empty string. This token will not be passed to any downstream pipeline\n * functions and will not be added to the index.\n *\n * Multiple tokens can be returned by returning an array of tokens. Each token will be passed\n * to any downstream pipeline functions and all will returned tokens will be added to the index.\n *\n * Any number of pipeline functions may be chained together using a lunr.Pipeline.\n *\n * @interface lunr.PipelineFunction\n * @param {lunr.Token} token - A token from the document being processed.\n * @param {number} i - The index of this token in the complete list of tokens for this document/field.\n * @param {lunr.Token[]} tokens - All tokens for this document/field.\n * @returns {(?lunr.Token|lunr.Token[])}\n */\n\n/**\n * Register a function with the pipeline.\n *\n * Functions that are used in the pipeline should be registered if the pipeline\n * needs to be serialised, or a serialised pipeline needs to be loaded.\n *\n * Registering a function does not add it to a pipeline, functions must still be\n * added to instances of the pipeline for them to be used when running a pipeline.\n *\n * @param {lunr.PipelineFunction} fn - The function to check for.\n * @param {String} label - The label to register this function with\n */\nlunr.Pipeline.registerFunction = function (fn, label) {\n  if (label in this.registeredFunctions) {\n    lunr.utils.warn('Overwriting existing registered function: ' + label)\n  }\n\n  fn.label = label\n  lunr.Pipeline.registeredFunctions[fn.label] = fn\n}\n\n/**\n * Warns if the function is not registered as a Pipeline function.\n *\n * @param {lunr.PipelineFunction} fn - The function to check for.\n * @private\n */\nlunr.Pipeline.warnIfFunctionNotRegistered = function (fn) {\n  var isRegistered = fn.label && (fn.label in this.registeredFunctions)\n\n  if (!isRegistered) {\n    lunr.utils.warn('Function is not registered with pipeline. This may cause problems when serialising the index.\\n', fn)\n  }\n}\n\n/**\n * Loads a previously serialised pipeline.\n *\n * All functions to be loaded must already be registered with lunr.Pipeline.\n * If any function from the serialised data has not been registered then an\n * error will be thrown.\n *\n * @param {Object} serialised - The serialised pipeline to load.\n * @returns {lunr.Pipeline}\n */\nlunr.Pipeline.load = function (serialised) {\n  var pipeline = new lunr.Pipeline\n\n  serialised.forEach(function (fnName) {\n    var fn = lunr.Pipeline.registeredFunctions[fnName]\n\n    if (fn) {\n      pipeline.add(fn)\n    } else {\n      throw new Error('Cannot load unregistered function: ' + fnName)\n    }\n  })\n\n  return pipeline\n}\n\n/**\n * Adds new functions to the end of the pipeline.\n *\n * Logs a warning if the function has not been registered.\n *\n * @param {lunr.PipelineFunction[]} functions - Any number of functions to add to the pipeline.\n */\nlunr.Pipeline.prototype.add = function () {\n  var fns = Array.prototype.slice.call(arguments)\n\n  fns.forEach(function (fn) {\n    lunr.Pipeline.warnIfFunctionNotRegistered(fn)\n    this._stack.push(fn)\n  }, this)\n}\n\n/**\n * Adds a single function after a function that already exists in the\n * pipeline.\n *\n * Logs a warning if the function has not been registered.\n *\n * @param {lunr.PipelineFunction} existingFn - A function that already exists in the pipeline.\n * @param {lunr.PipelineFunction} newFn - The new function to add to the pipeline.\n */\nlunr.Pipeline.prototype.after = function (existingFn, newFn) {\n  lunr.Pipeline.warnIfFunctionNotRegistered(newFn)\n\n  var pos = this._stack.indexOf(existingFn)\n  if (pos == -1) {\n    throw new Error('Cannot find existingFn')\n  }\n\n  pos = pos + 1\n  this._stack.splice(pos, 0, newFn)\n}\n\n/**\n * Adds a single function before a function that already exists in the\n * pipeline.\n *\n * Logs a warning if the function has not been registered.\n *\n * @param {lunr.PipelineFunction} existingFn - A function that already exists in the pipeline.\n * @param {lunr.PipelineFunction} newFn - The new function to add to the pipeline.\n */\nlunr.Pipeline.prototype.before = function (existingFn, newFn) {\n  lunr.Pipeline.warnIfFunctionNotRegistered(newFn)\n\n  var pos = this._stack.indexOf(existingFn)\n  if (pos == -1) {\n    throw new Error('Cannot find existingFn')\n  }\n\n  this._stack.splice(pos, 0, newFn)\n}\n\n/**\n * Removes a function from the pipeline.\n *\n * @param {lunr.PipelineFunction} fn The function to remove from the pipeline.\n */\nlunr.Pipeline.prototype.remove = function (fn) {\n  var pos = this._stack.indexOf(fn)\n  if (pos == -1) {\n    return\n  }\n\n  this._stack.splice(pos, 1)\n}\n\n/**\n * Runs the current list of functions that make up the pipeline against the\n * passed tokens.\n *\n * @param {Array} tokens The tokens to run through the pipeline.\n * @returns {Array}\n */\nlunr.Pipeline.prototype.run = function (tokens) {\n  var stackLength = this._stack.length\n\n  for (var i = 0; i < stackLength; i++) {\n    var fn = this._stack[i]\n    var memo = []\n\n    for (var j = 0; j < tokens.length; j++) {\n      var result = fn(tokens[j], j, tokens)\n\n      if (result === null || result === void 0 || result === '') continue\n\n      if (Array.isArray(result)) {\n        for (var k = 0; k < result.length; k++) {\n          memo.push(result[k])\n        }\n      } else {\n        memo.push(result)\n      }\n    }\n\n    tokens = memo\n  }\n\n  return tokens\n}\n\n/**\n * Convenience method for passing a string through a pipeline and getting\n * strings out. This method takes care of wrapping the passed string in a\n * token and mapping the resulting tokens back to strings.\n *\n * @param {string} str - The string to pass through the pipeline.\n * @param {?object} metadata - Optional metadata to associate with the token\n * passed to the pipeline.\n * @returns {string[]}\n */\nlunr.Pipeline.prototype.runString = function (str, metadata) {\n  var token = new lunr.Token (str, metadata)\n\n  return this.run([token]).map(function (t) {\n    return t.toString()\n  })\n}\n\n/**\n * Resets the pipeline by removing any existing processors.\n *\n */\nlunr.Pipeline.prototype.reset = function () {\n  this._stack = []\n}\n\n/**\n * Returns a representation of the pipeline ready for serialisation.\n *\n * Logs a warning if the function has not been registered.\n *\n * @returns {Array}\n */\nlunr.Pipeline.prototype.toJSON = function () {\n  return this._stack.map(function (fn) {\n    lunr.Pipeline.warnIfFunctionNotRegistered(fn)\n\n    return fn.label\n  })\n}\n/*!\n * lunr.Vector\n * Copyright (C) 2020 Oliver Nightingale\n */\n\n/**\n * A vector is used to construct the vector space of documents and queries. These\n * vectors support operations to determine the similarity between two documents or\n * a document and a query.\n *\n * Normally no parameters are required for initializing a vector, but in the case of\n * loading a previously dumped vector the raw elements can be provided to the constructor.\n *\n * For performance reasons vectors are implemented with a flat array, where an elements\n * index is immediately followed by its value. E.g. [index, value, index, value]. This\n * allows the underlying array to be as sparse as possible and still offer decent\n * performance when being used for vector calculations.\n *\n * @constructor\n * @param {Number[]} [elements] - The flat list of element index and element value pairs.\n */\nlunr.Vector = function (elements) {\n  this._magnitude = 0\n  this.elements = elements || []\n}\n\n\n/**\n * Calculates the position within the vector to insert a given index.\n *\n * This is used internally by insert and upsert. If there are duplicate indexes then\n * the position is returned as if the value for that index were to be updated, but it\n * is the callers responsibility to check whether there is a duplicate at that index\n *\n * @param {Number} insertIdx - The index at which the element should be inserted.\n * @returns {Number}\n */\nlunr.Vector.prototype.positionForIndex = function (index) {\n  // For an empty vector the tuple can be inserted at the beginning\n  if (this.elements.length == 0) {\n    return 0\n  }\n\n  var start = 0,\n      end = this.elements.length / 2,\n      sliceLength = end - start,\n      pivotPoint = Math.floor(sliceLength / 2),\n      pivotIndex = this.elements[pivotPoint * 2]\n\n  while (sliceLength > 1) {\n    if (pivotIndex < index) {\n      start = pivotPoint\n    }\n\n    if (pivotIndex > index) {\n      end = pivotPoint\n    }\n\n    if (pivotIndex == index) {\n      break\n    }\n\n    sliceLength = end - start\n    pivotPoint = start + Math.floor(sliceLength / 2)\n    pivotIndex = this.elements[pivotPoint * 2]\n  }\n\n  if (pivotIndex == index) {\n    return pivotPoint * 2\n  }\n\n  if (pivotIndex > index) {\n    return pivotPoint * 2\n  }\n\n  if (pivotIndex < index) {\n    return (pivotPoint + 1) * 2\n  }\n}\n\n/**\n * Inserts an element at an index within the vector.\n *\n * Does not allow duplicates, will throw an error if there is already an entry\n * for this index.\n *\n * @param {Number} insertIdx - The index at which the element should be inserted.\n * @param {Number} val - The value to be inserted into the vector.\n */\nlunr.Vector.prototype.insert = function (insertIdx, val) {\n  this.upsert(insertIdx, val, function () {\n    throw \"duplicate index\"\n  })\n}\n\n/**\n * Inserts or updates an existing index within the vector.\n *\n * @param {Number} insertIdx - The index at which the element should be inserted.\n * @param {Number} val - The value to be inserted into the vector.\n * @param {function} fn - A function that is called for updates, the existing value and the\n * requested value are passed as arguments\n */\nlunr.Vector.prototype.upsert = function (insertIdx, val, fn) {\n  this._magnitude = 0\n  var position = this.positionForIndex(insertIdx)\n\n  if (this.elements[position] == insertIdx) {\n    this.elements[position + 1] = fn(this.elements[position + 1], val)\n  } else {\n    this.elements.splice(position, 0, insertIdx, val)\n  }\n}\n\n/**\n * Calculates the magnitude of this vector.\n *\n * @returns {Number}\n */\nlunr.Vector.prototype.magnitude = function () {\n  if (this._magnitude) return this._magnitude\n\n  var sumOfSquares = 0,\n      elementsLength = this.elements.length\n\n  for (var i = 1; i < elementsLength; i += 2) {\n    var val = this.elements[i]\n    sumOfSquares += val * val\n  }\n\n  return this._magnitude = Math.sqrt(sumOfSquares)\n}\n\n/**\n * Calculates the dot product of this vector and another vector.\n *\n * @param {lunr.Vector} otherVector - The vector to compute the dot product with.\n * @returns {Number}\n */\nlunr.Vector.prototype.dot = function (otherVector) {\n  var dotProduct = 0,\n      a = this.elements, b = otherVector.elements,\n      aLen = a.length, bLen = b.length,\n      aVal = 0, bVal = 0,\n      i = 0, j = 0\n\n  while (i < aLen && j < bLen) {\n    aVal = a[i], bVal = b[j]\n    if (aVal < bVal) {\n      i += 2\n    } else if (aVal > bVal) {\n      j += 2\n    } else if (aVal == bVal) {\n      dotProduct += a[i + 1] * b[j + 1]\n      i += 2\n      j += 2\n    }\n  }\n\n  return dotProduct\n}\n\n/**\n * Calculates the similarity between this vector and another vector.\n *\n * @param {lunr.Vector} otherVector - The other vector to calculate the\n * similarity with.\n * @returns {Number}\n */\nlunr.Vector.prototype.similarity = function (otherVector) {\n  return this.dot(otherVector) / this.magnitude() || 0\n}\n\n/**\n * Converts the vector to an array of the elements within the vector.\n *\n * @returns {Number[]}\n */\nlunr.Vector.prototype.toArray = function () {\n  var output = new Array (this.elements.length / 2)\n\n  for (var i = 1, j = 0; i < this.elements.length; i += 2, j++) {\n    output[j] = this.elements[i]\n  }\n\n  return output\n}\n\n/**\n * A JSON serializable representation of the vector.\n *\n * @returns {Number[]}\n */\nlunr.Vector.prototype.toJSON = function () {\n  return this.elements\n}\n/* eslint-disable */\n/*!\n * lunr.stemmer\n * Copyright (C) 2020 Oliver Nightingale\n * Includes code from - http://tartarus.org/~martin/PorterStemmer/js.txt\n */\n\n/**\n * lunr.stemmer is an english language stemmer, this is a JavaScript\n * implementation of the PorterStemmer taken from http://tartarus.org/~martin\n *\n * @static\n * @implements {lunr.PipelineFunction}\n * @param {lunr.Token} token - The string to stem\n * @returns {lunr.Token}\n * @see {@link lunr.Pipeline}\n * @function\n */\nlunr.stemmer = (function(){\n  var step2list = {\n      \"ational\" : \"ate\",\n      \"tional\" : \"tion\",\n      \"enci\" : \"ence\",\n      \"anci\" : \"ance\",\n      \"izer\" : \"ize\",\n      \"bli\" : \"ble\",\n      \"alli\" : \"al\",\n      \"entli\" : \"ent\",\n      \"eli\" : \"e\",\n      \"ousli\" : \"ous\",\n      \"ization\" : \"ize\",\n      \"ation\" : \"ate\",\n      \"ator\" : \"ate\",\n      \"alism\" : \"al\",\n      \"iveness\" : \"ive\",\n      \"fulness\" : \"ful\",\n      \"ousness\" : \"ous\",\n      \"aliti\" : \"al\",\n      \"iviti\" : \"ive\",\n      \"biliti\" : \"ble\",\n      \"logi\" : \"log\"\n    },\n\n    step3list = {\n      \"icate\" : \"ic\",\n      \"ative\" : \"\",\n      \"alize\" : \"al\",\n      \"iciti\" : \"ic\",\n      \"ical\" : \"ic\",\n      \"ful\" : \"\",\n      \"ness\" : \"\"\n    },\n\n    c = \"[^aeiou]\",          // consonant\n    v = \"[aeiouy]\",          // vowel\n    C = c + \"[^aeiouy]*\",    // consonant sequence\n    V = v + \"[aeiou]*\",      // vowel sequence\n\n    mgr0 = \"^(\" + C + \")?\" + V + C,               // [C]VC... is m>0\n    meq1 = \"^(\" + C + \")?\" + V + C + \"(\" + V + \")?$\",  // [C]VC[V] is m=1\n    mgr1 = \"^(\" + C + \")?\" + V + C + V + C,       // [C]VCVC... is m>1\n    s_v = \"^(\" + C + \")?\" + v;                   // vowel in stem\n\n  var re_mgr0 = new RegExp(mgr0);\n  var re_mgr1 = new RegExp(mgr1);\n  var re_meq1 = new RegExp(meq1);\n  var re_s_v = new RegExp(s_v);\n\n  var re_1a = /^(.+?)(ss|i)es$/;\n  var re2_1a = /^(.+?)([^s])s$/;\n  var re_1b = /^(.+?)eed$/;\n  var re2_1b = /^(.+?)(ed|ing)$/;\n  var re_1b_2 = /.$/;\n  var re2_1b_2 = /(at|bl|iz)$/;\n  var re3_1b_2 = new RegExp(\"([^aeiouylsz])\\\\1$\");\n  var re4_1b_2 = new RegExp(\"^\" + C + v + \"[^aeiouwxy]$\");\n\n  var re_1c = /^(.+?[^aeiou])y$/;\n  var re_2 = /^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/;\n\n  var re_3 = /^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/;\n\n  var re_4 = /^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/;\n  var re2_4 = /^(.+?)(s|t)(ion)$/;\n\n  var re_5 = /^(.+?)e$/;\n  var re_5_1 = /ll$/;\n  var re3_5 = new RegExp(\"^\" + C + v + \"[^aeiouwxy]$\");\n\n  var porterStemmer = function porterStemmer(w) {\n    var stem,\n      suffix,\n      firstch,\n      re,\n      re2,\n      re3,\n      re4;\n\n    if (w.length < 3) { return w; }\n\n    firstch = w.substr(0,1);\n    if (firstch == \"y\") {\n      w = firstch.toUpperCase() + w.substr(1);\n    }\n\n    // Step 1a\n    re = re_1a\n    re2 = re2_1a;\n\n    if (re.test(w)) { w = w.replace(re,\"$1$2\"); }\n    else if (re2.test(w)) { w = w.replace(re2,\"$1$2\"); }\n\n    // Step 1b\n    re = re_1b;\n    re2 = re2_1b;\n    if (re.test(w)) {\n      var fp = re.exec(w);\n      re = re_mgr0;\n      if (re.test(fp[1])) {\n        re = re_1b_2;\n        w = w.replace(re,\"\");\n      }\n    } else if (re2.test(w)) {\n      var fp = re2.exec(w);\n      stem = fp[1];\n      re2 = re_s_v;\n      if (re2.test(stem)) {\n        w = stem;\n        re2 = re2_1b_2;\n        re3 = re3_1b_2;\n        re4 = re4_1b_2;\n        if (re2.test(w)) { w = w + \"e\"; }\n        else if (re3.test(w)) { re = re_1b_2; w = w.replace(re,\"\"); }\n        else if (re4.test(w)) { w = w + \"e\"; }\n      }\n    }\n\n    // Step 1c - replace suffix y or Y by i if preceded by a non-vowel which is not the first letter of the word (so cry -> cri, by -> by, say -> say)\n    re = re_1c;\n    if (re.test(w)) {\n      var fp = re.exec(w);\n      stem = fp[1];\n      w = stem + \"i\";\n    }\n\n    // Step 2\n    re = re_2;\n    if (re.test(w)) {\n      var fp = re.exec(w);\n      stem = fp[1];\n      suffix = fp[2];\n      re = re_mgr0;\n      if (re.test(stem)) {\n        w = stem + step2list[suffix];\n      }\n    }\n\n    // Step 3\n    re = re_3;\n    if (re.test(w)) {\n      var fp = re.exec(w);\n      stem = fp[1];\n      suffix = fp[2];\n      re = re_mgr0;\n      if (re.test(stem)) {\n        w = stem + step3list[suffix];\n      }\n    }\n\n    // Step 4\n    re = re_4;\n    re2 = re2_4;\n    if (re.test(w)) {\n      var fp = re.exec(w);\n      stem = fp[1];\n      re = re_mgr1;\n      if (re.test(stem)) {\n        w = stem;\n      }\n    } else if (re2.test(w)) {\n      var fp = re2.exec(w);\n      stem = fp[1] + fp[2];\n      re2 = re_mgr1;\n      if (re2.test(stem)) {\n        w = stem;\n      }\n    }\n\n    // Step 5\n    re = re_5;\n    if (re.test(w)) {\n      var fp = re.exec(w);\n      stem = fp[1];\n      re = re_mgr1;\n      re2 = re_meq1;\n      re3 = re3_5;\n      if (re.test(stem) || (re2.test(stem) && !(re3.test(stem)))) {\n        w = stem;\n      }\n    }\n\n    re = re_5_1;\n    re2 = re_mgr1;\n    if (re.test(w) && re2.test(w)) {\n      re = re_1b_2;\n      w = w.replace(re,\"\");\n    }\n\n    // and turn initial Y back to y\n\n    if (firstch == \"y\") {\n      w = firstch.toLowerCase() + w.substr(1);\n    }\n\n    return w;\n  };\n\n  return function (token) {\n    return token.update(porterStemmer);\n  }\n})();\n\nlunr.Pipeline.registerFunction(lunr.stemmer, 'stemmer')\n/*!\n * lunr.stopWordFilter\n * Copyright (C) 2020 Oliver Nightingale\n */\n\n/**\n * lunr.generateStopWordFilter builds a stopWordFilter function from the provided\n * list of stop words.\n *\n * The built in lunr.stopWordFilter is built using this generator and can be used\n * to generate custom stopWordFilters for applications or non English languages.\n *\n * @function\n * @param {Array} token The token to pass through the filter\n * @returns {lunr.PipelineFunction}\n * @see lunr.Pipeline\n * @see lunr.stopWordFilter\n */\nlunr.generateStopWordFilter = function (stopWords) {\n  var words = stopWords.reduce(function (memo, stopWord) {\n    memo[stopWord] = stopWord\n    return memo\n  }, {})\n\n  return function (token) {\n    if (token && words[token.toString()] !== token.toString()) return token\n  }\n}\n\n/**\n * lunr.stopWordFilter is an English language stop word list filter, any words\n * contained in the list will not be passed through the filter.\n *\n * This is intended to be used in the Pipeline. If the token does not pass the\n * filter then undefined will be returned.\n *\n * @function\n * @implements {lunr.PipelineFunction}\n * @params {lunr.Token} token - A token to check for being a stop word.\n * @returns {lunr.Token}\n * @see {@link lunr.Pipeline}\n */\nlunr.stopWordFilter = lunr.generateStopWordFilter([\n  'a',\n  'able',\n  'about',\n  'across',\n  'after',\n  'all',\n  'almost',\n  'also',\n  'am',\n  'among',\n  'an',\n  'and',\n  'any',\n  'are',\n  'as',\n  'at',\n  'be',\n  'because',\n  'been',\n  'but',\n  'by',\n  'can',\n  'cannot',\n  'could',\n  'dear',\n  'did',\n  'do',\n  'does',\n  'either',\n  'else',\n  'ever',\n  'every',\n  'for',\n  'from',\n  'get',\n  'got',\n  'had',\n  'has',\n  'have',\n  'he',\n  'her',\n  'hers',\n  'him',\n  'his',\n  'how',\n  'however',\n  'i',\n  'if',\n  'in',\n  'into',\n  'is',\n  'it',\n  'its',\n  'just',\n  'least',\n  'let',\n  'like',\n  'likely',\n  'may',\n  'me',\n  'might',\n  'most',\n  'must',\n  'my',\n  'neither',\n  'no',\n  'nor',\n  'not',\n  'of',\n  'off',\n  'often',\n  'on',\n  'only',\n  'or',\n  'other',\n  'our',\n  'own',\n  'rather',\n  'said',\n  'say',\n  'says',\n  'she',\n  'should',\n  'since',\n  'so',\n  'some',\n  'than',\n  'that',\n  'the',\n  'their',\n  'them',\n  'then',\n  'there',\n  'these',\n  'they',\n  'this',\n  'tis',\n  'to',\n  'too',\n  'twas',\n  'us',\n  'wants',\n  'was',\n  'we',\n  'were',\n  'what',\n  'when',\n  'where',\n  'which',\n  'while',\n  'who',\n  'whom',\n  'why',\n  'will',\n  'with',\n  'would',\n  'yet',\n  'you',\n  'your'\n])\n\nlunr.Pipeline.registerFunction(lunr.stopWordFilter, 'stopWordFilter')\n/*!\n * lunr.trimmer\n * Copyright (C) 2020 Oliver Nightingale\n */\n\n/**\n * lunr.trimmer is a pipeline function for trimming non word\n * characters from the beginning and end of tokens before they\n * enter the index.\n *\n * This implementation may not work correctly for non latin\n * characters and should either be removed or adapted for use\n * with languages with non-latin characters.\n *\n * @static\n * @implements {lunr.PipelineFunction}\n * @param {lunr.Token} token The token to pass through the filter\n * @returns {lunr.Token}\n * @see lunr.Pipeline\n */\nlunr.trimmer = function (token) {\n  return token.update(function (s) {\n    return s.replace(/^\\W+/, '').replace(/\\W+$/, '')\n  })\n}\n\nlunr.Pipeline.registerFunction(lunr.trimmer, 'trimmer')\n/*!\n * lunr.TokenSet\n * Copyright (C) 2020 Oliver Nightingale\n */\n\n/**\n * A token set is used to store the unique list of all tokens\n * within an index. Token sets are also used to represent an\n * incoming query to the index, this query token set and index\n * token set are then intersected to find which tokens to look\n * up in the inverted index.\n *\n * A token set can hold multiple tokens, as in the case of the\n * index token set, or it can hold a single token as in the\n * case of a simple query token set.\n *\n * Additionally token sets are used to perform wildcard matching.\n * Leading, contained and trailing wildcards are supported, and\n * from this edit distance matching can also be provided.\n *\n * Token sets are implemented as a minimal finite state automata,\n * where both common prefixes and suffixes are shared between tokens.\n * This helps to reduce the space used for storing the token set.\n *\n * @constructor\n */\nlunr.TokenSet = function () {\n  this.final = false\n  this.edges = {}\n  this.id = lunr.TokenSet._nextId\n  lunr.TokenSet._nextId += 1\n}\n\n/**\n * Keeps track of the next, auto increment, identifier to assign\n * to a new tokenSet.\n *\n * TokenSets require a unique identifier to be correctly minimised.\n *\n * @private\n */\nlunr.TokenSet._nextId = 1\n\n/**\n * Creates a TokenSet instance from the given sorted array of words.\n *\n * @param {String[]} arr - A sorted array of strings to create the set from.\n * @returns {lunr.TokenSet}\n * @throws Will throw an error if the input array is not sorted.\n */\nlunr.TokenSet.fromArray = function (arr) {\n  var builder = new lunr.TokenSet.Builder\n\n  for (var i = 0, len = arr.length; i < len; i++) {\n    builder.insert(arr[i])\n  }\n\n  builder.finish()\n  return builder.root\n}\n\n/**\n * Creates a token set from a query clause.\n *\n * @private\n * @param {Object} clause - A single clause from lunr.Query.\n * @param {string} clause.term - The query clause term.\n * @param {number} [clause.editDistance] - The optional edit distance for the term.\n * @returns {lunr.TokenSet}\n */\nlunr.TokenSet.fromClause = function (clause) {\n  if ('editDistance' in clause) {\n    return lunr.TokenSet.fromFuzzyString(clause.term, clause.editDistance)\n  } else {\n    return lunr.TokenSet.fromString(clause.term)\n  }\n}\n\n/**\n * Creates a token set representing a single string with a specified\n * edit distance.\n *\n * Insertions, deletions, substitutions and transpositions are each\n * treated as an edit distance of 1.\n *\n * Increasing the allowed edit distance will have a dramatic impact\n * on the performance of both creating and intersecting these TokenSets.\n * It is advised to keep the edit distance less than 3.\n *\n * @param {string} str - The string to create the token set from.\n * @param {number} editDistance - The allowed edit distance to match.\n * @returns {lunr.Vector}\n */\nlunr.TokenSet.fromFuzzyString = function (str, editDistance) {\n  var root = new lunr.TokenSet\n\n  var stack = [{\n    node: root,\n    editsRemaining: editDistance,\n    str: str\n  }]\n\n  while (stack.length) {\n    var frame = stack.pop()\n\n    // no edit\n    if (frame.str.length > 0) {\n      var char = frame.str.charAt(0),\n          noEditNode\n\n      if (char in frame.node.edges) {\n        noEditNode = frame.node.edges[char]\n      } else {\n        noEditNode = new lunr.TokenSet\n        frame.node.edges[char] = noEditNode\n      }\n\n      if (frame.str.length == 1) {\n        noEditNode.final = true\n      }\n\n      stack.push({\n        node: noEditNode,\n        editsRemaining: frame.editsRemaining,\n        str: frame.str.slice(1)\n      })\n    }\n\n    if (frame.editsRemaining == 0) {\n      continue\n    }\n\n    // insertion\n    if (\"*\" in frame.node.edges) {\n      var insertionNode = frame.node.edges[\"*\"]\n    } else {\n      var insertionNode = new lunr.TokenSet\n      frame.node.edges[\"*\"] = insertionNode\n    }\n\n    if (frame.str.length == 0) {\n      insertionNode.final = true\n    }\n\n    stack.push({\n      node: insertionNode,\n      editsRemaining: frame.editsRemaining - 1,\n      str: frame.str\n    })\n\n    // deletion\n    // can only do a deletion if we have enough edits remaining\n    // and if there are characters left to delete in the string\n    if (frame.str.length > 1) {\n      stack.push({\n        node: frame.node,\n        editsRemaining: frame.editsRemaining - 1,\n        str: frame.str.slice(1)\n      })\n    }\n\n    // deletion\n    // just removing the last character from the str\n    if (frame.str.length == 1) {\n      frame.node.final = true\n    }\n\n    // substitution\n    // can only do a substitution if we have enough edits remaining\n    // and if there are characters left to substitute\n    if (frame.str.length >= 1) {\n      if (\"*\" in frame.node.edges) {\n        var substitutionNode = frame.node.edges[\"*\"]\n      } else {\n        var substitutionNode = new lunr.TokenSet\n        frame.node.edges[\"*\"] = substitutionNode\n      }\n\n      if (frame.str.length == 1) {\n        substitutionNode.final = true\n      }\n\n      stack.push({\n        node: substitutionNode,\n        editsRemaining: frame.editsRemaining - 1,\n        str: frame.str.slice(1)\n      })\n    }\n\n    // transposition\n    // can only do a transposition if there are edits remaining\n    // and there are enough characters to transpose\n    if (frame.str.length > 1) {\n      var charA = frame.str.charAt(0),\n          charB = frame.str.charAt(1),\n          transposeNode\n\n      if (charB in frame.node.edges) {\n        transposeNode = frame.node.edges[charB]\n      } else {\n        transposeNode = new lunr.TokenSet\n        frame.node.edges[charB] = transposeNode\n      }\n\n      if (frame.str.length == 1) {\n        transposeNode.final = true\n      }\n\n      stack.push({\n        node: transposeNode,\n        editsRemaining: frame.editsRemaining - 1,\n        str: charA + frame.str.slice(2)\n      })\n    }\n  }\n\n  return root\n}\n\n/**\n * Creates a TokenSet from a string.\n *\n * The string may contain one or more wildcard characters (*)\n * that will allow wildcard matching when intersecting with\n * another TokenSet.\n *\n * @param {string} str - The string to create a TokenSet from.\n * @returns {lunr.TokenSet}\n */\nlunr.TokenSet.fromString = function (str) {\n  var node = new lunr.TokenSet,\n      root = node\n\n  /*\n   * Iterates through all characters within the passed string\n   * appending a node for each character.\n   *\n   * When a wildcard character is found then a self\n   * referencing edge is introduced to continually match\n   * any number of any characters.\n   */\n  for (var i = 0, len = str.length; i < len; i++) {\n    var char = str[i],\n        final = (i == len - 1)\n\n    if (char == \"*\") {\n      node.edges[char] = node\n      node.final = final\n\n    } else {\n      var next = new lunr.TokenSet\n      next.final = final\n\n      node.edges[char] = next\n      node = next\n    }\n  }\n\n  return root\n}\n\n/**\n * Converts this TokenSet into an array of strings\n * contained within the TokenSet.\n *\n * This is not intended to be used on a TokenSet that\n * contains wildcards, in these cases the results are\n * undefined and are likely to cause an infinite loop.\n *\n * @returns {string[]}\n */\nlunr.TokenSet.prototype.toArray = function () {\n  var words = []\n\n  var stack = [{\n    prefix: \"\",\n    node: this\n  }]\n\n  while (stack.length) {\n    var frame = stack.pop(),\n        edges = Object.keys(frame.node.edges),\n        len = edges.length\n\n    if (frame.node.final) {\n      /* In Safari, at this point the prefix is sometimes corrupted, see:\n       * https://github.com/olivernn/lunr.js/issues/279 Calling any\n       * String.prototype method forces Safari to \"cast\" this string to what\n       * it's supposed to be, fixing the bug. */\n      frame.prefix.charAt(0)\n      words.push(frame.prefix)\n    }\n\n    for (var i = 0; i < len; i++) {\n      var edge = edges[i]\n\n      stack.push({\n        prefix: frame.prefix.concat(edge),\n        node: frame.node.edges[edge]\n      })\n    }\n  }\n\n  return words\n}\n\n/**\n * Generates a string representation of a TokenSet.\n *\n * This is intended to allow TokenSets to be used as keys\n * in objects, largely to aid the construction and minimisation\n * of a TokenSet. As such it is not designed to be a human\n * friendly representation of the TokenSet.\n *\n * @returns {string}\n */\nlunr.TokenSet.prototype.toString = function () {\n  // NOTE: Using Object.keys here as this.edges is very likely\n  // to enter 'hash-mode' with many keys being added\n  //\n  // avoiding a for-in loop here as it leads to the function\n  // being de-optimised (at least in V8). From some simple\n  // benchmarks the performance is comparable, but allowing\n  // V8 to optimize may mean easy performance wins in the future.\n\n  if (this._str) {\n    return this._str\n  }\n\n  var str = this.final ? '1' : '0',\n      labels = Object.keys(this.edges).sort(),\n      len = labels.length\n\n  for (var i = 0; i < len; i++) {\n    var label = labels[i],\n        node = this.edges[label]\n\n    str = str + label + node.id\n  }\n\n  return str\n}\n\n/**\n * Returns a new TokenSet that is the intersection of\n * this TokenSet and the passed TokenSet.\n *\n * This intersection will take into account any wildcards\n * contained within the TokenSet.\n *\n * @param {lunr.TokenSet} b - An other TokenSet to intersect with.\n * @returns {lunr.TokenSet}\n */\nlunr.TokenSet.prototype.intersect = function (b) {\n  var output = new lunr.TokenSet,\n      frame = undefined\n\n  var stack = [{\n    qNode: b,\n    output: output,\n    node: this\n  }]\n\n  while (stack.length) {\n    frame = stack.pop()\n\n    // NOTE: As with the #toString method, we are using\n    // Object.keys and a for loop instead of a for-in loop\n    // as both of these objects enter 'hash' mode, causing\n    // the function to be de-optimised in V8\n    var qEdges = Object.keys(frame.qNode.edges),\n        qLen = qEdges.length,\n        nEdges = Object.keys(frame.node.edges),\n        nLen = nEdges.length\n\n    for (var q = 0; q < qLen; q++) {\n      var qEdge = qEdges[q]\n\n      for (var n = 0; n < nLen; n++) {\n        var nEdge = nEdges[n]\n\n        if (nEdge == qEdge || qEdge == '*') {\n          var node = frame.node.edges[nEdge],\n              qNode = frame.qNode.edges[qEdge],\n              final = node.final && qNode.final,\n              next = undefined\n\n          if (nEdge in frame.output.edges) {\n            // an edge already exists for this character\n            // no need to create a new node, just set the finality\n            // bit unless this node is already final\n            next = frame.output.edges[nEdge]\n            next.final = next.final || final\n\n          } else {\n            // no edge exists yet, must create one\n            // set the finality bit and insert it\n            // into the output\n            next = new lunr.TokenSet\n            next.final = final\n            frame.output.edges[nEdge] = next\n          }\n\n          stack.push({\n            qNode: qNode,\n            output: next,\n            node: node\n          })\n        }\n      }\n    }\n  }\n\n  return output\n}\nlunr.TokenSet.Builder = function () {\n  this.previousWord = \"\"\n  this.root = new lunr.TokenSet\n  this.uncheckedNodes = []\n  this.minimizedNodes = {}\n}\n\nlunr.TokenSet.Builder.prototype.insert = function (word) {\n  var node,\n      commonPrefix = 0\n\n  if (word < this.previousWord) {\n    throw new Error (\"Out of order word insertion\")\n  }\n\n  for (var i = 0; i < word.length && i < this.previousWord.length; i++) {\n    if (word[i] != this.previousWord[i]) break\n    commonPrefix++\n  }\n\n  this.minimize(commonPrefix)\n\n  if (this.uncheckedNodes.length == 0) {\n    node = this.root\n  } else {\n    node = this.uncheckedNodes[this.uncheckedNodes.length - 1].child\n  }\n\n  for (var i = commonPrefix; i < word.length; i++) {\n    var nextNode = new lunr.TokenSet,\n        char = word[i]\n\n    node.edges[char] = nextNode\n\n    this.uncheckedNodes.push({\n      parent: node,\n      char: char,\n      child: nextNode\n    })\n\n    node = nextNode\n  }\n\n  node.final = true\n  this.previousWord = word\n}\n\nlunr.TokenSet.Builder.prototype.finish = function () {\n  this.minimize(0)\n}\n\nlunr.TokenSet.Builder.prototype.minimize = function (downTo) {\n  for (var i = this.uncheckedNodes.length - 1; i >= downTo; i--) {\n    var node = this.uncheckedNodes[i],\n        childKey = node.child.toString()\n\n    if (childKey in this.minimizedNodes) {\n      node.parent.edges[node.char] = this.minimizedNodes[childKey]\n    } else {\n      // Cache the key for this node since\n      // we know it can't change anymore\n      node.child._str = childKey\n\n      this.minimizedNodes[childKey] = node.child\n    }\n\n    this.uncheckedNodes.pop()\n  }\n}\n/*!\n * lunr.Index\n * Copyright (C) 2020 Oliver Nightingale\n */\n\n/**\n * An index contains the built index of all documents and provides a query interface\n * to the index.\n *\n * Usually instances of lunr.Index will not be created using this constructor, instead\n * lunr.Builder should be used to construct new indexes, or lunr.Index.load should be\n * used to load previously built and serialized indexes.\n *\n * @constructor\n * @param {Object} attrs - The attributes of the built search index.\n * @param {Object} attrs.invertedIndex - An index of term/field to document reference.\n * @param {Object<string, lunr.Vector>} attrs.fieldVectors - Field vectors\n * @param {lunr.TokenSet} attrs.tokenSet - An set of all corpus tokens.\n * @param {string[]} attrs.fields - The names of indexed document fields.\n * @param {lunr.Pipeline} attrs.pipeline - The pipeline to use for search terms.\n */\nlunr.Index = function (attrs) {\n  this.invertedIndex = attrs.invertedIndex\n  this.fieldVectors = attrs.fieldVectors\n  this.tokenSet = attrs.tokenSet\n  this.fields = attrs.fields\n  this.pipeline = attrs.pipeline\n}\n\n/**\n * A result contains details of a document matching a search query.\n * @typedef {Object} lunr.Index~Result\n * @property {string} ref - The reference of the document this result represents.\n * @property {number} score - A number between 0 and 1 representing how similar this document is to the query.\n * @property {lunr.MatchData} matchData - Contains metadata about this match including which term(s) caused the match.\n */\n\n/**\n * Although lunr provides the ability to create queries using lunr.Query, it also provides a simple\n * query language which itself is parsed into an instance of lunr.Query.\n *\n * For programmatically building queries it is advised to directly use lunr.Query, the query language\n * is best used for human entered text rather than program generated text.\n *\n * At its simplest queries can just be a single term, e.g. `hello`, multiple terms are also supported\n * and will be combined with OR, e.g `hello world` will match documents that contain either 'hello'\n * or 'world', though those that contain both will rank higher in the results.\n *\n * Wildcards can be included in terms to match one or more unspecified characters, these wildcards can\n * be inserted anywhere within the term, and more than one wildcard can exist in a single term. Adding\n * wildcards will increase the number of documents that will be found but can also have a negative\n * impact on query performance, especially with wildcards at the beginning of a term.\n *\n * Terms can be restricted to specific fields, e.g. `title:hello`, only documents with the term\n * hello in the title field will match this query. Using a field not present in the index will lead\n * to an error being thrown.\n *\n * Modifiers can also be added to terms, lunr supports edit distance and boost modifiers on terms. A term\n * boost will make documents matching that term score higher, e.g. `foo^5`. Edit distance is also supported\n * to provide fuzzy matching, e.g. 'hello~2' will match documents with hello with an edit distance of 2.\n * Avoid large values for edit distance to improve query performance.\n *\n * Each term also supports a presence modifier. By default a term's presence in document is optional, however\n * this can be changed to either required or prohibited. For a term's presence to be required in a document the\n * term should be prefixed with a '+', e.g. `+foo bar` is a search for documents that must contain 'foo' and\n * optionally contain 'bar'. Conversely a leading '-' sets the terms presence to prohibited, i.e. it must not\n * appear in a document, e.g. `-foo bar` is a search for documents that do not contain 'foo' but may contain 'bar'.\n *\n * To escape special characters the backslash character '\\' can be used, this allows searches to include\n * characters that would normally be considered modifiers, e.g. `foo\\~2` will search for a term \"foo~2\" instead\n * of attempting to apply a boost of 2 to the search term \"foo\".\n *\n * @typedef {string} lunr.Index~QueryString\n * @example <caption>Simple single term query</caption>\n * hello\n * @example <caption>Multiple term query</caption>\n * hello world\n * @example <caption>term scoped to a field</caption>\n * title:hello\n * @example <caption>term with a boost of 10</caption>\n * hello^10\n * @example <caption>term with an edit distance of 2</caption>\n * hello~2\n * @example <caption>terms with presence modifiers</caption>\n * -foo +bar baz\n */\n\n/**\n * Performs a search against the index using lunr query syntax.\n *\n * Results will be returned sorted by their score, the most relevant results\n * will be returned first.  For details on how the score is calculated, please see\n * the {@link https://lunrjs.com/guides/searching.html#scoring|guide}.\n *\n * For more programmatic querying use lunr.Index#query.\n *\n * @param {lunr.Index~QueryString} queryString - A string containing a lunr query.\n * @throws {lunr.QueryParseError} If the passed query string cannot be parsed.\n * @returns {lunr.Index~Result[]}\n */\nlunr.Index.prototype.search = function (queryString) {\n  return this.query(function (query) {\n    var parser = new lunr.QueryParser(queryString, query)\n    parser.parse()\n  })\n}\n\n/**\n * A query builder callback provides a query object to be used to express\n * the query to perform on the index.\n *\n * @callback lunr.Index~queryBuilder\n * @param {lunr.Query} query - The query object to build up.\n * @this lunr.Query\n */\n\n/**\n * Performs a query against the index using the yielded lunr.Query object.\n *\n * If performing programmatic queries against the index, this method is preferred\n * over lunr.Index#search so as to avoid the additional query parsing overhead.\n *\n * A query object is yielded to the supplied function which should be used to\n * express the query to be run against the index.\n *\n * Note that although this function takes a callback parameter it is _not_ an\n * asynchronous operation, the callback is just yielded a query object to be\n * customized.\n *\n * @param {lunr.Index~queryBuilder} fn - A function that is used to build the query.\n * @returns {lunr.Index~Result[]}\n */\nlunr.Index.prototype.query = function (fn) {\n  // for each query clause\n  // * process terms\n  // * expand terms from token set\n  // * find matching documents and metadata\n  // * get document vectors\n  // * score documents\n\n  var query = new lunr.Query(this.fields),\n      matchingFields = Object.create(null),\n      queryVectors = Object.create(null),\n      termFieldCache = Object.create(null),\n      requiredMatches = Object.create(null),\n      prohibitedMatches = Object.create(null)\n\n  /*\n   * To support field level boosts a query vector is created per\n   * field. An empty vector is eagerly created to support negated\n   * queries.\n   */\n  for (var i = 0; i < this.fields.length; i++) {\n    queryVectors[this.fields[i]] = new lunr.Vector\n  }\n\n  fn.call(query, query)\n\n  for (var i = 0; i < query.clauses.length; i++) {\n    /*\n     * Unless the pipeline has been disabled for this term, which is\n     * the case for terms with wildcards, we need to pass the clause\n     * term through the search pipeline. A pipeline returns an array\n     * of processed terms. Pipeline functions may expand the passed\n     * term, which means we may end up performing multiple index lookups\n     * for a single query term.\n     */\n    var clause = query.clauses[i],\n        terms = null,\n        clauseMatches = lunr.Set.empty\n\n    if (clause.usePipeline) {\n      terms = this.pipeline.runString(clause.term, {\n        fields: clause.fields\n      })\n    } else {\n      terms = [clause.term]\n    }\n\n    for (var m = 0; m < terms.length; m++) {\n      var term = terms[m]\n\n      /*\n       * Each term returned from the pipeline needs to use the same query\n       * clause object, e.g. the same boost and or edit distance. The\n       * simplest way to do this is to re-use the clause object but mutate\n       * its term property.\n       */\n      clause.term = term\n\n      /*\n       * From the term in the clause we create a token set which will then\n       * be used to intersect the indexes token set to get a list of terms\n       * to lookup in the inverted index\n       */\n      var termTokenSet = lunr.TokenSet.fromClause(clause),\n          expandedTerms = this.tokenSet.intersect(termTokenSet).toArray()\n\n      /*\n       * If a term marked as required does not exist in the tokenSet it is\n       * impossible for the search to return any matches. We set all the field\n       * scoped required matches set to empty and stop examining any further\n       * clauses.\n       */\n      if (expandedTerms.length === 0 && clause.presence === lunr.Query.presence.REQUIRED) {\n        for (var k = 0; k < clause.fields.length; k++) {\n          var field = clause.fields[k]\n          requiredMatches[field] = lunr.Set.empty\n        }\n\n        break\n      }\n\n      for (var j = 0; j < expandedTerms.length; j++) {\n        /*\n         * For each term get the posting and termIndex, this is required for\n         * building the query vector.\n         */\n        var expandedTerm = expandedTerms[j],\n            posting = this.invertedIndex[expandedTerm],\n            termIndex = posting._index\n\n        for (var k = 0; k < clause.fields.length; k++) {\n          /*\n           * For each field that this query term is scoped by (by default\n           * all fields are in scope) we need to get all the document refs\n           * that have this term in that field.\n           *\n           * The posting is the entry in the invertedIndex for the matching\n           * term from above.\n           */\n          var field = clause.fields[k],\n              fieldPosting = posting[field],\n              matchingDocumentRefs = Object.keys(fieldPosting),\n              termField = expandedTerm + \"/\" + field,\n              matchingDocumentsSet = new lunr.Set(matchingDocumentRefs)\n\n          /*\n           * if the presence of this term is required ensure that the matching\n           * documents are added to the set of required matches for this clause.\n           *\n           */\n          if (clause.presence == lunr.Query.presence.REQUIRED) {\n            clauseMatches = clauseMatches.union(matchingDocumentsSet)\n\n            if (requiredMatches[field] === undefined) {\n              requiredMatches[field] = lunr.Set.complete\n            }\n          }\n\n          /*\n           * if the presence of this term is prohibited ensure that the matching\n           * documents are added to the set of prohibited matches for this field,\n           * creating that set if it does not yet exist.\n           */\n          if (clause.presence == lunr.Query.presence.PROHIBITED) {\n            if (prohibitedMatches[field] === undefined) {\n              prohibitedMatches[field] = lunr.Set.empty\n            }\n\n            prohibitedMatches[field] = prohibitedMatches[field].union(matchingDocumentsSet)\n\n            /*\n             * Prohibited matches should not be part of the query vector used for\n             * similarity scoring and no metadata should be extracted so we continue\n             * to the next field\n             */\n            continue\n          }\n\n          /*\n           * The query field vector is populated using the termIndex found for\n           * the term and a unit value with the appropriate boost applied.\n           * Using upsert because there could already be an entry in the vector\n           * for the term we are working with. In that case we just add the scores\n           * together.\n           */\n          queryVectors[field].upsert(termIndex, clause.boost, function (a, b) { return a + b })\n\n          /**\n           * If we've already seen this term, field combo then we've already collected\n           * the matching documents and metadata, no need to go through all that again\n           */\n          if (termFieldCache[termField]) {\n            continue\n          }\n\n          for (var l = 0; l < matchingDocumentRefs.length; l++) {\n            /*\n             * All metadata for this term/field/document triple\n             * are then extracted and collected into an instance\n             * of lunr.MatchData ready to be returned in the query\n             * results\n             */\n            var matchingDocumentRef = matchingDocumentRefs[l],\n                matchingFieldRef = new lunr.FieldRef (matchingDocumentRef, field),\n                metadata = fieldPosting[matchingDocumentRef],\n                fieldMatch\n\n            if ((fieldMatch = matchingFields[matchingFieldRef]) === undefined) {\n              matchingFields[matchingFieldRef] = new lunr.MatchData (expandedTerm, field, metadata)\n            } else {\n              fieldMatch.add(expandedTerm, field, metadata)\n            }\n\n          }\n\n          termFieldCache[termField] = true\n        }\n      }\n    }\n\n    /**\n     * If the presence was required we need to update the requiredMatches field sets.\n     * We do this after all fields for the term have collected their matches because\n     * the clause terms presence is required in _any_ of the fields not _all_ of the\n     * fields.\n     */\n    if (clause.presence === lunr.Query.presence.REQUIRED) {\n      for (var k = 0; k < clause.fields.length; k++) {\n        var field = clause.fields[k]\n        requiredMatches[field] = requiredMatches[field].intersect(clauseMatches)\n      }\n    }\n  }\n\n  /**\n   * Need to combine the field scoped required and prohibited\n   * matching documents into a global set of required and prohibited\n   * matches\n   */\n  var allRequiredMatches = lunr.Set.complete,\n      allProhibitedMatches = lunr.Set.empty\n\n  for (var i = 0; i < this.fields.length; i++) {\n    var field = this.fields[i]\n\n    if (requiredMatches[field]) {\n      allRequiredMatches = allRequiredMatches.intersect(requiredMatches[field])\n    }\n\n    if (prohibitedMatches[field]) {\n      allProhibitedMatches = allProhibitedMatches.union(prohibitedMatches[field])\n    }\n  }\n\n  var matchingFieldRefs = Object.keys(matchingFields),\n      results = [],\n      matches = Object.create(null)\n\n  /*\n   * If the query is negated (contains only prohibited terms)\n   * we need to get _all_ fieldRefs currently existing in the\n   * index. This is only done when we know that the query is\n   * entirely prohibited terms to avoid any cost of getting all\n   * fieldRefs unnecessarily.\n   *\n   * Additionally, blank MatchData must be created to correctly\n   * populate the results.\n   */\n  if (query.isNegated()) {\n    matchingFieldRefs = Object.keys(this.fieldVectors)\n\n    for (var i = 0; i < matchingFieldRefs.length; i++) {\n      var matchingFieldRef = matchingFieldRefs[i]\n      var fieldRef = lunr.FieldRef.fromString(matchingFieldRef)\n      matchingFields[matchingFieldRef] = new lunr.MatchData\n    }\n  }\n\n  for (var i = 0; i < matchingFieldRefs.length; i++) {\n    /*\n     * Currently we have document fields that match the query, but we\n     * need to return documents. The matchData and scores are combined\n     * from multiple fields belonging to the same document.\n     *\n     * Scores are calculated by field, using the query vectors created\n     * above, and combined into a final document score using addition.\n     */\n    var fieldRef = lunr.FieldRef.fromString(matchingFieldRefs[i]),\n        docRef = fieldRef.docRef\n\n    if (!allRequiredMatches.contains(docRef)) {\n      continue\n    }\n\n    if (allProhibitedMatches.contains(docRef)) {\n      continue\n    }\n\n    var fieldVector = this.fieldVectors[fieldRef],\n        score = queryVectors[fieldRef.fieldName].similarity(fieldVector),\n        docMatch\n\n    if ((docMatch = matches[docRef]) !== undefined) {\n      docMatch.score += score\n      docMatch.matchData.combine(matchingFields[fieldRef])\n    } else {\n      var match = {\n        ref: docRef,\n        score: score,\n        matchData: matchingFields[fieldRef]\n      }\n      matches[docRef] = match\n      results.push(match)\n    }\n  }\n\n  /*\n   * Sort the results objects by score, highest first.\n   */\n  return results.sort(function (a, b) {\n    return b.score - a.score\n  })\n}\n\n/**\n * Prepares the index for JSON serialization.\n *\n * The schema for this JSON blob will be described in a\n * separate JSON schema file.\n *\n * @returns {Object}\n */\nlunr.Index.prototype.toJSON = function () {\n  var invertedIndex = Object.keys(this.invertedIndex)\n    .sort()\n    .map(function (term) {\n      return [term, this.invertedIndex[term]]\n    }, this)\n\n  var fieldVectors = Object.keys(this.fieldVectors)\n    .map(function (ref) {\n      return [ref, this.fieldVectors[ref].toJSON()]\n    }, this)\n\n  return {\n    version: lunr.version,\n    fields: this.fields,\n    fieldVectors: fieldVectors,\n    invertedIndex: invertedIndex,\n    pipeline: this.pipeline.toJSON()\n  }\n}\n\n/**\n * Loads a previously serialized lunr.Index\n *\n * @param {Object} serializedIndex - A previously serialized lunr.Index\n * @returns {lunr.Index}\n */\nlunr.Index.load = function (serializedIndex) {\n  var attrs = {},\n      fieldVectors = {},\n      serializedVectors = serializedIndex.fieldVectors,\n      invertedIndex = Object.create(null),\n      serializedInvertedIndex = serializedIndex.invertedIndex,\n      tokenSetBuilder = new lunr.TokenSet.Builder,\n      pipeline = lunr.Pipeline.load(serializedIndex.pipeline)\n\n  if (serializedIndex.version != lunr.version) {\n    lunr.utils.warn(\"Version mismatch when loading serialised index. Current version of lunr '\" + lunr.version + \"' does not match serialized index '\" + serializedIndex.version + \"'\")\n  }\n\n  for (var i = 0; i < serializedVectors.length; i++) {\n    var tuple = serializedVectors[i],\n        ref = tuple[0],\n        elements = tuple[1]\n\n    fieldVectors[ref] = new lunr.Vector(elements)\n  }\n\n  for (var i = 0; i < serializedInvertedIndex.length; i++) {\n    var tuple = serializedInvertedIndex[i],\n        term = tuple[0],\n        posting = tuple[1]\n\n    tokenSetBuilder.insert(term)\n    invertedIndex[term] = posting\n  }\n\n  tokenSetBuilder.finish()\n\n  attrs.fields = serializedIndex.fields\n\n  attrs.fieldVectors = fieldVectors\n  attrs.invertedIndex = invertedIndex\n  attrs.tokenSet = tokenSetBuilder.root\n  attrs.pipeline = pipeline\n\n  return new lunr.Index(attrs)\n}\n/*!\n * lunr.Builder\n * Copyright (C) 2020 Oliver Nightingale\n */\n\n/**\n * lunr.Builder performs indexing on a set of documents and\n * returns instances of lunr.Index ready for querying.\n *\n * All configuration of the index is done via the builder, the\n * fields to index, the document reference, the text processing\n * pipeline and document scoring parameters are all set on the\n * builder before indexing.\n *\n * @constructor\n * @property {string} _ref - Internal reference to the document reference field.\n * @property {string[]} _fields - Internal reference to the document fields to index.\n * @property {object} invertedIndex - The inverted index maps terms to document fields.\n * @property {object} documentTermFrequencies - Keeps track of document term frequencies.\n * @property {object} documentLengths - Keeps track of the length of documents added to the index.\n * @property {lunr.tokenizer} tokenizer - Function for splitting strings into tokens for indexing.\n * @property {lunr.Pipeline} pipeline - The pipeline performs text processing on tokens before indexing.\n * @property {lunr.Pipeline} searchPipeline - A pipeline for processing search terms before querying the index.\n * @property {number} documentCount - Keeps track of the total number of documents indexed.\n * @property {number} _b - A parameter to control field length normalization, setting this to 0 disabled normalization, 1 fully normalizes field lengths, the default value is 0.75.\n * @property {number} _k1 - A parameter to control how quickly an increase in term frequency results in term frequency saturation, the default value is 1.2.\n * @property {number} termIndex - A counter incremented for each unique term, used to identify a terms position in the vector space.\n * @property {array} metadataWhitelist - A list of metadata keys that have been whitelisted for entry in the index.\n */\nlunr.Builder = function () {\n  this._ref = \"id\"\n  this._fields = Object.create(null)\n  this._documents = Object.create(null)\n  this.invertedIndex = Object.create(null)\n  this.fieldTermFrequencies = {}\n  this.fieldLengths = {}\n  this.tokenizer = lunr.tokenizer\n  this.pipeline = new lunr.Pipeline\n  this.searchPipeline = new lunr.Pipeline\n  this.documentCount = 0\n  this._b = 0.75\n  this._k1 = 1.2\n  this.termIndex = 0\n  this.metadataWhitelist = []\n}\n\n/**\n * Sets the document field used as the document reference. Every document must have this field.\n * The type of this field in the document should be a string, if it is not a string it will be\n * coerced into a string by calling toString.\n *\n * The default ref is 'id'.\n *\n * The ref should _not_ be changed during indexing, it should be set before any documents are\n * added to the index. Changing it during indexing can lead to inconsistent results.\n *\n * @param {string} ref - The name of the reference field in the document.\n */\nlunr.Builder.prototype.ref = function (ref) {\n  this._ref = ref\n}\n\n/**\n * A function that is used to extract a field from a document.\n *\n * Lunr expects a field to be at the top level of a document, if however the field\n * is deeply nested within a document an extractor function can be used to extract\n * the right field for indexing.\n *\n * @callback fieldExtractor\n * @param {object} doc - The document being added to the index.\n * @returns {?(string|object|object[])} obj - The object that will be indexed for this field.\n * @example <caption>Extracting a nested field</caption>\n * function (doc) { return doc.nested.field }\n */\n\n/**\n * Adds a field to the list of document fields that will be indexed. Every document being\n * indexed should have this field. Null values for this field in indexed documents will\n * not cause errors but will limit the chance of that document being retrieved by searches.\n *\n * All fields should be added before adding documents to the index. Adding fields after\n * a document has been indexed will have no effect on already indexed documents.\n *\n * Fields can be boosted at build time. This allows terms within that field to have more\n * importance when ranking search results. Use a field boost to specify that matches within\n * one field are more important than other fields.\n *\n * @param {string} fieldName - The name of a field to index in all documents.\n * @param {object} attributes - Optional attributes associated with this field.\n * @param {number} [attributes.boost=1] - Boost applied to all terms within this field.\n * @param {fieldExtractor} [attributes.extractor] - Function to extract a field from a document.\n * @throws {RangeError} fieldName cannot contain unsupported characters '/'\n */\nlunr.Builder.prototype.field = function (fieldName, attributes) {\n  if (/\\//.test(fieldName)) {\n    throw new RangeError (\"Field '\" + fieldName + \"' contains illegal character '/'\")\n  }\n\n  this._fields[fieldName] = attributes || {}\n}\n\n/**\n * A parameter to tune the amount of field length normalisation that is applied when\n * calculating relevance scores. A value of 0 will completely disable any normalisation\n * and a value of 1 will fully normalise field lengths. The default is 0.75. Values of b\n * will be clamped to the range 0 - 1.\n *\n * @param {number} number - The value to set for this tuning parameter.\n */\nlunr.Builder.prototype.b = function (number) {\n  if (number < 0) {\n    this._b = 0\n  } else if (number > 1) {\n    this._b = 1\n  } else {\n    this._b = number\n  }\n}\n\n/**\n * A parameter that controls the speed at which a rise in term frequency results in term\n * frequency saturation. The default value is 1.2. Setting this to a higher value will give\n * slower saturation levels, a lower value will result in quicker saturation.\n *\n * @param {number} number - The value to set for this tuning parameter.\n */\nlunr.Builder.prototype.k1 = function (number) {\n  this._k1 = number\n}\n\n/**\n * Adds a document to the index.\n *\n * Before adding fields to the index the index should have been fully setup, with the document\n * ref and all fields to index already having been specified.\n *\n * The document must have a field name as specified by the ref (by default this is 'id') and\n * it should have all fields defined for indexing, though null or undefined values will not\n * cause errors.\n *\n * Entire documents can be boosted at build time. Applying a boost to a document indicates that\n * this document should rank higher in search results than other documents.\n *\n * @param {object} doc - The document to add to the index.\n * @param {object} attributes - Optional attributes associated with this document.\n * @param {number} [attributes.boost=1] - Boost applied to all terms within this document.\n */\nlunr.Builder.prototype.add = function (doc, attributes) {\n  var docRef = doc[this._ref],\n      fields = Object.keys(this._fields)\n\n  this._documents[docRef] = attributes || {}\n  this.documentCount += 1\n\n  for (var i = 0; i < fields.length; i++) {\n    var fieldName = fields[i],\n        extractor = this._fields[fieldName].extractor,\n        field = extractor ? extractor(doc) : doc[fieldName],\n        tokens = this.tokenizer(field, {\n          fields: [fieldName]\n        }),\n        terms = this.pipeline.run(tokens),\n        fieldRef = new lunr.FieldRef (docRef, fieldName),\n        fieldTerms = Object.create(null)\n\n    this.fieldTermFrequencies[fieldRef] = fieldTerms\n    this.fieldLengths[fieldRef] = 0\n\n    // store the length of this field for this document\n    this.fieldLengths[fieldRef] += terms.length\n\n    // calculate term frequencies for this field\n    for (var j = 0; j < terms.length; j++) {\n      var term = terms[j]\n\n      if (fieldTerms[term] == undefined) {\n        fieldTerms[term] = 0\n      }\n\n      fieldTerms[term] += 1\n\n      // add to inverted index\n      // create an initial posting if one doesn't exist\n      if (this.invertedIndex[term] == undefined) {\n        var posting = Object.create(null)\n        posting[\"_index\"] = this.termIndex\n        this.termIndex += 1\n\n        for (var k = 0; k < fields.length; k++) {\n          posting[fields[k]] = Object.create(null)\n        }\n\n        this.invertedIndex[term] = posting\n      }\n\n      // add an entry for this term/fieldName/docRef to the invertedIndex\n      if (this.invertedIndex[term][fieldName][docRef] == undefined) {\n        this.invertedIndex[term][fieldName][docRef] = Object.create(null)\n      }\n\n      // store all whitelisted metadata about this token in the\n      // inverted index\n      for (var l = 0; l < this.metadataWhitelist.length; l++) {\n        var metadataKey = this.metadataWhitelist[l],\n            metadata = term.metadata[metadataKey]\n\n        if (this.invertedIndex[term][fieldName][docRef][metadataKey] == undefined) {\n          this.invertedIndex[term][fieldName][docRef][metadataKey] = []\n        }\n\n        this.invertedIndex[term][fieldName][docRef][metadataKey].push(metadata)\n      }\n    }\n\n  }\n}\n\n/**\n * Calculates the average document length for this index\n *\n * @private\n */\nlunr.Builder.prototype.calculateAverageFieldLengths = function () {\n\n  var fieldRefs = Object.keys(this.fieldLengths),\n      numberOfFields = fieldRefs.length,\n      accumulator = {},\n      documentsWithField = {}\n\n  for (var i = 0; i < numberOfFields; i++) {\n    var fieldRef = lunr.FieldRef.fromString(fieldRefs[i]),\n        field = fieldRef.fieldName\n\n    documentsWithField[field] || (documentsWithField[field] = 0)\n    documentsWithField[field] += 1\n\n    accumulator[field] || (accumulator[field] = 0)\n    accumulator[field] += this.fieldLengths[fieldRef]\n  }\n\n  var fields = Object.keys(this._fields)\n\n  for (var i = 0; i < fields.length; i++) {\n    var fieldName = fields[i]\n    accumulator[fieldName] = accumulator[fieldName] / documentsWithField[fieldName]\n  }\n\n  this.averageFieldLength = accumulator\n}\n\n/**\n * Builds a vector space model of every document using lunr.Vector\n *\n * @private\n */\nlunr.Builder.prototype.createFieldVectors = function () {\n  var fieldVectors = {},\n      fieldRefs = Object.keys(this.fieldTermFrequencies),\n      fieldRefsLength = fieldRefs.length,\n      termIdfCache = Object.create(null)\n\n  for (var i = 0; i < fieldRefsLength; i++) {\n    var fieldRef = lunr.FieldRef.fromString(fieldRefs[i]),\n        fieldName = fieldRef.fieldName,\n        fieldLength = this.fieldLengths[fieldRef],\n        fieldVector = new lunr.Vector,\n        termFrequencies = this.fieldTermFrequencies[fieldRef],\n        terms = Object.keys(termFrequencies),\n        termsLength = terms.length\n\n\n    var fieldBoost = this._fields[fieldName].boost || 1,\n        docBoost = this._documents[fieldRef.docRef].boost || 1\n\n    for (var j = 0; j < termsLength; j++) {\n      var term = terms[j],\n          tf = termFrequencies[term],\n          termIndex = this.invertedIndex[term]._index,\n          idf, score, scoreWithPrecision\n\n      if (termIdfCache[term] === undefined) {\n        idf = lunr.idf(this.invertedIndex[term], this.documentCount)\n        termIdfCache[term] = idf\n      } else {\n        idf = termIdfCache[term]\n      }\n\n      score = idf * ((this._k1 + 1) * tf) / (this._k1 * (1 - this._b + this._b * (fieldLength / this.averageFieldLength[fieldName])) + tf)\n      score *= fieldBoost\n      score *= docBoost\n      scoreWithPrecision = Math.round(score * 1000) / 1000\n      // Converts 1.23456789 to 1.234.\n      // Reducing the precision so that the vectors take up less\n      // space when serialised. Doing it now so that they behave\n      // the same before and after serialisation. Also, this is\n      // the fastest approach to reducing a number's precision in\n      // JavaScript.\n\n      fieldVector.insert(termIndex, scoreWithPrecision)\n    }\n\n    fieldVectors[fieldRef] = fieldVector\n  }\n\n  this.fieldVectors = fieldVectors\n}\n\n/**\n * Creates a token set of all tokens in the index using lunr.TokenSet\n *\n * @private\n */\nlunr.Builder.prototype.createTokenSet = function () {\n  this.tokenSet = lunr.TokenSet.fromArray(\n    Object.keys(this.invertedIndex).sort()\n  )\n}\n\n/**\n * Builds the index, creating an instance of lunr.Index.\n *\n * This completes the indexing process and should only be called\n * once all documents have been added to the index.\n *\n * @returns {lunr.Index}\n */\nlunr.Builder.prototype.build = function () {\n  this.calculateAverageFieldLengths()\n  this.createFieldVectors()\n  this.createTokenSet()\n\n  return new lunr.Index({\n    invertedIndex: this.invertedIndex,\n    fieldVectors: this.fieldVectors,\n    tokenSet: this.tokenSet,\n    fields: Object.keys(this._fields),\n    pipeline: this.searchPipeline\n  })\n}\n\n/**\n * Applies a plugin to the index builder.\n *\n * A plugin is a function that is called with the index builder as its context.\n * Plugins can be used to customise or extend the behaviour of the index\n * in some way. A plugin is just a function, that encapsulated the custom\n * behaviour that should be applied when building the index.\n *\n * The plugin function will be called with the index builder as its argument, additional\n * arguments can also be passed when calling use. The function will be called\n * with the index builder as its context.\n *\n * @param {Function} plugin The plugin to apply.\n */\nlunr.Builder.prototype.use = function (fn) {\n  var args = Array.prototype.slice.call(arguments, 1)\n  args.unshift(this)\n  fn.apply(this, args)\n}\n/**\n * Contains and collects metadata about a matching document.\n * A single instance of lunr.MatchData is returned as part of every\n * lunr.Index~Result.\n *\n * @constructor\n * @param {string} term - The term this match data is associated with\n * @param {string} field - The field in which the term was found\n * @param {object} metadata - The metadata recorded about this term in this field\n * @property {object} metadata - A cloned collection of metadata associated with this document.\n * @see {@link lunr.Index~Result}\n */\nlunr.MatchData = function (term, field, metadata) {\n  var clonedMetadata = Object.create(null),\n      metadataKeys = Object.keys(metadata || {})\n\n  // Cloning the metadata to prevent the original\n  // being mutated during match data combination.\n  // Metadata is kept in an array within the inverted\n  // index so cloning the data can be done with\n  // Array#slice\n  for (var i = 0; i < metadataKeys.length; i++) {\n    var key = metadataKeys[i]\n    clonedMetadata[key] = metadata[key].slice()\n  }\n\n  this.metadata = Object.create(null)\n\n  if (term !== undefined) {\n    this.metadata[term] = Object.create(null)\n    this.metadata[term][field] = clonedMetadata\n  }\n}\n\n/**\n * An instance of lunr.MatchData will be created for every term that matches a\n * document. However only one instance is required in a lunr.Index~Result. This\n * method combines metadata from another instance of lunr.MatchData with this\n * objects metadata.\n *\n * @param {lunr.MatchData} otherMatchData - Another instance of match data to merge with this one.\n * @see {@link lunr.Index~Result}\n */\nlunr.MatchData.prototype.combine = function (otherMatchData) {\n  var terms = Object.keys(otherMatchData.metadata)\n\n  for (var i = 0; i < terms.length; i++) {\n    var term = terms[i],\n        fields = Object.keys(otherMatchData.metadata[term])\n\n    if (this.metadata[term] == undefined) {\n      this.metadata[term] = Object.create(null)\n    }\n\n    for (var j = 0; j < fields.length; j++) {\n      var field = fields[j],\n          keys = Object.keys(otherMatchData.metadata[term][field])\n\n      if (this.metadata[term][field] == undefined) {\n        this.metadata[term][field] = Object.create(null)\n      }\n\n      for (var k = 0; k < keys.length; k++) {\n        var key = keys[k]\n\n        if (this.metadata[term][field][key] == undefined) {\n          this.metadata[term][field][key] = otherMatchData.metadata[term][field][key]\n        } else {\n          this.metadata[term][field][key] = this.metadata[term][field][key].concat(otherMatchData.metadata[term][field][key])\n        }\n\n      }\n    }\n  }\n}\n\n/**\n * Add metadata for a term/field pair to this instance of match data.\n *\n * @param {string} term - The term this match data is associated with\n * @param {string} field - The field in which the term was found\n * @param {object} metadata - The metadata recorded about this term in this field\n */\nlunr.MatchData.prototype.add = function (term, field, metadata) {\n  if (!(term in this.metadata)) {\n    this.metadata[term] = Object.create(null)\n    this.metadata[term][field] = metadata\n    return\n  }\n\n  if (!(field in this.metadata[term])) {\n    this.metadata[term][field] = metadata\n    return\n  }\n\n  var metadataKeys = Object.keys(metadata)\n\n  for (var i = 0; i < metadataKeys.length; i++) {\n    var key = metadataKeys[i]\n\n    if (key in this.metadata[term][field]) {\n      this.metadata[term][field][key] = this.metadata[term][field][key].concat(metadata[key])\n    } else {\n      this.metadata[term][field][key] = metadata[key]\n    }\n  }\n}\n/**\n * A lunr.Query provides a programmatic way of defining queries to be performed\n * against a {@link lunr.Index}.\n *\n * Prefer constructing a lunr.Query using the {@link lunr.Index#query} method\n * so the query object is pre-initialized with the right index fields.\n *\n * @constructor\n * @property {lunr.Query~Clause[]} clauses - An array of query clauses.\n * @property {string[]} allFields - An array of all available fields in a lunr.Index.\n */\nlunr.Query = function (allFields) {\n  this.clauses = []\n  this.allFields = allFields\n}\n\n/**\n * Constants for indicating what kind of automatic wildcard insertion will be used when constructing a query clause.\n *\n * This allows wildcards to be added to the beginning and end of a term without having to manually do any string\n * concatenation.\n *\n * The wildcard constants can be bitwise combined to select both leading and trailing wildcards.\n *\n * @constant\n * @default\n * @property {number} wildcard.NONE - The term will have no wildcards inserted, this is the default behaviour\n * @property {number} wildcard.LEADING - Prepend the term with a wildcard, unless a leading wildcard already exists\n * @property {number} wildcard.TRAILING - Append a wildcard to the term, unless a trailing wildcard already exists\n * @see lunr.Query~Clause\n * @see lunr.Query#clause\n * @see lunr.Query#term\n * @example <caption>query term with trailing wildcard</caption>\n * query.term('foo', { wildcard: lunr.Query.wildcard.TRAILING })\n * @example <caption>query term with leading and trailing wildcard</caption>\n * query.term('foo', {\n *   wildcard: lunr.Query.wildcard.LEADING | lunr.Query.wildcard.TRAILING\n * })\n */\n\nlunr.Query.wildcard = new String (\"*\")\nlunr.Query.wildcard.NONE = 0\nlunr.Query.wildcard.LEADING = 1\nlunr.Query.wildcard.TRAILING = 2\n\n/**\n * Constants for indicating what kind of presence a term must have in matching documents.\n *\n * @constant\n * @enum {number}\n * @see lunr.Query~Clause\n * @see lunr.Query#clause\n * @see lunr.Query#term\n * @example <caption>query term with required presence</caption>\n * query.term('foo', { presence: lunr.Query.presence.REQUIRED })\n */\nlunr.Query.presence = {\n  /**\n   * Term's presence in a document is optional, this is the default value.\n   */\n  OPTIONAL: 1,\n\n  /**\n   * Term's presence in a document is required, documents that do not contain\n   * this term will not be returned.\n   */\n  REQUIRED: 2,\n\n  /**\n   * Term's presence in a document is prohibited, documents that do contain\n   * this term will not be returned.\n   */\n  PROHIBITED: 3\n}\n\n/**\n * A single clause in a {@link lunr.Query} contains a term and details on how to\n * match that term against a {@link lunr.Index}.\n *\n * @typedef {Object} lunr.Query~Clause\n * @property {string[]} fields - The fields in an index this clause should be matched against.\n * @property {number} [boost=1] - Any boost that should be applied when matching this clause.\n * @property {number} [editDistance] - Whether the term should have fuzzy matching applied, and how fuzzy the match should be.\n * @property {boolean} [usePipeline] - Whether the term should be passed through the search pipeline.\n * @property {number} [wildcard=lunr.Query.wildcard.NONE] - Whether the term should have wildcards appended or prepended.\n * @property {number} [presence=lunr.Query.presence.OPTIONAL] - The terms presence in any matching documents.\n */\n\n/**\n * Adds a {@link lunr.Query~Clause} to this query.\n *\n * Unless the clause contains the fields to be matched all fields will be matched. In addition\n * a default boost of 1 is applied to the clause.\n *\n * @param {lunr.Query~Clause} clause - The clause to add to this query.\n * @see lunr.Query~Clause\n * @returns {lunr.Query}\n */\nlunr.Query.prototype.clause = function (clause) {\n  if (!('fields' in clause)) {\n    clause.fields = this.allFields\n  }\n\n  if (!('boost' in clause)) {\n    clause.boost = 1\n  }\n\n  if (!('usePipeline' in clause)) {\n    clause.usePipeline = true\n  }\n\n  if (!('wildcard' in clause)) {\n    clause.wildcard = lunr.Query.wildcard.NONE\n  }\n\n  if ((clause.wildcard & lunr.Query.wildcard.LEADING) && (clause.term.charAt(0) != lunr.Query.wildcard)) {\n    clause.term = \"*\" + clause.term\n  }\n\n  if ((clause.wildcard & lunr.Query.wildcard.TRAILING) && (clause.term.slice(-1) != lunr.Query.wildcard)) {\n    clause.term = \"\" + clause.term + \"*\"\n  }\n\n  if (!('presence' in clause)) {\n    clause.presence = lunr.Query.presence.OPTIONAL\n  }\n\n  this.clauses.push(clause)\n\n  return this\n}\n\n/**\n * A negated query is one in which every clause has a presence of\n * prohibited. These queries require some special processing to return\n * the expected results.\n *\n * @returns boolean\n */\nlunr.Query.prototype.isNegated = function () {\n  for (var i = 0; i < this.clauses.length; i++) {\n    if (this.clauses[i].presence != lunr.Query.presence.PROHIBITED) {\n      return false\n    }\n  }\n\n  return true\n}\n\n/**\n * Adds a term to the current query, under the covers this will create a {@link lunr.Query~Clause}\n * to the list of clauses that make up this query.\n *\n * The term is used as is, i.e. no tokenization will be performed by this method. Instead conversion\n * to a token or token-like string should be done before calling this method.\n *\n * The term will be converted to a string by calling `toString`. Multiple terms can be passed as an\n * array, each term in the array will share the same options.\n *\n * @param {object|object[]} term - The term(s) to add to the query.\n * @param {object} [options] - Any additional properties to add to the query clause.\n * @returns {lunr.Query}\n * @see lunr.Query#clause\n * @see lunr.Query~Clause\n * @example <caption>adding a single term to a query</caption>\n * query.term(\"foo\")\n * @example <caption>adding a single term to a query and specifying search fields, term boost and automatic trailing wildcard</caption>\n * query.term(\"foo\", {\n *   fields: [\"title\"],\n *   boost: 10,\n *   wildcard: lunr.Query.wildcard.TRAILING\n * })\n * @example <caption>using lunr.tokenizer to convert a string to tokens before using them as terms</caption>\n * query.term(lunr.tokenizer(\"foo bar\"))\n */\nlunr.Query.prototype.term = function (term, options) {\n  if (Array.isArray(term)) {\n    term.forEach(function (t) { this.term(t, lunr.utils.clone(options)) }, this)\n    return this\n  }\n\n  var clause = options || {}\n  clause.term = term.toString()\n\n  this.clause(clause)\n\n  return this\n}\nlunr.QueryParseError = function (message, start, end) {\n  this.name = \"QueryParseError\"\n  this.message = message\n  this.start = start\n  this.end = end\n}\n\nlunr.QueryParseError.prototype = new Error\nlunr.QueryLexer = function (str) {\n  this.lexemes = []\n  this.str = str\n  this.length = str.length\n  this.pos = 0\n  this.start = 0\n  this.escapeCharPositions = []\n}\n\nlunr.QueryLexer.prototype.run = function () {\n  var state = lunr.QueryLexer.lexText\n\n  while (state) {\n    state = state(this)\n  }\n}\n\nlunr.QueryLexer.prototype.sliceString = function () {\n  var subSlices = [],\n      sliceStart = this.start,\n      sliceEnd = this.pos\n\n  for (var i = 0; i < this.escapeCharPositions.length; i++) {\n    sliceEnd = this.escapeCharPositions[i]\n    subSlices.push(this.str.slice(sliceStart, sliceEnd))\n    sliceStart = sliceEnd + 1\n  }\n\n  subSlices.push(this.str.slice(sliceStart, this.pos))\n  this.escapeCharPositions.length = 0\n\n  return subSlices.join('')\n}\n\nlunr.QueryLexer.prototype.emit = function (type) {\n  this.lexemes.push({\n    type: type,\n    str: this.sliceString(),\n    start: this.start,\n    end: this.pos\n  })\n\n  this.start = this.pos\n}\n\nlunr.QueryLexer.prototype.escapeCharacter = function () {\n  this.escapeCharPositions.push(this.pos - 1)\n  this.pos += 1\n}\n\nlunr.QueryLexer.prototype.next = function () {\n  if (this.pos >= this.length) {\n    return lunr.QueryLexer.EOS\n  }\n\n  var char = this.str.charAt(this.pos)\n  this.pos += 1\n  return char\n}\n\nlunr.QueryLexer.prototype.width = function () {\n  return this.pos - this.start\n}\n\nlunr.QueryLexer.prototype.ignore = function () {\n  if (this.start == this.pos) {\n    this.pos += 1\n  }\n\n  this.start = this.pos\n}\n\nlunr.QueryLexer.prototype.backup = function () {\n  this.pos -= 1\n}\n\nlunr.QueryLexer.prototype.acceptDigitRun = function () {\n  var char, charCode\n\n  do {\n    char = this.next()\n    charCode = char.charCodeAt(0)\n  } while (charCode > 47 && charCode < 58)\n\n  if (char != lunr.QueryLexer.EOS) {\n    this.backup()\n  }\n}\n\nlunr.QueryLexer.prototype.more = function () {\n  return this.pos < this.length\n}\n\nlunr.QueryLexer.EOS = 'EOS'\nlunr.QueryLexer.FIELD = 'FIELD'\nlunr.QueryLexer.TERM = 'TERM'\nlunr.QueryLexer.EDIT_DISTANCE = 'EDIT_DISTANCE'\nlunr.QueryLexer.BOOST = 'BOOST'\nlunr.QueryLexer.PRESENCE = 'PRESENCE'\n\nlunr.QueryLexer.lexField = function (lexer) {\n  lexer.backup()\n  lexer.emit(lunr.QueryLexer.FIELD)\n  lexer.ignore()\n  return lunr.QueryLexer.lexText\n}\n\nlunr.QueryLexer.lexTerm = function (lexer) {\n  if (lexer.width() > 1) {\n    lexer.backup()\n    lexer.emit(lunr.QueryLexer.TERM)\n  }\n\n  lexer.ignore()\n\n  if (lexer.more()) {\n    return lunr.QueryLexer.lexText\n  }\n}\n\nlunr.QueryLexer.lexEditDistance = function (lexer) {\n  lexer.ignore()\n  lexer.acceptDigitRun()\n  lexer.emit(lunr.QueryLexer.EDIT_DISTANCE)\n  return lunr.QueryLexer.lexText\n}\n\nlunr.QueryLexer.lexBoost = function (lexer) {\n  lexer.ignore()\n  lexer.acceptDigitRun()\n  lexer.emit(lunr.QueryLexer.BOOST)\n  return lunr.QueryLexer.lexText\n}\n\nlunr.QueryLexer.lexEOS = function (lexer) {\n  if (lexer.width() > 0) {\n    lexer.emit(lunr.QueryLexer.TERM)\n  }\n}\n\n// This matches the separator used when tokenising fields\n// within a document. These should match otherwise it is\n// not possible to search for some tokens within a document.\n//\n// It is possible for the user to change the separator on the\n// tokenizer so it _might_ clash with any other of the special\n// characters already used within the search string, e.g. :.\n//\n// This means that it is possible to change the separator in\n// such a way that makes some words unsearchable using a search\n// string.\nlunr.QueryLexer.termSeparator = lunr.tokenizer.separator\n\nlunr.QueryLexer.lexText = function (lexer) {\n  while (true) {\n    var char = lexer.next()\n\n    if (char == lunr.QueryLexer.EOS) {\n      return lunr.QueryLexer.lexEOS\n    }\n\n    // Escape character is '\\'\n    if (char.charCodeAt(0) == 92) {\n      lexer.escapeCharacter()\n      continue\n    }\n\n    if (char == \":\") {\n      return lunr.QueryLexer.lexField\n    }\n\n    if (char == \"~\") {\n      lexer.backup()\n      if (lexer.width() > 0) {\n        lexer.emit(lunr.QueryLexer.TERM)\n      }\n      return lunr.QueryLexer.lexEditDistance\n    }\n\n    if (char == \"^\") {\n      lexer.backup()\n      if (lexer.width() > 0) {\n        lexer.emit(lunr.QueryLexer.TERM)\n      }\n      return lunr.QueryLexer.lexBoost\n    }\n\n    // \"+\" indicates term presence is required\n    // checking for length to ensure that only\n    // leading \"+\" are considered\n    if (char == \"+\" && lexer.width() === 1) {\n      lexer.emit(lunr.QueryLexer.PRESENCE)\n      return lunr.QueryLexer.lexText\n    }\n\n    // \"-\" indicates term presence is prohibited\n    // checking for length to ensure that only\n    // leading \"-\" are considered\n    if (char == \"-\" && lexer.width() === 1) {\n      lexer.emit(lunr.QueryLexer.PRESENCE)\n      return lunr.QueryLexer.lexText\n    }\n\n    if (char.match(lunr.QueryLexer.termSeparator)) {\n      return lunr.QueryLexer.lexTerm\n    }\n  }\n}\n\nlunr.QueryParser = function (str, query) {\n  this.lexer = new lunr.QueryLexer (str)\n  this.query = query\n  this.currentClause = {}\n  this.lexemeIdx = 0\n}\n\nlunr.QueryParser.prototype.parse = function () {\n  this.lexer.run()\n  this.lexemes = this.lexer.lexemes\n\n  var state = lunr.QueryParser.parseClause\n\n  while (state) {\n    state = state(this)\n  }\n\n  return this.query\n}\n\nlunr.QueryParser.prototype.peekLexeme = function () {\n  return this.lexemes[this.lexemeIdx]\n}\n\nlunr.QueryParser.prototype.consumeLexeme = function () {\n  var lexeme = this.peekLexeme()\n  this.lexemeIdx += 1\n  return lexeme\n}\n\nlunr.QueryParser.prototype.nextClause = function () {\n  var completedClause = this.currentClause\n  this.query.clause(completedClause)\n  this.currentClause = {}\n}\n\nlunr.QueryParser.parseClause = function (parser) {\n  var lexeme = parser.peekLexeme()\n\n  if (lexeme == undefined) {\n    return\n  }\n\n  switch (lexeme.type) {\n    case lunr.QueryLexer.PRESENCE:\n      return lunr.QueryParser.parsePresence\n    case lunr.QueryLexer.FIELD:\n      return lunr.QueryParser.parseField\n    case lunr.QueryLexer.TERM:\n      return lunr.QueryParser.parseTerm\n    default:\n      var errorMessage = \"expected either a field or a term, found \" + lexeme.type\n\n      if (lexeme.str.length >= 1) {\n        errorMessage += \" with value '\" + lexeme.str + \"'\"\n      }\n\n      throw new lunr.QueryParseError (errorMessage, lexeme.start, lexeme.end)\n  }\n}\n\nlunr.QueryParser.parsePresence = function (parser) {\n  var lexeme = parser.consumeLexeme()\n\n  if (lexeme == undefined) {\n    return\n  }\n\n  switch (lexeme.str) {\n    case \"-\":\n      parser.currentClause.presence = lunr.Query.presence.PROHIBITED\n      break\n    case \"+\":\n      parser.currentClause.presence = lunr.Query.presence.REQUIRED\n      break\n    default:\n      var errorMessage = \"unrecognised presence operator'\" + lexeme.str + \"'\"\n      throw new lunr.QueryParseError (errorMessage, lexeme.start, lexeme.end)\n  }\n\n  var nextLexeme = parser.peekLexeme()\n\n  if (nextLexeme == undefined) {\n    var errorMessage = \"expecting term or field, found nothing\"\n    throw new lunr.QueryParseError (errorMessage, lexeme.start, lexeme.end)\n  }\n\n  switch (nextLexeme.type) {\n    case lunr.QueryLexer.FIELD:\n      return lunr.QueryParser.parseField\n    case lunr.QueryLexer.TERM:\n      return lunr.QueryParser.parseTerm\n    default:\n      var errorMessage = \"expecting term or field, found '\" + nextLexeme.type + \"'\"\n      throw new lunr.QueryParseError (errorMessage, nextLexeme.start, nextLexeme.end)\n  }\n}\n\nlunr.QueryParser.parseField = function (parser) {\n  var lexeme = parser.consumeLexeme()\n\n  if (lexeme == undefined) {\n    return\n  }\n\n  if (parser.query.allFields.indexOf(lexeme.str) == -1) {\n    var possibleFields = parser.query.allFields.map(function (f) { return \"'\" + f + \"'\" }).join(', '),\n        errorMessage = \"unrecognised field '\" + lexeme.str + \"', possible fields: \" + possibleFields\n\n    throw new lunr.QueryParseError (errorMessage, lexeme.start, lexeme.end)\n  }\n\n  parser.currentClause.fields = [lexeme.str]\n\n  var nextLexeme = parser.peekLexeme()\n\n  if (nextLexeme == undefined) {\n    var errorMessage = \"expecting term, found nothing\"\n    throw new lunr.QueryParseError (errorMessage, lexeme.start, lexeme.end)\n  }\n\n  switch (nextLexeme.type) {\n    case lunr.QueryLexer.TERM:\n      return lunr.QueryParser.parseTerm\n    default:\n      var errorMessage = \"expecting term, found '\" + nextLexeme.type + \"'\"\n      throw new lunr.QueryParseError (errorMessage, nextLexeme.start, nextLexeme.end)\n  }\n}\n\nlunr.QueryParser.parseTerm = function (parser) {\n  var lexeme = parser.consumeLexeme()\n\n  if (lexeme == undefined) {\n    return\n  }\n\n  parser.currentClause.term = lexeme.str.toLowerCase()\n\n  if (lexeme.str.indexOf(\"*\") != -1) {\n    parser.currentClause.usePipeline = false\n  }\n\n  var nextLexeme = parser.peekLexeme()\n\n  if (nextLexeme == undefined) {\n    parser.nextClause()\n    return\n  }\n\n  switch (nextLexeme.type) {\n    case lunr.QueryLexer.TERM:\n      parser.nextClause()\n      return lunr.QueryParser.parseTerm\n    case lunr.QueryLexer.FIELD:\n      parser.nextClause()\n      return lunr.QueryParser.parseField\n    case lunr.QueryLexer.EDIT_DISTANCE:\n      return lunr.QueryParser.parseEditDistance\n    case lunr.QueryLexer.BOOST:\n      return lunr.QueryParser.parseBoost\n    case lunr.QueryLexer.PRESENCE:\n      parser.nextClause()\n      return lunr.QueryParser.parsePresence\n    default:\n      var errorMessage = \"Unexpected lexeme type '\" + nextLexeme.type + \"'\"\n      throw new lunr.QueryParseError (errorMessage, nextLexeme.start, nextLexeme.end)\n  }\n}\n\nlunr.QueryParser.parseEditDistance = function (parser) {\n  var lexeme = parser.consumeLexeme()\n\n  if (lexeme == undefined) {\n    return\n  }\n\n  var editDistance = parseInt(lexeme.str, 10)\n\n  if (isNaN(editDistance)) {\n    var errorMessage = \"edit distance must be numeric\"\n    throw new lunr.QueryParseError (errorMessage, lexeme.start, lexeme.end)\n  }\n\n  parser.currentClause.editDistance = editDistance\n\n  var nextLexeme = parser.peekLexeme()\n\n  if (nextLexeme == undefined) {\n    parser.nextClause()\n    return\n  }\n\n  switch (nextLexeme.type) {\n    case lunr.QueryLexer.TERM:\n      parser.nextClause()\n      return lunr.QueryParser.parseTerm\n    case lunr.QueryLexer.FIELD:\n      parser.nextClause()\n      return lunr.QueryParser.parseField\n    case lunr.QueryLexer.EDIT_DISTANCE:\n      return lunr.QueryParser.parseEditDistance\n    case lunr.QueryLexer.BOOST:\n      return lunr.QueryParser.parseBoost\n    case lunr.QueryLexer.PRESENCE:\n      parser.nextClause()\n      return lunr.QueryParser.parsePresence\n    default:\n      var errorMessage = \"Unexpected lexeme type '\" + nextLexeme.type + \"'\"\n      throw new lunr.QueryParseError (errorMessage, nextLexeme.start, nextLexeme.end)\n  }\n}\n\nlunr.QueryParser.parseBoost = function (parser) {\n  var lexeme = parser.consumeLexeme()\n\n  if (lexeme == undefined) {\n    return\n  }\n\n  var boost = parseInt(lexeme.str, 10)\n\n  if (isNaN(boost)) {\n    var errorMessage = \"boost must be numeric\"\n    throw new lunr.QueryParseError (errorMessage, lexeme.start, lexeme.end)\n  }\n\n  parser.currentClause.boost = boost\n\n  var nextLexeme = parser.peekLexeme()\n\n  if (nextLexeme == undefined) {\n    parser.nextClause()\n    return\n  }\n\n  switch (nextLexeme.type) {\n    case lunr.QueryLexer.TERM:\n      parser.nextClause()\n      return lunr.QueryParser.parseTerm\n    case lunr.QueryLexer.FIELD:\n      parser.nextClause()\n      return lunr.QueryParser.parseField\n    case lunr.QueryLexer.EDIT_DISTANCE:\n      return lunr.QueryParser.parseEditDistance\n    case lunr.QueryLexer.BOOST:\n      return lunr.QueryParser.parseBoost\n    case lunr.QueryLexer.PRESENCE:\n      parser.nextClause()\n      return lunr.QueryParser.parsePresence\n    default:\n      var errorMessage = \"Unexpected lexeme type '\" + nextLexeme.type + \"'\"\n      throw new lunr.QueryParseError (errorMessage, nextLexeme.start, nextLexeme.end)\n  }\n}\n\n  /**\n   * export the module via AMD, CommonJS or as a browser global\n   * Export code from https://github.com/umdjs/umd/blob/master/returnExports.js\n   */\n  ;(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n      // AMD. Register as an anonymous module.\n      define(factory)\n    } else if (typeof exports === 'object') {\n      /**\n       * Node. Does not work with strict CommonJS, but\n       * only CommonJS-like enviroments that support module.exports,\n       * like Node.\n       */\n      module.exports = factory()\n    } else {\n      // Browser globals (root is window)\n      root.lunr = factory()\n    }\n  }(this, function () {\n    /**\n     * Just return a value to define the module export.\n     * This example returns an object, but the module\n     * can return a function as the exported value.\n     */\n    return lunr\n  }))\n})();\n"],"names":["proxyMarker","Symbol","createEndpoint","releaseProxy","finalizer","throwMarker","isObject","val","proxyTransferHandler","canHandle","serialize","obj","port1","port2","MessageChannel","expose","deserialize","port","start","ep","target","pendingListeners","Map","addEventListener","ev","data","id","resolver","get","delete","createProxy","wrap","transferHandlers","value","serialized","Error","isError","message","name","stack","Object","assign","globalThis","allowedOrigins","callback","origin","allowedOrigin","RegExp","test","isAllowedOrigin","console","warn","type","path","argumentList","map","fromWireValue","returnValue","parent","slice","reduce","prop","rawValue","apply","proxy","transfers","transferCache","set","transfer","undefined","Promise","resolve","catch","then","wireValue","transferables","toWireValue","postMessage","removeEventListener","closeEndPoint","error","TypeError","endpoint","constructor","isMessagePort","close","throwIfProxyReleased","isReleased","releaseEndpoint","requestResponseMessage","proxyCounter","WeakMap","proxyFinalizers","FinalizationRegistry","newCount","isProxyReleased","Proxy","_target","unregister","unregisterProxy","clear","length","r","p","toString","bind","_thisArg","rawArgumentList","last","processArguments","construct","register","registerProxy","processed","v","arr","Array","prototype","concat","handler","serializedValue","msg","fill","Math","floor","random","Number","MAX_SAFE_INTEGER","join","MAX_TERMS","smartQueries","tokens","zhDictionary","terms","tokenTerms","token","wrappedTerms","cut","subToken","carry","matchedLastIndex","matched","words","substr","nextCarry","missed","term","push","lastIndex","subWords","trailing","sort","a","b","aMissed","bMissed","item","cutZhWords","tokenTermsThatAreMultiple","filter","tokenTerm","termsProduct","overflowed","splice","product","max","combine","index","smartTerms","presence","lunr","REQUIRED","wildcard","LEADING","TRAILING","maybeTyping","stopWordPipelines","lang","language","removeDefaultStopWordFilter","unshift","lunrLang","stopWordFilter","refinedTerms","pipe","newTerms","filteredTerm","extraTerms","i","distance","fuzzyMatchingDistance","getDistanceMatrix","termsToQueries","editDistance","flatMap","query","NONE","every","from","_","getQueriesMaybeTyping","flat","SearchDocumentType","cache","Comlink","fetchIndexes","baseUrl","searchContext","this","lowLevelFetchIndexes","cacheKey","promise","async","url","searchIndexUrl","replace","URL","location","json","fetch","wrappedIndexes","_ref","documents","load","acc","tuple","invertedIndex","add","Set","legacyFetchIndexes","search","input","limit","rawTokens","text","includes","tokenizer","regExpMatchWords","toLowerCase","match","tokenize","queries","results","result","some","document","ref","find","doc","page","Title","metadata","matchData","score","forEach","aPageIndex","Heading","Content","Description","findIndex","bPageIndex","diff","sortSearchResults","prev","Keywords","isInterOfTree","isLastOfTree","processTreeStatusOfSearchResults","global","step2list","step3list","C","V","meq1","mgr1","s_v","re_mgr0","re_mgr1","re_meq1","re_s_v","re_1a","re2_1a","re_1b","re2_1b","re_1b_2","re2_1b_2","re3_1b_2","re4_1b_2","re_1c","re_2","re_3","re_4","re2_4","re_5","re_5_1","re3_5","porterStemmer","config","builder","Builder","pipeline","trimmer","stemmer","searchPipeline","call","build","version","utils","asString","clone","create","keys","key","isArray","FieldRef","docRef","fieldName","stringValue","_stringValue","joiner","fromString","s","n","indexOf","fieldRef","elements","complete","intersect","other","union","contains","empty","object","intersection","element","idf","posting","documentCount","documentsWithTerm","x","log","abs","Token","str","update","fn","t","len","sliceEnd","sliceStart","sliceLength","charAt","separator","tokenMetadata","Pipeline","_stack","registeredFunctions","registerFunction","label","warnIfFunctionNotRegistered","serialised","fnName","arguments","after","existingFn","newFn","pos","before","remove","run","stackLength","memo","j","k","runString","reset","toJSON","Vector","_magnitude","positionForIndex","end","pivotPoint","pivotIndex","insert","insertIdx","upsert","position","magnitude","sumOfSquares","elementsLength","sqrt","dot","otherVector","dotProduct","aLen","bLen","aVal","bVal","similarity","toArray","output","c","w","stem","suffix","firstch","re","re2","re3","re4","toUpperCase","fp","exec","generateStopWordFilter","stopWords","stopWord","TokenSet","final","edges","_nextId","fromArray","finish","root","fromClause","clause","fromFuzzyString","node","editsRemaining","frame","pop","noEditNode","char","insertionNode","substitutionNode","transposeNode","charA","charB","next","prefix","edge","_str","labels","qNode","qEdges","qLen","nEdges","nLen","q","qEdge","nEdge","previousWord","uncheckedNodes","minimizedNodes","word","commonPrefix","minimize","child","nextNode","downTo","childKey","Index","attrs","fieldVectors","tokenSet","fields","queryString","QueryParser","parse","Query","matchingFields","queryVectors","termFieldCache","requiredMatches","prohibitedMatches","clauses","clauseMatches","usePipeline","m","termTokenSet","expandedTerms","field","expandedTerm","termIndex","_index","fieldPosting","matchingDocumentRefs","termField","matchingDocumentsSet","PROHIBITED","boost","l","fieldMatch","matchingDocumentRef","matchingFieldRef","MatchData","allRequiredMatches","allProhibitedMatches","matchingFieldRefs","matches","isNegated","docMatch","fieldVector","serializedIndex","serializedVectors","serializedInvertedIndex","tokenSetBuilder","_fields","_documents","fieldTermFrequencies","fieldLengths","_b","_k1","metadataWhitelist","attributes","RangeError","number","k1","extractor","fieldTerms","metadataKey","calculateAverageFieldLengths","fieldRefs","numberOfFields","accumulator","documentsWithField","averageFieldLength","createFieldVectors","fieldRefsLength","termIdfCache","fieldLength","termFrequencies","termsLength","fieldBoost","docBoost","scoreWithPrecision","tf","round","createTokenSet","use","args","clonedMetadata","metadataKeys","otherMatchData","allFields","String","OPTIONAL","options","QueryParseError","QueryLexer","lexemes","escapeCharPositions","state","lexText","sliceString","subSlices","emit","escapeCharacter","EOS","width","ignore","backup","acceptDigitRun","charCode","charCodeAt","more","FIELD","TERM","EDIT_DISTANCE","BOOST","PRESENCE","lexField","lexer","lexTerm","lexEditDistance","lexBoost","lexEOS","termSeparator","currentClause","lexemeIdx","parseClause","peekLexeme","consumeLexeme","lexeme","nextClause","completedClause","parser","parsePresence","parseField","parseTerm","errorMessage","nextLexeme","possibleFields","f","parseEditDistance","parseBoost","parseInt","isNaN"],"sourceRoot":""}